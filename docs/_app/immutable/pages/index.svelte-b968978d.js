import{S as rn,i as sn,s as on,l as h,u as i,a as q,L as Ze,e as kr,m as u,p as f,v as l,h as r,c as H,M as Ye,q as V,b as y,H as n,N as Xt,O as w,P as $h,Q as na,R as kh,n as Ia,T as jn,F as Nh,I as Eh,J as Th,K as Mh,f as fe,t as be,U as wi,V as Ph,x as we,y as ge,z as ye,C as $e,W as ka,X as Na,g as Sh,d as xh,Y as Go,w as ko,Z as Uo,r as Ah}from"../chunks/index-760eefc7.js";import{m as d,g as Qr,a as ms,p as Oo,e as qh,b as Hh,c as fo,i as Lh,Q as Ih}from"../chunks/Qbit-e7529a99.js";function Fh(e){let t,a,s,o=d(`K = ${e[6]}`)+"",c,p,m=d("r")+"",b,_,N=d("a^r \\mod N = 1")+"",v,k,$,x,O,j=d("r")+"",P,C,F=d(`${e[1]}^{${e[2]}} \\mod ${e[0]} = 1`)+"",S,z,M=d("m")+"",J,Y,Q=d(`${e[1]}^{${e[2]}} = m \\cdot ${e[0]} + 1`)+"",te,I;function E(R,L){return R[2]%2==0?Ch:Vh}let A=E(e),ae=A(e);return{c(){t=h("p"),a=i("As "),s=new Ze(!1),c=i(", the value of "),p=new Ze(!1),b=i(" in "),_=new Ze(!1),v=i(` will
		be informative.`),k=q(),$=h("p"),x=i(`As these are all relatively small numbers, we can try all relevant possible values for
		`),O=new Ze(!1),P=i(" rather quickly and find that "),C=new Ze(!1),S=i(` which means
		that there is an `),z=new Ze(!1),J=i(" for which "),Y=new Ze(!1),te=q(),I=h("p"),ae.c(),this.h()},l(R){t=u(R,"P",{});var L=f(t);a=l(L,"As "),s=Ye(L,!1),c=l(L,", the value of "),p=Ye(L,!1),b=l(L," in "),_=Ye(L,!1),v=l(L,` will
		be informative.`),L.forEach(r),k=H(R),$=u(R,"P",{});var D=f($);x=l(D,`As these are all relatively small numbers, we can try all relevant possible values for
		`),O=Ye(D,!1),P=l(D," rather quickly and find that "),C=Ye(D,!1),S=l(D,` which means
		that there is an `),z=Ye(D,!1),J=l(D," for which "),Y=Ye(D,!1),D.forEach(r),te=H(R),I=u(R,"P",{});var oe=f(I);ae.l(oe),oe.forEach(r),this.h()},h(){s.a=c,p.a=b,_.a=v,O.a=P,C.a=S,z.a=J,Y.a=null},m(R,L){y(R,t,L),n(t,a),s.m(o,t),n(t,c),p.m(m,t),n(t,b),_.m(N,t),n(t,v),y(R,k,L),y(R,$,L),n($,x),O.m(j,$),n($,P),C.m(F,$),n($,S),z.m(M,$),n($,J),Y.m(Q,$),y(R,te,L),y(R,I,L),ae.m(I,null)},p(R,L){L&64&&o!==(o=d(`K = ${R[6]}`)+"")&&s.p(o),L&7&&F!==(F=d(`${R[1]}^{${R[2]}} \\mod ${R[0]} = 1`)+"")&&C.p(F),L&7&&Q!==(Q=d(`${R[1]}^{${R[2]}} = m \\cdot ${R[0]} + 1`)+"")&&Y.p(Q),A===(A=E(R))&&ae?ae.p(R,L):(ae.d(1),ae=A(R),ae&&(ae.c(),ae.m(I,null)))},d(R){R&&r(t),R&&r(k),R&&r($),R&&r(te),R&&r(I),ae.d()}}}function zh(e){let t,a,s,o=d("K \\neq 1")+"",c,p,m=d("a")+"",b,_,N=d("N")+"",v,k,$=d(`K=${e[6]}`)+"",x,O,j=d("a")+"",P;return{c(){t=h("p"),a=i("As in this case "),s=new Ze(!1),c=i(", a new "),p=new Ze(!1),b=i(` is needed. Or to put a more positive
		spin on it, we instantly can found a prime factor for `),_=new Ze(!1),v=i(`, which in fact
		`),k=new Ze(!1),x=i(` is. However, in order to see the whole algorithm in action, we should choose
		a new `),O=new Ze(!1),P=i("."),this.h()},l(C){t=u(C,"P",{});var F=f(t);a=l(F,"As in this case "),s=Ye(F,!1),c=l(F,", a new "),p=Ye(F,!1),b=l(F,` is needed. Or to put a more positive
		spin on it, we instantly can found a prime factor for `),_=Ye(F,!1),v=l(F,`, which in fact
		`),k=Ye(F,!1),x=l(F,` is. However, in order to see the whole algorithm in action, we should choose
		a new `),O=Ye(F,!1),P=l(F,"."),F.forEach(r),this.h()},h(){s.a=c,p.a=b,_.a=v,k.a=x,O.a=P},m(C,F){y(C,t,F),n(t,a),s.m(o,t),n(t,c),p.m(m,t),n(t,b),_.m(N,t),n(t,v),k.m($,t),n(t,x),O.m(j,t),n(t,P)},p(C,F){F&64&&$!==($=d(`K=${C[6]}`)+"")&&k.p($)},d(C){C&&r(t)}}}function Vh(e){let t,a=d("r")+"",s,o,c=d("a")+"",p;return{c(){t=new Ze(!1),s=i(" is odd, we need a new "),o=new Ze(!1),p=i("."),this.h()},l(m){t=Ye(m,!1),s=l(m," is odd, we need a new "),o=Ye(m,!1),p=l(m,"."),this.h()},h(){t.a=s,o.a=p},m(m,b){t.m(a,m,b),y(m,s,b),o.m(c,m,b),y(m,p,b)},p:Ia,d(m){m&&t.d(),m&&r(s),m&&o.d(),m&&r(p)}}}function Ch(e){let t,a=d("r")+"",s,o,c=d("b = a^{\\frac{r}{2}}")+"",p,m,b=d("a^r = m \\cdot N + 1 \\Rightarrow b^2-1 = (b + 1)(b - 1) = m \\cdot N")+"",_,N,v=d(`b = ${e[5]}`)+"",k,$,x=d("N")+"",O,j,P=d("b-1")+"",C,F,S=d("b+1")+"",z,M,J=d(`${Qr(e[0],e[5]-1)}`)+"",Y,Q,te=d(`${Qr(e[0],e[5]+1)}`)+"",I;return{c(){t=new Ze(!1),s=i(" is even, so we can create "),o=new Ze(!1),p=i(`, and expand
			the above so that
			`),m=new Ze(!1),_=i(`. In this
			case, as `),N=new Ze(!1),k=i(`, we can calculate the greatest common divisor for
			`),$=new Ze(!1),O=i(" with "),j=new Ze(!1),C=i(" and "),F=new Ze(!1),z=i(` very quickly, which are
			`),M=new Ze(!1),Y=i(" and "),Q=new Ze(!1),I=i(" respectively"),this.h()},l(E){t=Ye(E,!1),s=l(E," is even, so we can create "),o=Ye(E,!1),p=l(E,`, and expand
			the above so that
			`),m=Ye(E,!1),_=l(E,`. In this
			case, as `),N=Ye(E,!1),k=l(E,`, we can calculate the greatest common divisor for
			`),$=Ye(E,!1),O=l(E," with "),j=Ye(E,!1),C=l(E," and "),F=Ye(E,!1),z=l(E,` very quickly, which are
			`),M=Ye(E,!1),Y=l(E," and "),Q=Ye(E,!1),I=l(E," respectively"),this.h()},h(){t.a=s,o.a=p,m.a=_,N.a=k,$.a=O,j.a=C,F.a=z,M.a=Y,Q.a=I},m(E,A){t.m(a,E,A),y(E,s,A),o.m(c,E,A),y(E,p,A),m.m(b,E,A),y(E,_,A),N.m(v,E,A),y(E,k,A),$.m(x,E,A),y(E,O,A),j.m(P,E,A),y(E,C,A),F.m(S,E,A),y(E,z,A),M.m(J,E,A),y(E,Y,A),Q.m(te,E,A),y(E,I,A)},p(E,A){A&32&&v!==(v=d(`b = ${E[5]}`)+"")&&N.p(v),A&33&&J!==(J=d(`${Qr(E[0],E[5]-1)}`)+"")&&M.p(J),A&33&&te!==(te=d(`${Qr(E[0],E[5]+1)}`)+"")&&Q.p(te)},d(E){E&&t.d(),E&&r(s),E&&o.d(),E&&r(p),E&&m.d(),E&&r(_),E&&N.d(),E&&r(k),E&&$.d(),E&&r(O),E&&j.d(),E&&r(C),E&&F.d(),E&&r(z),E&&M.d(),E&&r(Y),E&&Q.d(),E&&r(I)}}}function Bh(e){let t,a,s,o,c,p,m,b,_,N,v,k,$,x,O,j,P,C=d(` = ${e[3]} \\cdot ${e[4]}`)+"",F,S,z,M,J=d(`a = ${e[1]}`)+"",Y,Q,te=d(`N = ${e[0]}`)+"",I,E,A=d(`K = ${e[6]}`)+"",ae,R,L,D,oe;function ne(W,T){return W[6]!=1?zh:Fh}let Me=ne(e),re=Me(e);return{c(){t=h("div"),a=h("div"),s=i("a:"),o=q(),c=h("input"),m=q(),b=h("input"),N=q(),v=h("div"),k=i("N:"),$=q(),x=h("input"),j=q(),P=h("div"),F=q(),S=h("p"),z=i("The greatest common divisor of "),M=new Ze(!1),Y=i(" and "),Q=new Ze(!1),I=i(` is
	`),E=new Ze(!1),ae=i(". This is very quick to calculate."),R=q(),re.c(),L=kr(),this.h()},l(W){t=u(W,"DIV",{class:!0});var T=f(t);a=u(T,"DIV",{class:!0});var K=f(a);s=l(K,"a:"),K.forEach(r),o=H(T),c=u(T,"INPUT",{class:!0,type:!0,min:!0,max:!0}),m=H(T),b=u(T,"INPUT",{class:!0,type:!0,min:!0,max:!0}),N=H(T),v=u(T,"DIV",{class:!0});var ee=f(v);k=l(ee,"N:"),ee.forEach(r),$=H(T),x=u(T,"INPUT",{class:!0,type:!0,min:!0,max:!0}),j=H(T),P=u(T,"DIV",{id:!0,class:!0});var Pe=f(P);Pe.forEach(r),T.forEach(r),F=H(W),S=u(W,"P",{});var ke=f(S);z=l(ke,"The greatest common divisor of "),M=Ye(ke,!1),Y=l(ke," and "),Q=Ye(ke,!1),I=l(ke,` is
	`),E=Ye(ke,!1),ae=l(ke,". This is very quick to calculate."),ke.forEach(r),R=H(W),re.l(W),L=kr(),this.h()},h(){V(a,"class","varlabel svelte-1lqus27"),V(c,"class","numsel svelte-1lqus27"),V(c,"type","number"),V(c,"min",2),V(c,"max",p=e[0]-1),V(b,"class","slider svelte-1lqus27"),V(b,"type","range"),V(b,"min",2),V(b,"max",_=e[0]-1),V(v,"class","varlabel svelte-1lqus27"),V(x,"class","numsel svelte-1lqus27"),V(x,"type","number"),V(x,"min","1"),V(x,"max",e[7]),V(P,"id","decomp"),V(P,"class","svelte-1lqus27"),V(t,"class","cpanel svelte-1lqus27"),M.a=Y,Q.a=I,E.a=ae},m(W,T){y(W,t,T),n(t,a),n(a,s),n(t,o),n(t,c),Xt(c,e[1]),n(t,m),n(t,b),Xt(b,e[1]),n(t,N),n(t,v),n(v,k),n(t,$),n(t,x),Xt(x,e[0]),n(t,j),n(t,P),P.innerHTML=C,y(W,F,T),y(W,S,T),n(S,z),M.m(J,S),n(S,Y),Q.m(te,S),n(S,I),E.m(A,S),n(S,ae),y(W,R,T),re.m(W,T),y(W,L,T),D||(oe=[w(c,"input",e[10]),w(b,"change",e[11]),w(b,"input",e[11]),$h(O=e[8].call(null,x,e[0])),w(x,"input",e[12])],D=!0)},p(W,[T]){T&1&&p!==(p=W[0]-1)&&V(c,"max",p),T&2&&na(c.value)!==W[1]&&Xt(c,W[1]),T&1&&_!==(_=W[0]-1)&&V(b,"max",_),T&2&&Xt(b,W[1]),O&&kh(O.update)&&T&1&&O.update.call(null,W[0]),T&1&&na(x.value)!==W[0]&&Xt(x,W[0]),T&24&&C!==(C=d(` = ${W[3]} \\cdot ${W[4]}`)+"")&&(P.innerHTML=C),T&2&&J!==(J=d(`a = ${W[1]}`)+"")&&M.p(J),T&1&&te!==(te=d(`N = ${W[0]}`)+"")&&Q.p(te),T&64&&A!==(A=d(`K = ${W[6]}`)+"")&&E.p(A),Me===(Me=ne(W))&&re?re.p(W,T):(re.d(1),re=Me(W),re&&(re.c(),re.m(L.parentNode,L)))},i:Ia,o:Ia,d(W){W&&r(t),W&&r(F),W&&r(S),W&&r(R),re.d(W),W&&r(L),D=!1,jn(oe)}}}function Rh(e,t){for(let a=1;a<t;a++){let s=e%t;for(let o=1;o<a;o++)s=s*e%t;if(s==1)return a}return 0}function Qh(e,t,a){let s,o,c,{bits:p=7}=t,m=Math.pow(2,p)-1;const b=new Set;for(let S=2;S<=m/2;S++){let z=!0;b.forEach(function(M){S%M==0&&(z=!1)}),z&&b.add(S)}let _=39,N=_,v=7,k,$;function x(S){for(const z of b)if(b.has(S/z))return a(3,k=z),a(4,$=S/z),!0;return!1}x(_);function O(S,z){return{update(M){let J=M-N;if(J!=0){for(;!x(M);)if(M+=J,M<=2||M>=m)return;j(M)}}}}function j(S){a(0,_=S),N=_,a(1,v=v>=_?_-1:v)}function P(){v=na(this.value),a(1,v)}function C(){v=na(this.value),a(1,v)}function F(){_=na(this.value),a(0,_)}return e.$$set=S=>{"bits"in S&&a(9,p=S.bits)},e.$$.update=()=>{e.$$.dirty&3&&a(2,s=Rh(v,_)),e.$$.dirty&3&&a(6,o=Qr(_,v)),e.$$.dirty&6&&a(5,c=Math.pow(v,s/2))},[_,v,s,k,$,c,o,m,O,p,P,C,F]}class jh extends rn{constructor(t){super(),sn(this,t,Qh,Bh,on,{bits:9})}}function Dh(e){return e<.5?4*e*e*e:.5*Math.pow(2*e-2,3)+1}function Wh(e){const t=e-1;return t*t*t+1}function Gh(e){return--e*e*e*e*e+1}function Uh(e,{delay:t=0,duration:a=400,easing:s=Wh,start:o=0,opacity:c=0}={}){const p=getComputedStyle(e),m=+p.opacity,b=p.transform==="none"?"":p.transform,_=1-o,N=m*(1-c);return{delay:t,duration:a,easing:s,css:(v,k)=>`
			transform: ${b} scale(${1-_*k});
			opacity: ${m-N*k}
		`}}function Ko(e,{delay:t=0,speed:a,duration:s,easing:o=Dh}={}){let c=e.getTotalLength();const p=getComputedStyle(e);return p.strokeLinecap!=="butt"&&(c+=parseInt(p.strokeWidth)),s===void 0?a===void 0?s=800:s=c/a:typeof s=="function"&&(s=s(c)),{delay:t,duration:s,easing:o,css:(m,b)=>`stroke-dasharray: ${m*c} ${b*c}`}}function Zo(e){let t,a;return{c(){t=h("div"),this.h()},l(s){t=u(s,"DIV",{class:!0});var o=f(t);o.forEach(r),this.h()},h(){V(t,"class","hover-inner svelte-5qv8za")},m(s,o){y(s,t,o),t.innerHTML=e[0]},p(s,o){e=s,o&1&&(t.innerHTML=e[0])},i(s){a||wi(()=>{a=Ph(t,Uh,{duration:150,easing:Gh,opacity:0}),a.start()})},o:Ia,d(s){s&&r(t)}}}function Oh(e){let t,a,s,o;const c=e[5].default,p=Nh(c,e,e[4],null);let m=e[1]&&Zo(e);return{c(){t=h("span"),p&&p.c(),m&&m.c(),this.h()},l(b){t=u(b,"SPAN",{class:!0});var _=f(t);p&&p.l(_),m&&m.l(_),_.forEach(r),this.h()},h(){V(t,"class","hover-outer svelte-5qv8za")},m(b,_){y(b,t,_),p&&p.m(t,null),m&&m.m(t,null),a=!0,s||(o=[w(t,"mouseenter",e[2]),w(t,"mouseleave",e[3])],s=!0)},p(b,[_]){p&&p.p&&(!a||_&16)&&Eh(p,c,b,b[4],a?Mh(c,b[4],_,null):Th(b[4]),null),b[1]?m?(m.p(b,_),_&2&&fe(m,1)):(m=Zo(b),m.c(),fe(m,1),m.m(t,null)):m&&(m.d(1),m=null)},i(b){a||(fe(p,b),fe(m),a=!0)},o(b){be(p,b),a=!1},d(b){b&&r(t),p&&p.d(b),m&&m.d(),s=!1,jn(o)}}}function Kh(e,t,a){let{$$slots:s={},$$scope:o}=t,{hovertext:c}=t,p=!1;const m=()=>a(1,p=!0),b=()=>a(1,p=!1);return e.$$set=_=>{"hovertext"in _&&a(0,c=_.hovertext),"$$scope"in _&&a(4,o=_.$$scope)},[c,p,m,b,o,s]}class tt extends rn{constructor(t){super(),sn(this,t,Kh,Oh,on,{hovertext:0})}}const Zh=`<a href="https://en.wikipedia.org/wiki/Semiprime"><h3 class="text-lg font-semibold">Semiprime</h3></a><p>In mathematics, a <b>semiprime</b> is a natural number that is the product of exactly two prime numbers. The two primes in the product may equal each other, so the semiprimes include the squares of prime numbers.
Because there are infinitely many prime numbers, there are also infinitely many semiprimes. Semiprimes are also called <b>biprimes</b>.</p>`,Yh='<a href="https://en.wikipedia.org/wiki/General_number_field_sieve"><h3>General number field sieve</h3></a><p>In number theory, the <b>general number field sieve</b> (<b>GNFS</b>) is the most efficient classical algorithm known for factoring integers larger than <span class="texhtml ">10<sup>100</sup></span>. Heuristically, its complexity for factoring an integer <span class="texhtml mvar" style="font-style:italic">n</span> (consisting of <span class="texhtml ">\u230Alog<sub>2</sub> <span class="texhtml mvar" style="font-style:italic">n</span>\u230B + 1</span> bits) is of the form</p><dl><dd><span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/fcc5450b9f039008c0a728e15b6c66f24dafbb30" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-2.505ex;width:57.324ex;height:6.343ex" /></span></dd></dl>',Jh='<a href="https://en.wikipedia.org/wiki/Exponential_function"><h3>Exponential function</h3></a><p>The <b>exponential function</b> is a mathematical function denoted by <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/9dd9b17af32bc3cffe927507c7bccf4e2a96f585" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:14.207ex;height:2.843ex" /></span> or <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/841c0d168e64191c45a45e54c7e447defd17ec6a" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:2.256ex;height:2.343ex" /></span>. Unless otherwise specified, the term generally refers to the positive-valued function of a real variable, although it can be extended to the complex numbers or generalized to other mathematical objects like matrices or Lie algebras. The exponential function originated from the notion of exponentiation, but modern definitions allow it to be rigorously extended to all real arguments, including irrational numbers. Its ubiquitous occurrence in pure and applied mathematics led mathematician Walter Rudin to opine that the exponential function is "the most important function in mathematics".</p>',Xh='<a href="https://en.wikipedia.org/wiki/Quantum_computing"><h3>Quantum computing</h3></a><p><b>Quantum computing</b> is a type of computation whose operations can harness the phenomena of quantum mechanics, such as superposition, interference, and entanglement. Devices that perform quantum computations are known as <b>quantum computers</b>. Though current quantum computers are too small to outperform usual (classical) computers for practical applications, larger realizations are believed to be capable of solving certain computational problems, such as integer factorization, substantially faster than classical computers. The study of quantum computing is a subfield of quantum information science.</p>',eu=`<a href="https://en.wikipedia.org/wiki/Cubic_function"><h3>Cubic function</h3></a><p>In mathematics, a <b>cubic function</b> is a function of the form <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/9cc573924b3e958061c7436c149efc76e4098668" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:26.585ex;height:3.176ex" /></span>
where the coefficients <span class="texhtml mvar" style="font-style:italic">a</span>, <span class="texhtml mvar" style="font-style:italic">b</span>, <span class="texhtml mvar" style="font-style:italic">c</span>, and <span class="texhtml mvar" style="font-style:italic">d</span> are complex numbers, and the variable <span class="texhtml mvar" style="font-style:italic">x</span> takes real values, and <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f455a7f96d74aa94573d8e32da3b240ab0aa294f" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:5.491ex;height:2.676ex" /></span>. In other words, it is both a polynomial function of degree three, and a real function. In particular, the domain and the codomain are the set of the real numbers.</p>`,tu='<a href="https://en.wikipedia.org/wiki/Computational_complexity"><h3 class="text-lg font-semibold">Computational complexity</h3></a><p>In computer science, the <b>computational complexity</b> or simply <b>complexity</b> of an algorithm is the amount of resources required to run it. Particular focus is given to time and memory requirements. The complexity of a problem is the complexity of the best algorithms that allow solving the problem.</p>',nu=`<a href="https://en.wikipedia.org/wiki/Linear_function"><h3>Linear function</h3></a><p>In mathematics, the term <b>linear function</b> refers to two distinct but related notions:</p><ul><li>In calculus and related areas, a linear function is a function whose graph is a straight line, that is, a polynomial function of degree zero or one. For distinguishing such a linear function from the other concept, the term affine function is often used.</li>
<li>In linear algebra, mathematical analysis, and functional analysis, a linear function is a linear map.</li></ul>`;function au(e){let t;return{c(){t=i("semiprime")},l(a){t=l(a,"semiprime")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function ru(e){let t;return{c(){t=i("number field sieve")},l(a){t=l(a,"number field sieve")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function su(e){let t;return{c(){t=i("exponentially")},l(a){t=l(a,"exponentially")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function ou(e){let t;return{c(){t=i("quantum computer")},l(a){t=l(a,"quantum computer")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function iu(e){let t;return{c(){t=i("cubically")},l(a){t=l(a,"cubically")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function lu(e){let t;return{c(){t=i("Computational complexity")},l(a){t=l(a,"Computational complexity")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function hu(e){let t;return{c(){t=i("linearly")},l(a){t=l(a,"linearly")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function uu(e){let t,a,s,o,c,p,m=d("p, q \\in \\mathbb{P}")+"",b,_,N,v,k=d("N \\in \\mathbb{N}")+"",$,x,O=d("N = p \\cdot q")+"",j,P,C=d("15")+"",F,S,z=d("3")+"",M,J,Y=d("5")+"",Q,te,I=d("62615533")+"",E,A,ae,R,L,D,oe,ne,Me,re,W=d("100")+"",T,K,ee=d("3")+"",Pe,ke,Le=d("200")+"",Ie,Se,Be=d("5")+"",Ve,mt,Ne,ce,wt,xe,Je,le,Xe,pt;return _=new tt({props:{hovertext:Zh,$$slots:{default:[au]},$$scope:{ctx:e}}}),A=new tt({props:{hovertext:Yh,$$slots:{default:[ru]},$$scope:{ctx:e}}}),R=new tt({props:{hovertext:Jh,$$slots:{default:[su]},$$scope:{ctx:e}}}),D=new tt({props:{hovertext:Xh,$$slots:{default:[ou]},$$scope:{ctx:e}}}),ne=new tt({props:{hovertext:eu,$$slots:{default:[iu]},$$scope:{ctx:e}}}),ce=new tt({props:{hovertext:tu,$$slots:{default:[lu]},$$scope:{ctx:e}}}),xe=new tt({props:{hovertext:nu,$$slots:{default:[hu]},$$scope:{ctx:e}}}),{c(){t=h("h2"),a=i("Description of the problem"),s=q(),o=h("p"),c=i("We would like to find the prime factors "),p=h("span"),b=i(" of a large "),we(_.$$.fragment),N=q(),v=h("span"),$=i(" (so that "),x=h("span"),j=i("). Finding these factors for a small number, such as "),P=h("span"),F=i(", is quite easy. In fact, you may figure it out just by looking at it and recalling your grade school studies: the factors are "),S=h("span"),M=i(" and "),J=h("span"),Q=i(". But what are the prime factors of, say, "),te=h("span"),E=i("? It turns out that, using the best known classical (meaning non-quantum) algorithm (the so called "),we(A.$$.fragment),ae=i("), solving the factoring problem scales "),we(R.$$.fragment),L=i(" with the number of digits of the semiprime that we want to factor. With the help of Shor's algorithm and a sufficiently large "),we(D.$$.fragment),oe=i(", the same problem scales roughly "),we(ne.$$.fragment),Me=i(" with the number of digits. (In fact, the algorithm does slighly better than that, but the precise formula is a bit complicated and is beside the point.) To illustrate what this means in practical terms, imagine the following. If factoring a "),re=h("span"),T=i("-digit number with Shor's algorithm on a quantum computer takes one second, factoring the same number with the number field sieve on a classical computer takes more than "),K=h("span"),Pe=i(" hours. If we now try with a "),ke=h("span"),Ie=i("-digit number, Shor's algorithm finishes in roughly "),Se=h("span"),Ve=i(" seconds, while the classical solution would take more than a year!"),mt=q(),Ne=h("p"),we(ce.$$.fragment),wt=i(` refers to how the time - or number of elementary operations - required to solve a given problem algorithmically grows with the size of the input. Let's say you have to find the longest book you have ever read. One way to approach this problem is to list the books you have read one by one, label the first one as the longest, and whenever you encounter an even longer book, it takes the place of the former. This way, you only have to keep track of the largest page number so far, and the book associated with it. The "elementary operation" in this case is checking the number of pages of the next book and comparing that with the previous maximum. If you have twice or three times as many books, this procedure requires twice or three times as many elementary operations. In other words, it grows `),we(xe.$$.fragment),Je=i(" in the number of books. So, while the solution can be found using the same algorithm, the number of elementary operations required to carry out that algorithm depends on the size of the input. This is true for almost all algorithms that are designed to solve mathematical problems. However, how fast that growth is, makes all the difference between them.")},l(G){t=u(G,"H2",{});var _e=f(t);a=l(_e,"Description of the problem"),_e.forEach(r),s=H(G),o=u(G,"P",{});var U=f(o);c=l(U,"We would like to find the prime factors "),p=u(U,"SPAN",{});var ct=f(p);ct.forEach(r),b=l(U," of a large "),ge(_.$$.fragment,U),N=H(U),v=u(U,"SPAN",{});var nt=f(v);nt.forEach(r),$=l(U," (so that "),x=u(U,"SPAN",{});var je=f(x);je.forEach(r),j=l(U,"). Finding these factors for a small number, such as "),P=u(U,"SPAN",{});var dt=f(P);dt.forEach(r),F=l(U,", is quite easy. In fact, you may figure it out just by looking at it and recalling your grade school studies: the factors are "),S=u(U,"SPAN",{});var at=f(S);at.forEach(r),M=l(U," and "),J=u(U,"SPAN",{});var De=f(J);De.forEach(r),Q=l(U,". But what are the prime factors of, say, "),te=u(U,"SPAN",{});var kt=f(te);kt.forEach(r),E=l(U,"? It turns out that, using the best known classical (meaning non-quantum) algorithm (the so called "),ge(A.$$.fragment,U),ae=l(U,"), solving the factoring problem scales "),ge(R.$$.fragment,U),L=l(U," with the number of digits of the semiprime that we want to factor. With the help of Shor's algorithm and a sufficiently large "),ge(D.$$.fragment,U),oe=l(U,", the same problem scales roughly "),ge(ne.$$.fragment,U),Me=l(U," with the number of digits. (In fact, the algorithm does slighly better than that, but the precise formula is a bit complicated and is beside the point.) To illustrate what this means in practical terms, imagine the following. If factoring a "),re=u(U,"SPAN",{});var _t=f(re);_t.forEach(r),T=l(U,"-digit number with Shor's algorithm on a quantum computer takes one second, factoring the same number with the number field sieve on a classical computer takes more than "),K=u(U,"SPAN",{});var ot=f(K);ot.forEach(r),Pe=l(U," hours. If we now try with a "),ke=u(U,"SPAN",{});var Pt=f(ke);Pt.forEach(r),Ie=l(U,"-digit number, Shor's algorithm finishes in roughly "),Se=u(U,"SPAN",{});var ie=f(Se);ie.forEach(r),Ve=l(U," seconds, while the classical solution would take more than a year!"),U.forEach(r),mt=H(G),Ne=u(G,"P",{});var Ee=f(Ne);ge(ce.$$.fragment,Ee),wt=l(Ee,` refers to how the time - or number of elementary operations - required to solve a given problem algorithmically grows with the size of the input. Let's say you have to find the longest book you have ever read. One way to approach this problem is to list the books you have read one by one, label the first one as the longest, and whenever you encounter an even longer book, it takes the place of the former. This way, you only have to keep track of the largest page number so far, and the book associated with it. The "elementary operation" in this case is checking the number of pages of the next book and comparing that with the previous maximum. If you have twice or three times as many books, this procedure requires twice or three times as many elementary operations. In other words, it grows `),ge(xe.$$.fragment,Ee),Je=l(Ee," in the number of books. So, while the solution can be found using the same algorithm, the number of elementary operations required to carry out that algorithm depends on the size of the input. This is true for almost all algorithms that are designed to solve mathematical problems. However, how fast that growth is, makes all the difference between them."),Ee.forEach(r)},m(G,_e){y(G,t,_e),n(t,a),y(G,s,_e),y(G,o,_e),n(o,c),n(o,p),p.innerHTML=m,n(o,b),ye(_,o,null),n(o,N),n(o,v),v.innerHTML=k,n(o,$),n(o,x),x.innerHTML=O,n(o,j),n(o,P),P.innerHTML=C,n(o,F),n(o,S),S.innerHTML=z,n(o,M),n(o,J),J.innerHTML=Y,n(o,Q),n(o,te),te.innerHTML=I,n(o,E),ye(A,o,null),n(o,ae),ye(R,o,null),n(o,L),ye(D,o,null),n(o,oe),ye(ne,o,null),n(o,Me),n(o,re),re.innerHTML=W,n(o,T),n(o,K),K.innerHTML=ee,n(o,Pe),n(o,ke),ke.innerHTML=Le,n(o,Ie),n(o,Se),Se.innerHTML=Be,n(o,Ve),y(G,mt,_e),y(G,Ne,_e),ye(ce,Ne,null),n(Ne,wt),ye(xe,Ne,null),n(Ne,Je),le=!0,Xe||(pt=[w(p,"mouseenter",e[0]),w(v,"mouseenter",e[1]),w(x,"mouseenter",e[2]),w(P,"mouseenter",e[3]),w(S,"mouseenter",e[4]),w(J,"mouseenter",e[5]),w(te,"mouseenter",e[6]),w(re,"mouseenter",e[7]),w(K,"mouseenter",e[8]),w(ke,"mouseenter",e[9]),w(Se,"mouseenter",e[10])],Xe=!0)},p(G,[_e]){const U={};_e&2048&&(U.$$scope={dirty:_e,ctx:G}),_.$set(U);const ct={};_e&2048&&(ct.$$scope={dirty:_e,ctx:G}),A.$set(ct);const nt={};_e&2048&&(nt.$$scope={dirty:_e,ctx:G}),R.$set(nt);const je={};_e&2048&&(je.$$scope={dirty:_e,ctx:G}),D.$set(je);const dt={};_e&2048&&(dt.$$scope={dirty:_e,ctx:G}),ne.$set(dt);const at={};_e&2048&&(at.$$scope={dirty:_e,ctx:G}),ce.$set(at);const De={};_e&2048&&(De.$$scope={dirty:_e,ctx:G}),xe.$set(De)},i(G){le||(fe(_.$$.fragment,G),fe(A.$$.fragment,G),fe(R.$$.fragment,G),fe(D.$$.fragment,G),fe(ne.$$.fragment,G),fe(ce.$$.fragment,G),fe(xe.$$.fragment,G),le=!0)},o(G){be(_.$$.fragment,G),be(A.$$.fragment,G),be(R.$$.fragment,G),be(D.$$.fragment,G),be(ne.$$.fragment,G),be(ce.$$.fragment,G),be(xe.$$.fragment,G),le=!1},d(G){G&&r(t),G&&r(s),G&&r(o),$e(_),$e(A),$e(R),$e(D),$e(ne),G&&r(mt),G&&r(Ne),$e(ce),$e(xe),Xe=!1,jn(pt)}}}function Rn(e){console.log(e)}function fu(e){return[()=>Rn(["q","P","p"]),()=>Rn(["N"]),()=>Rn(["q","p","N"]),()=>Rn([]),()=>Rn([]),()=>Rn([]),()=>Rn([]),()=>Rn([]),()=>Rn([]),()=>Rn([]),()=>Rn([])]}class mu extends rn{constructor(t){super(),sn(this,t,fu,uu,on,{})}}const pu='<a href="https://en.wikipedia.org/wiki/Greatest_common_divisor"><h3>Greatest common divisor</h3></a><p>In mathematics, the <b>greatest common divisor</b> (<b>GCD</b>) of two or more integers, which are not all zero, is the largest positive integer that divides each of the integers. For two integers <i>x</i>, <i>y</i>, the greatest common divisor of <i>x</i> and <i>y</i> is denoted <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/24c083a217bb5e2d3468e683c957f220a683e4d8" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:8.816ex;height:2.843ex" /></span>. For example, the GCD of 8 and 12 is 4, that is, <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/cabed257e6ea789ef3febd9add3a7f3ef2237361" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:14.079ex;height:2.843ex" /></span>.</p>',cu=`<a href="https://en.wikipedia.org/wiki/Euclidean_algorithm"><h3>Euclidean algorithm</h3></a><p>In mathematics, the <b>Euclidean algorithm</b>, or <b>Euclid's algorithm</b>, is an efficient method for computing the greatest common divisor (GCD) of two integers (numbers), the largest number that divides them both without a remainder. It is named after the ancient Greek mathematician Euclid, who first described it in <span>his <i>Elements</i></span> .
It is an example of an <i>algorithm</i>, a step-by-step procedure for performing a calculation according to well-defined rules,
and is one of the oldest algorithms in common use. It can be used to reduce fractions to their simplest form, and is a part of many other number-theoretic and cryptographic calculations.</p>`;function du(e){let t;return{c(){t=i("greatest common divisor")},l(a){t=l(a,"greatest common divisor")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function _u(e){let t;return{c(){t=i("Euclid's algorithm")},l(a){t=l(a,"Euclid's algorithm")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function bu(e){let t,a,s,o,c,p,m,b,_,N,v,k=d("a \\in \\mathbb{N}, 1 < a < N")+"",$,x,O=d("a")+"",j,P,C=d("N")+"",F,S,z=d("\\gcd(a, N) = 1")+"",M,J,Y=d("\\gcd")+"",Q,te,I,E,A=d("a")+"",ae,R,L=d("N")+"",D,oe,ne=d("N")+"",Me,re,W,T,K,ee,Pe=d("f(r): \\mathbb{N} \\rightarrow \\mathbb{N} = a^r \\mod N")+"",ke,Le,Ie=d("0 < \\hat{r} < N")+"",Se,Be,Ve=d("f(\\hat{r}) = 1")+"",mt,Ne,ce=d("\\hat{r}")+"",wt,xe,Je=d("a")+"",le,Xe,pt,G,_e,U,ct=d("\\hat{r}")+"",nt,je,dt=d("\\hat{r}")+"",at,De,kt=d("m \\in \\mathbb{N}")+"",_t,ot,Pt=d("a^{\\hat{r}} = m \\cdot N + 1")+"",ie,Ee,he=d("b = a^{\\frac{\\hat{r}}{2}}")+"",Ht,gt,en=d("b^2 = (a^{\\frac{\\hat{r}}{2}})^2 = a^{\\hat{r}}")+"",We,Nt,Ot=d("b^2 - 1 = (b + 1)(b - 1)")+"",zt,vt,Vt=d("(b + 1)(b - 1) = m \\cdot N")+"",Et,dn,yt,Ke,St,bt,Oe=d("\\gcd(a^{\\frac{r}{2} - 1}, N)")+"",et,it,Te=d("\\gcd(a^{\\frac{r}{2} + 1}, N)")+"",Tt,lt,_n,$t,Lt,bn,ht,Kt,ln,jt,ze,se,Ce,Ue=d("\\hat{r}")+"",$n,It,xt=d("1")+"",ra,Zt,qe=d("N")+"",Hn,Dt,me=d("N")+"",Ln,Wt,hn,Dn;return te=new tt({props:{hovertext:pu,$$slots:{default:[du]},$$scope:{ctx:e}}}),lt=new tt({props:{hovertext:cu,$$slots:{default:[_u]},$$scope:{ctx:e}}}),{c(){t=h("h2"),a=i("Solution"),s=q(),o=h("p"),c=i("The factoring problem can be solved with the following simple, but very time-consuming algorithm:"),p=q(),m=h("ol"),b=h("li"),_=h("p"),N=i("We pick a random number "),v=h("span"),$=i(" and make sure that "),x=h("span"),j=i(" and "),P=h("span"),F=i(" are relative primes, meaning "),S=h("span"),M=i(", where "),J=h("span"),Q=i(" stands for "),we(te.$$.fragment),I=i(". (In case "),E=h("span"),ae=i(" happens to be a factor of "),R=h("span"),D=i(", the entire problem is solved and no further steps are required, but that is highly unlikely if "),oe=h("span"),Me=i(" is large.)"),re=q(),W=h("li"),T=h("p"),K=i("Next, we construct the function "),ee=h("span"),ke=i(" and find the smallest integer "),Le=h("span"),Se=i(" such that "),Be=h("span"),mt=i(". If "),Ne=h("span"),wt=i(" turns out to be odd, we unfortunately have to repeat the entire procedure with a different "),xe=h("span"),le=i(" parameter."),Xe=q(),pt=h("li"),G=h("p"),_e=i("If we're lucky and "),U=h("span"),nt=i(" is even, we can proceed. From the definition of "),je=h("span"),at=i(" follows that there's "),De=h("span"),_t=i(" such that "),ot=h("span"),ie=i(". We can then define the integer "),Ee=h("span"),Ht=i(", which means "),gt=h("span"),We=i(". Also, we can make use of a well-known algebraic identity to write "),Nt=h("span"),zt=i(". Putting together these three equations, we find that "),vt=h("span"),Et=i("."),dn=q(),yt=h("li"),Ke=h("p"),St=i("And then we're done, because the prime factors we're looking for are "),bt=h("span"),et=i(" and "),it=h("span"),Tt=i(", and these are very easy to compute with the help of "),we(lt.$$.fragment),_n=i("."),$t=q(),Lt=h("p"),bn=i("For a more illuminating explanation, see the video "),ht=h("a"),Kt=i("Hacking at Quantum Speed with Shor's Algorithm"),ln=i(" by PBS Infinite Series."),jt=q(),ze=h("p"),se=i("The problem with this solution is that in order to find "),Ce=h("span"),$n=i(", we might have to check all possible values between "),It=h("span"),ra=i(" and "),Zt=h("span"),Hn=i(" one after the other, which is an insane amount of computation if "),Dt=h("span"),Ln=i(" is number with several hundreds of digits. But that's only the case if we're trying with a classical computer."),this.h()},l(ue){t=u(ue,"H2",{});var ut=f(t);a=l(ut,"Solution"),ut.forEach(r),s=H(ue),o=u(ue,"P",{});var Ct=f(o);c=l(Ct,"The factoring problem can be solved with the following simple, but very time-consuming algorithm:"),Ct.forEach(r),p=H(ue),m=u(ue,"OL",{});var pe=f(m);b=u(pe,"LI",{});var vn=f(b);_=u(vn,"P",{});var He=f(_);N=l(He,"We pick a random number "),v=u(He,"SPAN",{});var In=f(v);In.forEach(r),$=l(He," and make sure that "),x=u(He,"SPAN",{});var Gt=f(x);Gt.forEach(r),j=l(He," and "),P=u(He,"SPAN",{});var Ea=f(P);Ea.forEach(r),F=l(He," are relative primes, meaning "),S=u(He,"SPAN",{});var Fn=f(S);Fn.forEach(r),M=l(He,", where "),J=u(He,"SPAN",{});var tn=f(J);tn.forEach(r),Q=l(He," stands for "),ge(te.$$.fragment,He),I=l(He,". (In case "),E=u(He,"SPAN",{});var kn=f(E);kn.forEach(r),ae=l(He," happens to be a factor of "),R=u(He,"SPAN",{});var un=f(R);un.forEach(r),D=l(He,", the entire problem is solved and no further steps are required, but that is highly unlikely if "),oe=u(He,"SPAN",{});var Mt=f(oe);Mt.forEach(r),Me=l(He," is large.)"),He.forEach(r),vn.forEach(r),re=H(pe),W=u(pe,"LI",{});var zn=f(W);T=u(zn,"P",{});var rt=f(T);K=l(rt,"Next, we construct the function "),ee=u(rt,"SPAN",{});var Nn=f(ee);Nn.forEach(r),ke=l(rt," and find the smallest integer "),Le=u(rt,"SPAN",{});var Wn=f(Le);Wn.forEach(r),Se=l(rt," such that "),Be=u(rt,"SPAN",{});var Ta=f(Be);Ta.forEach(r),mt=l(rt,". If "),Ne=u(rt,"SPAN",{});var En=f(Ne);En.forEach(r),wt=l(rt," turns out to be odd, we unfortunately have to repeat the entire procedure with a different "),xe=u(rt,"SPAN",{});var oa=f(xe);oa.forEach(r),le=l(rt," parameter."),rt.forEach(r),zn.forEach(r),Xe=H(pe),pt=u(pe,"LI",{});var wn=f(pt);G=u(wn,"P",{});var Ge=f(G);_e=l(Ge,"If we're lucky and "),U=u(Ge,"SPAN",{});var Mr=f(U);Mr.forEach(r),nt=l(Ge," is even, we can proceed. From the definition of "),je=u(Ge,"SPAN",{});var Gn=f(je);Gn.forEach(r),at=l(Ge," follows that there's "),De=u(Ge,"SPAN",{});var de=f(De);de.forEach(r),_t=l(Ge," such that "),ot=u(Ge,"SPAN",{});var Ma=f(ot);Ma.forEach(r),ie=l(Ge,". We can then define the integer "),Ee=u(Ge,"SPAN",{});var Tn=f(Ee);Tn.forEach(r),Ht=l(Ge,", which means "),gt=u(Ge,"SPAN",{});var Un=f(gt);Un.forEach(r),We=l(Ge,". Also, we can make use of a well-known algebraic identity to write "),Nt=u(Ge,"SPAN",{});var Pa=f(Nt);Pa.forEach(r),zt=l(Ge,". Putting together these three equations, we find that "),vt=u(Ge,"SPAN",{});var Mn=f(vt);Mn.forEach(r),Et=l(Ge,"."),Ge.forEach(r),wn.forEach(r),dn=H(pe),yt=u(pe,"LI",{});var Vn=f(yt);Ke=u(Vn,"P",{});var fn=f(Ke);St=l(fn,"And then we're done, because the prime factors we're looking for are "),bt=u(fn,"SPAN",{});var Pn=f(bt);Pn.forEach(r),et=l(fn," and "),it=u(fn,"SPAN",{});var On=f(it);On.forEach(r),Tt=l(fn,", and these are very easy to compute with the help of "),ge(lt.$$.fragment,fn),_n=l(fn,"."),fn.forEach(r),Vn.forEach(r),pe.forEach(r),$t=H(ue),Lt=u(ue,"P",{});var Kn=f(Lt);bn=l(Kn,"For a more illuminating explanation, see the video "),ht=u(Kn,"A",{href:!0});var gn=f(ht);Kt=l(gn,"Hacking at Quantum Speed with Shor's Algorithm"),gn.forEach(r),ln=l(Kn," by PBS Infinite Series."),Kn.forEach(r),jt=H(ue),ze=u(ue,"P",{});var Ft=f(ze);se=l(Ft,"The problem with this solution is that in order to find "),Ce=u(Ft,"SPAN",{});var Sa=f(Ce);Sa.forEach(r),$n=l(Ft,", we might have to check all possible values between "),It=u(Ft,"SPAN",{});var Sn=f(It);Sn.forEach(r),ra=l(Ft," and "),Zt=u(Ft,"SPAN",{});var Zn=f(Zt);Zn.forEach(r),Hn=l(Ft," one after the other, which is an insane amount of computation if "),Dt=u(Ft,"SPAN",{});var xa=f(Dt);xa.forEach(r),Ln=l(Ft," is number with several hundreds of digits. But that's only the case if we're trying with a classical computer."),Ft.forEach(r),this.h()},h(){V(ht,"href","https://www.youtube.com/watch?v=wUwZZaI5u0c&t=731s")},m(ue,ut){y(ue,t,ut),n(t,a),y(ue,s,ut),y(ue,o,ut),n(o,c),y(ue,p,ut),y(ue,m,ut),n(m,b),n(b,_),n(_,N),n(_,v),v.innerHTML=k,n(_,$),n(_,x),x.innerHTML=O,n(_,j),n(_,P),P.innerHTML=C,n(_,F),n(_,S),S.innerHTML=z,n(_,M),n(_,J),J.innerHTML=Y,n(_,Q),ye(te,_,null),n(_,I),n(_,E),E.innerHTML=A,n(_,ae),n(_,R),R.innerHTML=L,n(_,D),n(_,oe),oe.innerHTML=ne,n(_,Me),n(m,re),n(m,W),n(W,T),n(T,K),n(T,ee),ee.innerHTML=Pe,n(T,ke),n(T,Le),Le.innerHTML=Ie,n(T,Se),n(T,Be),Be.innerHTML=Ve,n(T,mt),n(T,Ne),Ne.innerHTML=ce,n(T,wt),n(T,xe),xe.innerHTML=Je,n(T,le),n(m,Xe),n(m,pt),n(pt,G),n(G,_e),n(G,U),U.innerHTML=ct,n(G,nt),n(G,je),je.innerHTML=dt,n(G,at),n(G,De),De.innerHTML=kt,n(G,_t),n(G,ot),ot.innerHTML=Pt,n(G,ie),n(G,Ee),Ee.innerHTML=he,n(G,Ht),n(G,gt),gt.innerHTML=en,n(G,We),n(G,Nt),Nt.innerHTML=Ot,n(G,zt),n(G,vt),vt.innerHTML=Vt,n(G,Et),n(m,dn),n(m,yt),n(yt,Ke),n(Ke,St),n(Ke,bt),bt.innerHTML=Oe,n(Ke,et),n(Ke,it),it.innerHTML=Te,n(Ke,Tt),ye(lt,Ke,null),n(Ke,_n),y(ue,$t,ut),y(ue,Lt,ut),n(Lt,bn),n(Lt,ht),n(ht,Kt),n(Lt,ln),y(ue,jt,ut),y(ue,ze,ut),n(ze,se),n(ze,Ce),Ce.innerHTML=Ue,n(ze,$n),n(ze,It),It.innerHTML=xt,n(ze,ra),n(ze,Zt),Zt.innerHTML=qe,n(ze,Hn),n(ze,Dt),Dt.innerHTML=me,n(ze,Ln),Wt=!0,hn||(Dn=[w(v,"mouseenter",e[0]),w(x,"mouseenter",e[1]),w(P,"mouseenter",e[2]),w(S,"mouseenter",e[3]),w(J,"mouseenter",e[4]),w(E,"mouseenter",e[5]),w(R,"mouseenter",e[6]),w(oe,"mouseenter",e[7]),w(ee,"mouseenter",e[8]),w(Le,"mouseenter",e[9]),w(Be,"mouseenter",e[10]),w(Ne,"mouseenter",e[11]),w(xe,"mouseenter",e[12]),w(U,"mouseenter",e[13]),w(je,"mouseenter",e[14]),w(De,"mouseenter",e[15]),w(ot,"mouseenter",e[16]),w(Ee,"mouseenter",e[17]),w(gt,"mouseenter",e[18]),w(Nt,"mouseenter",e[19]),w(vt,"mouseenter",e[20]),w(bt,"mouseenter",e[21]),w(it,"mouseenter",e[22]),w(Ce,"mouseenter",e[23]),w(It,"mouseenter",e[24]),w(Zt,"mouseenter",e[25]),w(Dt,"mouseenter",e[26])],hn=!0)},p(ue,[ut]){const Ct={};ut&134217728&&(Ct.$$scope={dirty:ut,ctx:ue}),te.$set(Ct);const pe={};ut&134217728&&(pe.$$scope={dirty:ut,ctx:ue}),lt.$set(pe)},i(ue){Wt||(fe(te.$$.fragment,ue),fe(lt.$$.fragment,ue),Wt=!0)},o(ue){be(te.$$.fragment,ue),be(lt.$$.fragment,ue),Wt=!1},d(ue){ue&&r(t),ue&&r(s),ue&&r(o),ue&&r(p),ue&&r(m),$e(te),$e(lt),ue&&r($t),ue&&r(Lt),ue&&r(jt),ue&&r(ze),hn=!1,jn(Dn)}}}function st(e){console.log(e)}function vu(e){return[()=>st(["a","N"]),()=>st(["a"]),()=>st(["N"]),()=>st(["a","N"]),()=>st([]),()=>st(["a"]),()=>st(["N"]),()=>st(["N"]),()=>st(["r","f","a","N"]),()=>st(["r","N"]),()=>st(["r","f"]),()=>st(["r"]),()=>st(["a"]),()=>st(["r"]),()=>st(["r"]),()=>st(["m","N"]),()=>st(["r","a","m","N"]),()=>st(["r","a","b"]),()=>st(["r","a","b"]),()=>st(["b"]),()=>st(["m","b","N"]),()=>st(["r","a","N"]),()=>st(["r","a","N"]),()=>st(["r"]),()=>st([]),()=>st(["N"]),()=>st(["N"])]}class wu extends rn{constructor(t){super(),sn(this,t,vu,bu,on,{})}}function gu(e){let t,a,s,o,c,p,m,b,_,N;return o=new mu({}),p=new wu({}),_=new jh({}),{c(){t=h("h2"),a=i("Factoring"),s=q(),we(o.$$.fragment),c=q(),we(p.$$.fragment),m=q(),b=h("div"),we(_.$$.fragment),this.h()},l(v){t=u(v,"H2",{});var k=f(t);a=l(k,"Factoring"),k.forEach(r),s=H(v),ge(o.$$.fragment,v),c=H(v),ge(p.$$.fragment,v),m=H(v),b=u(v,"DIV",{class:!0});var $=f(b);ge(_.$$.fragment,$),$.forEach(r),this.h()},h(){V(b,"class","interaction")},m(v,k){y(v,t,k),n(t,a),y(v,s,k),ye(o,v,k),y(v,c,k),ye(p,v,k),y(v,m,k),y(v,b,k),ye(_,b,null),N=!0},p:Ia,i(v){N||(fe(o.$$.fragment,v),fe(p.$$.fragment,v),fe(_.$$.fragment,v),N=!0)},o(v){be(o.$$.fragment,v),be(p.$$.fragment,v),be(_.$$.fragment,v),N=!1},d(v){v&&r(t),v&&r(s),$e(o,v),v&&r(c),$e(p,v),v&&r(m),v&&r(b),$e(_)}}}class yu extends rn{constructor(t){super(),sn(this,t,null,gu,on,{})}}const $u='<a href="https://en.wikipedia.org/wiki/Binary_number"><h3>Binary number</h3></a><p>A <b>binary number</b> is a number expressed in the <b>base-2 numeral system</b> or <b>binary numeral system</b>, a method of mathematical expression which uses only two symbols: typically "0" (zero) and "1" (one).</p>',ku=`<a href="https://en.wikipedia.org/wiki/Quantum_Fourier_transform"><h3>Quantum Fourier transform</h3></a><p>In quantum computing, the <b>quantum Fourier transform (QFT)</b> is a linear transformation on quantum bits, and is the quantum analogue of the discrete Fourier transform. The quantum Fourier transform is a part of many quantum algorithms, notably Shor's algorithm for factoring and computing the discrete logarithm, the quantum phase estimation algorithm for estimating the eigenvalues of a unitary operator, and algorithms for the hidden subgroup problem. The quantum Fourier transform was discovered by Don Coppersmith.</p>`;function Nu(e){let t;return{c(){t=i("binary representations")},l(a){t=l(a,"binary representations")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function Eu(e){let t;return{c(){t=i("quantum Fourier transform")},l(a){t=l(a,"quantum Fourier transform")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function Tu(e){let t,a,s,o,c,p,m,b,_,N=d("n")+"",v,k,$=d("|0\\rangle")+"",x,O,j=d("|1\\rangle")+"",P,C,F=d("\\underbrace{2 \\cdot \\ldots \\cdot 2}_\\text{n times} = 2^n")+"",S,z,M=d("N := 2^n")+"",J,Y,Q,te,I,E,A,ae=d("0")+"",R,L,D=d("N - 1")+"",oe,ne,Me=d("n = 5")+"",re,W,T=d("|0\\rangle \\otimes |1\\rangle \\otimes |0\\rangle \\otimes |0\\rangle \\otimes |1\\rangle")+"",K,ee,Pe=d("01001")+"",ke,Le,Ie=d("\\small 0 \\cdot 2^4 + 1 \\cdot 2^3 + 0 \\cdot 2^2 + 0 \\cdot 2^1 + 1 \\cdot 2^0 = 0 + 8 + 0 + 0 + 1 = 9")+"",Se,Be,Ve,mt,Ne,ce,wt,xe,Je,le,Xe=d("x")+"",pt,G,_e=d("x = 9")+"",U,ct,nt=d("k")+"",je,dt,at=d("\\frac{1}{\\sqrt{2}} \\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^k}} |1\\rangle \\right)")+"",De,kt,_t=d("\\alpha_k = \\frac{1}{\\sqrt{2}}")+"",ot,Pt,ie=d("\\beta_k = \\frac{1}{\\sqrt{2}} e^{\\frac{2 \\pi i x}{2^k}}")+"",Ee,he,Ht=d("k = 1, ..., n")+"",gt,en,We,Nt,Ot,zt=d("\\alpha_k \\neq \\beta_k")+"",vt,Vt,Et=d("\\Vert{\\alpha_k}\\Vert^2 = \\Vert{\\beta_k}\\Vert^2 = \\frac{1}{2}")+"",dn,yt,Ke=d("k = 1, ..., n")+"",St,bt,Oe=d("e^{\\frac{2 \\pi i x}{2^k}}")+"",et,it,Te,Tt,lt,_n=d("|0\\rangle")+"",$t,Lt,bn=d("|1\\rangle")+"",ht,Kt,ln=d("n")+"",jt,ze,se=d("n")+"",Ce,Ue,$n=d("0")+"",It,xt,ra=d("N - 1")+"",Zt,qe,Hn=d("\\frac{1}{2}")+"",Dt,me,Ln=d("n")+"",Wt,hn,Dn=d("\\underbrace{\\frac{1}{2} \\cdot \\ldots \\cdot \\frac{1}{2}}_\\text{n terms} = \\frac{1}{2^n} = \\frac{1}{N}")+"",ue,ut,Ct,pe,vn,He,In,Gt,Ea=d("|\\psi\\rangle")+"",Fn,tn,kn,un,Mt=d("|\\psi\\rangle = \\underbrace{ \\frac{1}{\\sqrt{2}} \\left( |0\\rangle + e^{ \\frac{2 \\pi i x}{2^1} } |1\\rangle \\right) \\otimes \\ldots \\otimes \\frac{1}{\\sqrt{2}} \\left( |0\\rangle + e^{ \\frac{2 \\pi i x}{2^n} } |1\\rangle \\right) }_\\text{n terms}")+"",zn,rt,Nn,Wn,Ta=d("\\frac{1}{\\sqrt{2}}")+"",En,oa,wn,Ge,Mr=d("|\\psi\\rangle = \\frac{1}{\\sqrt{2^n}} \\left(\\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^1}} |1\\rangle \\right) \\otimes \\ldots \\otimes \\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^n}} |1\\rangle \\right) \\right) = \\frac{1}{\\sqrt{N}} \\left(\\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^1}} |1\\rangle \\right) \\otimes \\ldots \\otimes \\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^n}} |1\\rangle \\right) \\right)")+"",Gn,de,Ma,Tn,Un=d("y")+"",Pa,Mn,Vn=d("n")+"",fn,Pn,On=d("y_k")+"",Kn,gn,Ft=d("k")+"",Sa,Sn,Zn=d("y")+"",xa,Yn,Fa=d("y_k = 0")+"",Aa,sa,B=d("k")+"",ve,Re,za=d("|0\\rangle")+"",ia,Cn,Va=d("y_k = 1")+"",la,Bn,Ca=d("|1\\rangle")+"",ha,Bt,$s=d("k = 1, \\ldots, n")+"",Pr,nn,ks=d("y")+"",Sr,ua,At=d("\\displaystyle{ y = \\sum_{k=1}^n y_k \\cdot 2^{n - k}}")+"",xr,fa,Ns=d("2^n")+"",Ar,ma,Es=d("k")+"",qr,pa,Ur=d("\\displaystyle{ y = 2^n \\cdot \\sum_{k=1}^n y_k \\cdot 2^{-k} = N \\cdot \\sum_{k=1}^n \\frac{y_k}{2^k}}")+"",mn,Ba,ca,yn,Ra,da,Ae,Ts=d("|\\psi\\rangle = \\displaystyle{ \\frac{1}{\\sqrt{N}} \\underbrace{ \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1}_\\text{n terms} \\overbrace{e^{\\frac{2 \\pi i x y_1}{2^1}} |y_1\\rangle \\otimes \\ldots \\otimes e^{\\frac{2 \\pi i x y_n}{2^n}}|y_n\\rangle}^\\text{n terms} }")+"",Qa,xn,Hr,_a,Ms=d("k")+"",Lr,ba,Ps=d("e^{\\frac{2 \\pi i x y_k}{2^k}}|y_k\\rangle")+"",Ir,ja,Jn,Xn,va,xi=d("e^{\\frac{2 \\pi i x \\cdot 0}{2^k}}|0\\rangle = 1 \\cdot |0\\rangle = |0\\rangle")+"",Ss,Da,Ai=d("y_k = 0")+"",xs,As,wa,Wa,qi=d("e^{\\frac{2 \\pi i x \\cdot 1}{2^k}}|1\\rangle = e^{\\frac{2 \\pi i x }{2^k}}|1\\rangle")+"",qs,Ga,Hi=d("y_k = 1")+"",Hs,Or,Ua,Ls,Kr,An,Is,Oa,Li=d("n")+"",Fs,Fr,zs,Vs,zr,Cs,Bs,Zr,ga,Rs,Vr,Qs,js,Yr,Ka,Za,Ii=d("|\\psi\\rangle = \\displaystyle{ \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 \\left( e^{\\frac{2 \\pi i x y_1}{2^1}} \\cdot \\ldots \\cdot e^{\\frac{2 \\pi i x y_n}{2^n}} \\right) \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right)}")+"",Jr,Ya,Ja,Fi=d("|\\psi\\rangle = \\displaystyle{ = \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 \\prod_{k=1}^n e^{\\frac{2 \\pi i x y_k}{2^k}} \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right)}")+"",Xr,Xa,Ds,es,er,tr,zi=d("|\\psi\\rangle = \\displaystyle{ = \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 e^{\\sum_{k=1}^n \\frac{2 \\pi i x y_k}{2^k}} \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right)}")+"",ts,ea,Ws,nr,Vi=d("2 \\pi i x")+"",Gs,ar,Ci=d("k")+"",Us,ns,rr,sr,Bi=d("|\\psi\\rangle = \\displaystyle{ = \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 e^{2 \\pi i x \\sum_{k=1}^n \\frac{y_k}{2^k}} \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right)}")+"",as,Rt,Os,or,Ri=d("\\displaystyle{ \\sum_{k=1}^n \\frac{y_k}{2^k}}")+"",Ks,ir,Qi=d("\\frac{y}{N}")+"",Zs,lr,ji=d("y_k")+"",Ys,hr,Di=d("y")+"",Js,ur,Wi=d("y")+"",Xs,fr,Gi=d("|y\\rangle = |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle")+"",eo,rs,mr,pr,Ui=d("|\\psi\\rangle = \\displaystyle{ \\frac{1}{\\sqrt{N}} \\sum_{y=0}^{N - 1} e^{\\frac{2 \\pi i x y}{N}} |y\\rangle}")+"",ss,cr,to,os,Yt,no,dr,Oi=d("x")+"",ao,_r,Ki=d("e^{\\frac{2 \\pi i x y}{N}}")+"",ro,br,Zi=d("y")+"",so,vr,Yi=d("x")+"",oo,wr,Ji=d("x")+"",io,is,lo,Po;return I=new tt({props:{hovertext:$u,$$slots:{default:[Nu]},$$scope:{ctx:e}}}),xe=new tt({props:{hovertext:ku,$$slots:{default:[Eu]},$$scope:{ctx:e}}}),{c(){t=h("h2"),a=i("Quantum Fourier transform (QFT)"),s=q(),o=h("h2"),c=i("Representing numbers with qubits"),p=q(),m=h("p"),b=i("Consider "),_=h("span"),v=i(" qubits aranged in a row, each of which are in either of the two basis states "),k=h("span"),x=i(" or "),O=h("span"),P=i(". With a little combinatorics, we can see that there are "),C=h("span"),S=i(" such combinations. For ease of notation, let "),z=h("span"),J=i("."),Y=q(),Q=h("p"),te=i("For our purposes, we'll interpret these combinations as the "),we(I.$$.fragment),E=i(" of the numbers from "),A=h("span"),R=i(" to "),L=h("span"),oe=i(". For example, let "),ne=h("span"),re=i(" and the qubits be in the following state: "),W=h("span"),K=i('. We can "read out" this state as the binary number '),ee=h("span"),ke=i(", which is equal to "),Le=h("span"),Se=i("."),Be=q(),Ve=h("h2"),mt=i("QFT on the qubit level"),Ne=q(),ce=h("p"),wt=i("The "),we(xe.$$.fragment),Je=i(" is an operation that modifies the states of qubits in a particular way. (How this is done in practice is another topic, for now we'll only look at the mathematics.) Namely, if "),le=h("span"),pt=i(" is the number represented by the qubits (in the example above, "),G=h("span"),U=i("), the QFT sets the state of the "),ct=h("span"),je=i("-th qubit to "),dt=h("span"),De=i(". In other words, it sets "),kt=h("span"),ot=i(" and "),Pt=h("span"),Ee=i(" for all "),he=h("span"),gt=i("."),en=q(),We=h("p"),Nt=i("Notice that even though "),Ot=h("span"),vt=i(", the associated measurement probabilities "),Vt=h("span"),dn=i(" for all "),yt=h("span"),St=i(". This is because the "),bt=h("span"),et=i(" term - as we saw in the section about the Bloch-sphere - indicates the qubit's phase and does not affect measurement probabilities."),it=q(),Te=h("p"),Tt=i("Just like the state of a single qubit can be the linear combination of "),lt=h("span"),$t=i(" and "),Lt=h("span"),ht=i(", the state of these "),Kt=h("span"),jt=i(" qubits is essentially the linear combination of all the possible combinations of the "),ze=h("span"),Ce=i(" basis states - which, as we saw in the previous section, represent the integers from "),Ue=h("span"),It=i(" to "),xt=h("span"),Zt=i(". Since both basis states are measured with a probability of "),qe=h("span"),Dt=i(" for each qubit, one particular combination of the "),me=h("span"),Wt=i(" basis states is measured with a probability of "),hn=h("span"),ue=i(". What differs across these combinations is the phase, as we'll see in the next section."),ut=q(),Ct=h("h2"),pe=i("QFT on the representation level"),vn=q(),He=h("p"),In=i("Let's denote the state of the entire sequence of qubits with "),Gt=h("span"),Fn=i(" and write it out as shown below:"),tn=q(),kn=h("p"),un=h("span"),zn=q(),rt=h("p"),Nn=i("We can factor out the "),Wn=h("span"),En=i(" term to get:"),oa=q(),wn=h("p"),Ge=h("span"),Gn=q(),de=h("p"),Ma=i("Let "),Tn=h("span"),Pa=i(" denote the binary number represented by the "),Mn=h("span"),fn=i(" qubits in a given basis state, and "),Pn=h("span"),Kn=i(" the "),gn=h("span"),Sa=i("-th digit of "),Sn=h("span"),xa=i(". In other words, "),Yn=h("span"),Aa=i("\xA0if the "),sa=h("span"),ve=i("-th qubit is in the "),Re=h("span"),ia=i(" state, and "),Cn=h("span"),la=i("\xA0if it's in the "),Bn=h("span"),ha=i(" state for all "),Bt=h("span"),Pr=i(". Recalling our knowledge of binary numbers, we can write "),nn=h("span"),Sr=i(" as the weighted sum of its digits: "),ua=h("span"),xr=i(". Notice that the "),fa=h("span"),Ar=i(" term within the sum does not depend on "),ma=h("span"),qr=i(" and so we can factor it out: "),pa=h("span"),mn=i(". Remember this step, as it is going to be important shortly!"),Ba=q(),ca=h("p"),yn=i("Using this new notation, we can write the state of the qubits in the form of a sum instead of a product:"),Ra=q(),da=h("p"),Ae=h("span"),Qa=q(),xn=h("p"),Hr=i("In case you're wondering how the formula above can be derived from the definition we started with, note that for all "),_a=h("span"),Lr=i(", the term "),ba=h("span"),Ir=i(" equals"),ja=q(),Jn=h("ul"),Xn=h("li"),va=h("span"),Ss=i(" if "),Da=h("span"),xs=i(", and"),As=q(),wa=h("li"),Wa=h("span"),qs=i(" if "),Ga=h("span"),Hs=i(","),Or=q(),Ua=h("p"),Ls=i("which is exactly how we defined the QFT."),Kr=q(),An=h("p"),Is=i("The "),Oa=h("span"),Fs=i(" embedded summations might seem confusing at first, but what they actually do is iterate over all possible combinations of basis states. In the final sum, these are included with "),Fr=h("em"),zs=i("equal weight"),Vs=i(" (meaning they are measured with equal probability), but the composing basis states will have "),zr=h("em"),Cs=i("different phases"),Bs=i(" in each combination, as already mentioned at the end of the previous section."),Zr=q(),ga=h("p"),Rs=i("Let's now define the "),Vr=h("em"),Qs=i("phase of the combination"),js=i(" as the product of the phases of individual qubits within that combination, and factor it out as shown below:"),Yr=q(),Ka=h("p"),Za=h("span"),Jr=q(),Ya=h("p"),Ja=h("span"),Xr=q(),Xa=h("p"),Ds=i("After making use of the product rule for exponents..."),es=q(),er=h("p"),tr=h("span"),ts=q(),ea=h("p"),Ws=i("and factoring out the "),nr=h("span"),Gs=i(" term that does not depend on "),ar=h("span"),Us=i(", we arrive at the formula below:"),ns=q(),rr=h("p"),sr=h("span"),as=q(),Rt=h("p"),Os=i("Recall what I asked you to keep in mind a few paragraphs ago, and notice that the sum in the exponential "),or=h("span"),Ks=i(" is actually equal to "),ir=h("span"),Zs=i(". Thus, we can now replace the individual "),lr=h("span"),Ys=i(" digits with the number "),hr=h("span"),Js=i(" itself and the multiple, embedded summations with a single one that iterates over all possible values of "),ur=h("span"),Xs=i(". In addition, let's abbreviate the notation we used for the product of the basis states with "),fr=h("span"),eo=i(", to finally obtain this way more elegant formula for the QFT:"),rs=q(),mr=h("p"),pr=h("span"),ss=q(),cr=h("p"),to=i("The elegance comes from the fact that it shows what the qubits represent on a symbolic level, as opposed to the expression we started with that is a direct insight into the bit-level implementation."),os=q(),Yt=h("p"),no=i("Now let's illustrate visually what the formula above actually means. To give a proper intuition, we'll look at multiple systems with increasing number of qubits. For a chosen value of "),dr=h("span"),ao=i(", the plot below shows the "),_r=h("span"),ro=i(" terms for all possible values of "),br=h("span"),so=i(" that these systems can represent. Because this term is a complex number, the geometric representation of which would require two dimensions, the real and imaginary components are shown separately. Notice that as the number of qubits increases, the plots gradually turn into sinusoidal wave patterns. Furthermore, the number of peaks of these waves - their frequency - equals "),vr=h("span"),oo=i(", which you can verify by modifying "),wr=h("span"),io=i(" with the help of the slider.")},l(g){t=u(g,"H2",{});var X=f(t);a=l(X,"Quantum Fourier transform (QFT)"),X.forEach(r),s=H(g),o=u(g,"H2",{});var Cr=f(o);c=l(Cr,"Representing numbers with qubits"),Cr.forEach(r),p=H(g),m=u(g,"P",{});var an=f(m);b=l(an,"Consider "),_=u(an,"SPAN",{});var Xi=f(_);Xi.forEach(r),v=l(an," qubits aranged in a row, each of which are in either of the two basis states "),k=u(an,"SPAN",{});var el=f(k);el.forEach(r),x=l(an," or "),O=u(an,"SPAN",{});var tl=f(O);tl.forEach(r),P=l(an,". With a little combinatorics, we can see that there are "),C=u(an,"SPAN",{});var nl=f(C);nl.forEach(r),S=l(an," such combinations. For ease of notation, let "),z=u(an,"SPAN",{});var al=f(z);al.forEach(r),J=l(an,"."),an.forEach(r),Y=H(g),Q=u(g,"P",{});var Jt=f(Q);te=l(Jt,"For our purposes, we'll interpret these combinations as the "),ge(I.$$.fragment,Jt),E=l(Jt," of the numbers from "),A=u(Jt,"SPAN",{});var rl=f(A);rl.forEach(r),R=l(Jt," to "),L=u(Jt,"SPAN",{});var sl=f(L);sl.forEach(r),oe=l(Jt,". For example, let "),ne=u(Jt,"SPAN",{});var ol=f(ne);ol.forEach(r),re=l(Jt," and the qubits be in the following state: "),W=u(Jt,"SPAN",{});var il=f(W);il.forEach(r),K=l(Jt,'. We can "read out" this state as the binary number '),ee=u(Jt,"SPAN",{});var ll=f(ee);ll.forEach(r),ke=l(Jt,", which is equal to "),Le=u(Jt,"SPAN",{});var hl=f(Le);hl.forEach(r),Se=l(Jt,"."),Jt.forEach(r),Be=H(g),Ve=u(g,"H2",{});var So=f(Ve);mt=l(So,"QFT on the qubit level"),So.forEach(r),Ne=H(g),ce=u(g,"P",{});var Qt=f(ce);wt=l(Qt,"The "),ge(xe.$$.fragment,Qt),Je=l(Qt," is an operation that modifies the states of qubits in a particular way. (How this is done in practice is another topic, for now we'll only look at the mathematics.) Namely, if "),le=u(Qt,"SPAN",{});var ul=f(le);ul.forEach(r),pt=l(Qt," is the number represented by the qubits (in the example above, "),G=u(Qt,"SPAN",{});var fl=f(G);fl.forEach(r),U=l(Qt,"), the QFT sets the state of the "),ct=u(Qt,"SPAN",{});var ml=f(ct);ml.forEach(r),je=l(Qt,"-th qubit to "),dt=u(Qt,"SPAN",{});var pl=f(dt);pl.forEach(r),De=l(Qt,". In other words, it sets "),kt=u(Qt,"SPAN",{});var cl=f(kt);cl.forEach(r),ot=l(Qt," and "),Pt=u(Qt,"SPAN",{});var dl=f(Pt);dl.forEach(r),Ee=l(Qt," for all "),he=u(Qt,"SPAN",{});var _l=f(he);_l.forEach(r),gt=l(Qt,"."),Qt.forEach(r),en=H(g),We=u(g,"P",{});var ta=f(We);Nt=l(ta,"Notice that even though "),Ot=u(ta,"SPAN",{});var bl=f(Ot);bl.forEach(r),vt=l(ta,", the associated measurement probabilities "),Vt=u(ta,"SPAN",{});var vl=f(Vt);vl.forEach(r),dn=l(ta," for all "),yt=u(ta,"SPAN",{});var wl=f(yt);wl.forEach(r),St=l(ta,". This is because the "),bt=u(ta,"SPAN",{});var gl=f(bt);gl.forEach(r),et=l(ta," term - as we saw in the section about the Bloch-sphere - indicates the qubit's phase and does not affect measurement probabilities."),ta.forEach(r),it=H(g),Te=u(g,"P",{});var qt=f(Te);Tt=l(qt,"Just like the state of a single qubit can be the linear combination of "),lt=u(qt,"SPAN",{});var yl=f(lt);yl.forEach(r),$t=l(qt," and "),Lt=u(qt,"SPAN",{});var $l=f(Lt);$l.forEach(r),ht=l(qt,", the state of these "),Kt=u(qt,"SPAN",{});var kl=f(Kt);kl.forEach(r),jt=l(qt," qubits is essentially the linear combination of all the possible combinations of the "),ze=u(qt,"SPAN",{});var Nl=f(ze);Nl.forEach(r),Ce=l(qt," basis states - which, as we saw in the previous section, represent the integers from "),Ue=u(qt,"SPAN",{});var El=f(Ue);El.forEach(r),It=l(qt," to "),xt=u(qt,"SPAN",{});var Tl=f(xt);Tl.forEach(r),Zt=l(qt,". Since both basis states are measured with a probability of "),qe=u(qt,"SPAN",{});var Ml=f(qe);Ml.forEach(r),Dt=l(qt," for each qubit, one particular combination of the "),me=u(qt,"SPAN",{});var Pl=f(me);Pl.forEach(r),Wt=l(qt," basis states is measured with a probability of "),hn=u(qt,"SPAN",{});var Sl=f(hn);Sl.forEach(r),ue=l(qt,". What differs across these combinations is the phase, as we'll see in the next section."),qt.forEach(r),ut=H(g),Ct=u(g,"H2",{});var xo=f(Ct);pe=l(xo,"QFT on the representation level"),xo.forEach(r),vn=H(g),He=u(g,"P",{});var ls=f(He);In=l(ls,"Let's denote the state of the entire sequence of qubits with "),Gt=u(ls,"SPAN",{});var xl=f(Gt);xl.forEach(r),Fn=l(ls," and write it out as shown below:"),ls.forEach(r),tn=H(g),kn=u(g,"P",{});var Ao=f(kn);un=u(Ao,"SPAN",{});var Al=f(un);Al.forEach(r),Ao.forEach(r),zn=H(g),rt=u(g,"P",{});var hs=f(rt);Nn=l(hs,"We can factor out the "),Wn=u(hs,"SPAN",{});var ql=f(Wn);ql.forEach(r),En=l(hs," term to get:"),hs.forEach(r),oa=H(g),wn=u(g,"P",{});var qo=f(wn);Ge=u(qo,"SPAN",{});var Hl=f(Ge);Hl.forEach(r),qo.forEach(r),Gn=H(g),de=u(g,"P",{});var Qe=f(de);Ma=l(Qe,"Let "),Tn=u(Qe,"SPAN",{});var Ll=f(Tn);Ll.forEach(r),Pa=l(Qe," denote the binary number represented by the "),Mn=u(Qe,"SPAN",{});var Il=f(Mn);Il.forEach(r),fn=l(Qe," qubits in a given basis state, and "),Pn=u(Qe,"SPAN",{});var Fl=f(Pn);Fl.forEach(r),Kn=l(Qe," the "),gn=u(Qe,"SPAN",{});var zl=f(gn);zl.forEach(r),Sa=l(Qe,"-th digit of "),Sn=u(Qe,"SPAN",{});var Vl=f(Sn);Vl.forEach(r),xa=l(Qe,". In other words, "),Yn=u(Qe,"SPAN",{});var Cl=f(Yn);Cl.forEach(r),Aa=l(Qe,"\xA0if the "),sa=u(Qe,"SPAN",{});var Bl=f(sa);Bl.forEach(r),ve=l(Qe,"-th qubit is in the "),Re=u(Qe,"SPAN",{});var Rl=f(Re);Rl.forEach(r),ia=l(Qe," state, and "),Cn=u(Qe,"SPAN",{});var Ql=f(Cn);Ql.forEach(r),la=l(Qe,"\xA0if it's in the "),Bn=u(Qe,"SPAN",{});var jl=f(Bn);jl.forEach(r),ha=l(Qe," state for all "),Bt=u(Qe,"SPAN",{});var Dl=f(Bt);Dl.forEach(r),Pr=l(Qe,". Recalling our knowledge of binary numbers, we can write "),nn=u(Qe,"SPAN",{});var Wl=f(nn);Wl.forEach(r),Sr=l(Qe," as the weighted sum of its digits: "),ua=u(Qe,"SPAN",{});var Gl=f(ua);Gl.forEach(r),xr=l(Qe,". Notice that the "),fa=u(Qe,"SPAN",{});var Ul=f(fa);Ul.forEach(r),Ar=l(Qe," term within the sum does not depend on "),ma=u(Qe,"SPAN",{});var Ol=f(ma);Ol.forEach(r),qr=l(Qe," and so we can factor it out: "),pa=u(Qe,"SPAN",{});var Kl=f(pa);Kl.forEach(r),mn=l(Qe,". Remember this step, as it is going to be important shortly!"),Qe.forEach(r),Ba=H(g),ca=u(g,"P",{});var Ho=f(ca);yn=l(Ho,"Using this new notation, we can write the state of the qubits in the form of a sum instead of a product:"),Ho.forEach(r),Ra=H(g),da=u(g,"P",{});var Lo=f(da);Ae=u(Lo,"SPAN",{});var Zl=f(Ae);Zl.forEach(r),Lo.forEach(r),Qa=H(g),xn=u(g,"P",{});var gr=f(xn);Hr=l(gr,"In case you're wondering how the formula above can be derived from the definition we started with, note that for all "),_a=u(gr,"SPAN",{});var Yl=f(_a);Yl.forEach(r),Lr=l(gr,", the term "),ba=u(gr,"SPAN",{});var Jl=f(ba);Jl.forEach(r),Ir=l(gr," equals"),gr.forEach(r),ja=H(g),Jn=u(g,"UL",{});var us=f(Jn);Xn=u(us,"LI",{});var Br=f(Xn);va=u(Br,"SPAN",{});var Xl=f(va);Xl.forEach(r),Ss=l(Br," if "),Da=u(Br,"SPAN",{});var eh=f(Da);eh.forEach(r),xs=l(Br,", and"),Br.forEach(r),As=H(us),wa=u(us,"LI",{});var Rr=f(wa);Wa=u(Rr,"SPAN",{});var th=f(Wa);th.forEach(r),qs=l(Rr," if "),Ga=u(Rr,"SPAN",{});var nh=f(Ga);nh.forEach(r),Hs=l(Rr,","),Rr.forEach(r),us.forEach(r),Or=H(g),Ua=u(g,"P",{});var Io=f(Ua);Ls=l(Io,"which is exactly how we defined the QFT."),Io.forEach(r),Kr=H(g),An=u(g,"P",{});var ya=f(An);Is=l(ya,"The "),Oa=u(ya,"SPAN",{});var ah=f(Oa);ah.forEach(r),Fs=l(ya," embedded summations might seem confusing at first, but what they actually do is iterate over all possible combinations of basis states. In the final sum, these are included with "),Fr=u(ya,"EM",{});var Fo=f(Fr);zs=l(Fo,"equal weight"),Fo.forEach(r),Vs=l(ya," (meaning they are measured with equal probability), but the composing basis states will have "),zr=u(ya,"EM",{});var zo=f(zr);Cs=l(zo,"different phases"),zo.forEach(r),Bs=l(ya," in each combination, as already mentioned at the end of the previous section."),ya.forEach(r),Zr=H(g),ga=u(g,"P",{});var fs=f(ga);Rs=l(fs,"Let's now define the "),Vr=u(fs,"EM",{});var Vo=f(Vr);Qs=l(Vo,"phase of the combination"),Vo.forEach(r),js=l(fs," as the product of the phases of individual qubits within that combination, and factor it out as shown below:"),fs.forEach(r),Yr=H(g),Ka=u(g,"P",{});var Co=f(Ka);Za=u(Co,"SPAN",{});var rh=f(Za);rh.forEach(r),Co.forEach(r),Jr=H(g),Ya=u(g,"P",{});var Bo=f(Ya);Ja=u(Bo,"SPAN",{});var sh=f(Ja);sh.forEach(r),Bo.forEach(r),Xr=H(g),Xa=u(g,"P",{});var Ro=f(Xa);Ds=l(Ro,"After making use of the product rule for exponents..."),Ro.forEach(r),es=H(g),er=u(g,"P",{});var Qo=f(er);tr=u(Qo,"SPAN",{});var oh=f(tr);oh.forEach(r),Qo.forEach(r),ts=H(g),ea=u(g,"P",{});var yr=f(ea);Ws=l(yr,"and factoring out the "),nr=u(yr,"SPAN",{});var ih=f(nr);ih.forEach(r),Gs=l(yr," term that does not depend on "),ar=u(yr,"SPAN",{});var lh=f(ar);lh.forEach(r),Us=l(yr,", we arrive at the formula below:"),yr.forEach(r),ns=H(g),rr=u(g,"P",{});var jo=f(rr);sr=u(jo,"SPAN",{});var hh=f(sr);hh.forEach(r),jo.forEach(r),as=H(g),Rt=u(g,"P",{});var pn=f(Rt);Os=l(pn,"Recall what I asked you to keep in mind a few paragraphs ago, and notice that the sum in the exponential "),or=u(pn,"SPAN",{});var uh=f(or);uh.forEach(r),Ks=l(pn," is actually equal to "),ir=u(pn,"SPAN",{});var fh=f(ir);fh.forEach(r),Zs=l(pn,". Thus, we can now replace the individual "),lr=u(pn,"SPAN",{});var mh=f(lr);mh.forEach(r),Ys=l(pn," digits with the number "),hr=u(pn,"SPAN",{});var ph=f(hr);ph.forEach(r),Js=l(pn," itself and the multiple, embedded summations with a single one that iterates over all possible values of "),ur=u(pn,"SPAN",{});var ch=f(ur);ch.forEach(r),Xs=l(pn,". In addition, let's abbreviate the notation we used for the product of the basis states with "),fr=u(pn,"SPAN",{});var dh=f(fr);dh.forEach(r),eo=l(pn,", to finally obtain this way more elegant formula for the QFT:"),pn.forEach(r),rs=H(g),mr=u(g,"P",{});var Do=f(mr);pr=u(Do,"SPAN",{});var _h=f(pr);_h.forEach(r),Do.forEach(r),ss=H(g),cr=u(g,"P",{});var Wo=f(cr);to=l(Wo,"The elegance comes from the fact that it shows what the qubits represent on a symbolic level, as opposed to the expression we started with that is a direct insight into the bit-level implementation."),Wo.forEach(r),os=H(g),Yt=u(g,"P",{});var qn=f(Yt);no=l(qn,"Now let's illustrate visually what the formula above actually means. To give a proper intuition, we'll look at multiple systems with increasing number of qubits. For a chosen value of "),dr=u(qn,"SPAN",{});var bh=f(dr);bh.forEach(r),ao=l(qn,", the plot below shows the "),_r=u(qn,"SPAN",{});var vh=f(_r);vh.forEach(r),ro=l(qn," terms for all possible values of "),br=u(qn,"SPAN",{});var wh=f(br);wh.forEach(r),so=l(qn," that these systems can represent. Because this term is a complex number, the geometric representation of which would require two dimensions, the real and imaginary components are shown separately. Notice that as the number of qubits increases, the plots gradually turn into sinusoidal wave patterns. Furthermore, the number of peaks of these waves - their frequency - equals "),vr=u(qn,"SPAN",{});var gh=f(vr);gh.forEach(r),oo=l(qn,", which you can verify by modifying "),wr=u(qn,"SPAN",{});var yh=f(wr);yh.forEach(r),io=l(qn," with the help of the slider."),qn.forEach(r)},m(g,X){y(g,t,X),n(t,a),y(g,s,X),y(g,o,X),n(o,c),y(g,p,X),y(g,m,X),n(m,b),n(m,_),_.innerHTML=N,n(m,v),n(m,k),k.innerHTML=$,n(m,x),n(m,O),O.innerHTML=j,n(m,P),n(m,C),C.innerHTML=F,n(m,S),n(m,z),z.innerHTML=M,n(m,J),y(g,Y,X),y(g,Q,X),n(Q,te),ye(I,Q,null),n(Q,E),n(Q,A),A.innerHTML=ae,n(Q,R),n(Q,L),L.innerHTML=D,n(Q,oe),n(Q,ne),ne.innerHTML=Me,n(Q,re),n(Q,W),W.innerHTML=T,n(Q,K),n(Q,ee),ee.innerHTML=Pe,n(Q,ke),n(Q,Le),Le.innerHTML=Ie,n(Q,Se),y(g,Be,X),y(g,Ve,X),n(Ve,mt),y(g,Ne,X),y(g,ce,X),n(ce,wt),ye(xe,ce,null),n(ce,Je),n(ce,le),le.innerHTML=Xe,n(ce,pt),n(ce,G),G.innerHTML=_e,n(ce,U),n(ce,ct),ct.innerHTML=nt,n(ce,je),n(ce,dt),dt.innerHTML=at,n(ce,De),n(ce,kt),kt.innerHTML=_t,n(ce,ot),n(ce,Pt),Pt.innerHTML=ie,n(ce,Ee),n(ce,he),he.innerHTML=Ht,n(ce,gt),y(g,en,X),y(g,We,X),n(We,Nt),n(We,Ot),Ot.innerHTML=zt,n(We,vt),n(We,Vt),Vt.innerHTML=Et,n(We,dn),n(We,yt),yt.innerHTML=Ke,n(We,St),n(We,bt),bt.innerHTML=Oe,n(We,et),y(g,it,X),y(g,Te,X),n(Te,Tt),n(Te,lt),lt.innerHTML=_n,n(Te,$t),n(Te,Lt),Lt.innerHTML=bn,n(Te,ht),n(Te,Kt),Kt.innerHTML=ln,n(Te,jt),n(Te,ze),ze.innerHTML=se,n(Te,Ce),n(Te,Ue),Ue.innerHTML=$n,n(Te,It),n(Te,xt),xt.innerHTML=ra,n(Te,Zt),n(Te,qe),qe.innerHTML=Hn,n(Te,Dt),n(Te,me),me.innerHTML=Ln,n(Te,Wt),n(Te,hn),hn.innerHTML=Dn,n(Te,ue),y(g,ut,X),y(g,Ct,X),n(Ct,pe),y(g,vn,X),y(g,He,X),n(He,In),n(He,Gt),Gt.innerHTML=Ea,n(He,Fn),y(g,tn,X),y(g,kn,X),n(kn,un),un.innerHTML=Mt,y(g,zn,X),y(g,rt,X),n(rt,Nn),n(rt,Wn),Wn.innerHTML=Ta,n(rt,En),y(g,oa,X),y(g,wn,X),n(wn,Ge),Ge.innerHTML=Mr,y(g,Gn,X),y(g,de,X),n(de,Ma),n(de,Tn),Tn.innerHTML=Un,n(de,Pa),n(de,Mn),Mn.innerHTML=Vn,n(de,fn),n(de,Pn),Pn.innerHTML=On,n(de,Kn),n(de,gn),gn.innerHTML=Ft,n(de,Sa),n(de,Sn),Sn.innerHTML=Zn,n(de,xa),n(de,Yn),Yn.innerHTML=Fa,n(de,Aa),n(de,sa),sa.innerHTML=B,n(de,ve),n(de,Re),Re.innerHTML=za,n(de,ia),n(de,Cn),Cn.innerHTML=Va,n(de,la),n(de,Bn),Bn.innerHTML=Ca,n(de,ha),n(de,Bt),Bt.innerHTML=$s,n(de,Pr),n(de,nn),nn.innerHTML=ks,n(de,Sr),n(de,ua),ua.innerHTML=At,n(de,xr),n(de,fa),fa.innerHTML=Ns,n(de,Ar),n(de,ma),ma.innerHTML=Es,n(de,qr),n(de,pa),pa.innerHTML=Ur,n(de,mn),y(g,Ba,X),y(g,ca,X),n(ca,yn),y(g,Ra,X),y(g,da,X),n(da,Ae),Ae.innerHTML=Ts,y(g,Qa,X),y(g,xn,X),n(xn,Hr),n(xn,_a),_a.innerHTML=Ms,n(xn,Lr),n(xn,ba),ba.innerHTML=Ps,n(xn,Ir),y(g,ja,X),y(g,Jn,X),n(Jn,Xn),n(Xn,va),va.innerHTML=xi,n(Xn,Ss),n(Xn,Da),Da.innerHTML=Ai,n(Xn,xs),n(Jn,As),n(Jn,wa),n(wa,Wa),Wa.innerHTML=qi,n(wa,qs),n(wa,Ga),Ga.innerHTML=Hi,n(wa,Hs),y(g,Or,X),y(g,Ua,X),n(Ua,Ls),y(g,Kr,X),y(g,An,X),n(An,Is),n(An,Oa),Oa.innerHTML=Li,n(An,Fs),n(An,Fr),n(Fr,zs),n(An,Vs),n(An,zr),n(zr,Cs),n(An,Bs),y(g,Zr,X),y(g,ga,X),n(ga,Rs),n(ga,Vr),n(Vr,Qs),n(ga,js),y(g,Yr,X),y(g,Ka,X),n(Ka,Za),Za.innerHTML=Ii,y(g,Jr,X),y(g,Ya,X),n(Ya,Ja),Ja.innerHTML=Fi,y(g,Xr,X),y(g,Xa,X),n(Xa,Ds),y(g,es,X),y(g,er,X),n(er,tr),tr.innerHTML=zi,y(g,ts,X),y(g,ea,X),n(ea,Ws),n(ea,nr),nr.innerHTML=Vi,n(ea,Gs),n(ea,ar),ar.innerHTML=Ci,n(ea,Us),y(g,ns,X),y(g,rr,X),n(rr,sr),sr.innerHTML=Bi,y(g,as,X),y(g,Rt,X),n(Rt,Os),n(Rt,or),or.innerHTML=Ri,n(Rt,Ks),n(Rt,ir),ir.innerHTML=Qi,n(Rt,Zs),n(Rt,lr),lr.innerHTML=ji,n(Rt,Ys),n(Rt,hr),hr.innerHTML=Di,n(Rt,Js),n(Rt,ur),ur.innerHTML=Wi,n(Rt,Xs),n(Rt,fr),fr.innerHTML=Gi,n(Rt,eo),y(g,rs,X),y(g,mr,X),n(mr,pr),pr.innerHTML=Ui,y(g,ss,X),y(g,cr,X),n(cr,to),y(g,os,X),y(g,Yt,X),n(Yt,no),n(Yt,dr),dr.innerHTML=Oi,n(Yt,ao),n(Yt,_r),_r.innerHTML=Ki,n(Yt,ro),n(Yt,br),br.innerHTML=Zi,n(Yt,so),n(Yt,vr),vr.innerHTML=Yi,n(Yt,oo),n(Yt,wr),wr.innerHTML=Ji,n(Yt,io),is=!0,lo||(Po=[w(_,"mouseenter",e[0]),w(k,"mouseenter",e[1]),w(O,"mouseenter",e[2]),w(C,"mouseenter",e[3]),w(z,"mouseenter",e[4]),w(A,"mouseenter",e[5]),w(L,"mouseenter",e[6]),w(ne,"mouseenter",e[7]),w(W,"mouseenter",e[8]),w(ee,"mouseenter",e[9]),w(Le,"mouseenter",e[10]),w(le,"mouseenter",e[11]),w(G,"mouseenter",e[12]),w(ct,"mouseenter",e[13]),w(dt,"mouseenter",e[14]),w(kt,"mouseenter",e[15]),w(Pt,"mouseenter",e[16]),w(he,"mouseenter",e[17]),w(Ot,"mouseenter",e[18]),w(Vt,"mouseenter",e[19]),w(yt,"mouseenter",e[20]),w(bt,"mouseenter",e[21]),w(lt,"mouseenter",e[22]),w(Lt,"mouseenter",e[23]),w(Kt,"mouseenter",e[24]),w(ze,"mouseenter",e[25]),w(Ue,"mouseenter",e[26]),w(xt,"mouseenter",e[27]),w(qe,"mouseenter",e[28]),w(me,"mouseenter",e[29]),w(hn,"mouseenter",e[30]),w(Gt,"mouseenter",e[31]),w(un,"mouseenter",e[32]),w(Wn,"mouseenter",e[33]),w(Ge,"mouseenter",e[34]),w(Tn,"mouseenter",e[35]),w(Mn,"mouseenter",e[36]),w(Pn,"mouseenter",e[37]),w(gn,"mouseenter",e[38]),w(Sn,"mouseenter",e[39]),w(Yn,"mouseenter",e[40]),w(sa,"mouseenter",e[41]),w(Re,"mouseenter",e[42]),w(Cn,"mouseenter",e[43]),w(Bn,"mouseenter",e[44]),w(Bt,"mouseenter",e[45]),w(nn,"mouseenter",e[46]),w(ua,"mouseenter",e[47]),w(fa,"mouseenter",e[48]),w(ma,"mouseenter",e[49]),w(pa,"mouseenter",e[50]),w(Ae,"mouseenter",e[51]),w(_a,"mouseenter",e[52]),w(ba,"mouseenter",e[53]),w(va,"mouseenter",e[54]),w(Da,"mouseenter",e[55]),w(Wa,"mouseenter",e[56]),w(Ga,"mouseenter",e[57]),w(Oa,"mouseenter",e[58]),w(Za,"mouseenter",e[59]),w(Ja,"mouseenter",e[60]),w(tr,"mouseenter",e[61]),w(nr,"mouseenter",e[62]),w(ar,"mouseenter",e[63]),w(sr,"mouseenter",e[64]),w(or,"mouseenter",e[65]),w(ir,"mouseenter",e[66]),w(lr,"mouseenter",e[67]),w(hr,"mouseenter",e[68]),w(ur,"mouseenter",e[69]),w(fr,"mouseenter",e[70]),w(pr,"mouseenter",e[71]),w(dr,"mouseenter",e[72]),w(_r,"mouseenter",e[73]),w(br,"mouseenter",e[74]),w(vr,"mouseenter",e[75]),w(wr,"mouseenter",e[76])],lo=!0)},p(g,X){const Cr={};X[2]&32768&&(Cr.$$scope={dirty:X,ctx:g}),I.$set(Cr);const an={};X[2]&32768&&(an.$$scope={dirty:X,ctx:g}),xe.$set(an)},i(g){is||(fe(I.$$.fragment,g),fe(xe.$$.fragment,g),is=!0)},o(g){be(I.$$.fragment,g),be(xe.$$.fragment,g),is=!1},d(g){g&&r(t),g&&r(s),g&&r(o),g&&r(p),g&&r(m),g&&r(Y),g&&r(Q),$e(I),g&&r(Be),g&&r(Ve),g&&r(Ne),g&&r(ce),$e(xe),g&&r(en),g&&r(We),g&&r(it),g&&r(Te),g&&r(ut),g&&r(Ct),g&&r(vn),g&&r(He),g&&r(tn),g&&r(kn),g&&r(zn),g&&r(rt),g&&r(oa),g&&r(wn),g&&r(Gn),g&&r(de),g&&r(Ba),g&&r(ca),g&&r(Ra),g&&r(da),g&&r(Qa),g&&r(xn),g&&r(ja),g&&r(Jn),g&&r(Or),g&&r(Ua),g&&r(Kr),g&&r(An),g&&r(Zr),g&&r(ga),g&&r(Yr),g&&r(Ka),g&&r(Jr),g&&r(Ya),g&&r(Xr),g&&r(Xa),g&&r(es),g&&r(er),g&&r(ts),g&&r(ea),g&&r(ns),g&&r(rr),g&&r(as),g&&r(Rt),g&&r(rs),g&&r(mr),g&&r(ss),g&&r(cr),g&&r(os),g&&r(Yt),lo=!1,jn(Po)}}}function Z(e){console.log(e)}function Mu(e){return[()=>Z(["n"]),()=>Z([]),()=>Z([]),()=>Z(["n","m","s","t"]),()=>Z(["n","N"]),()=>Z([]),()=>Z(["N"]),()=>Z(["n"]),()=>Z([]),()=>Z([]),()=>Z([]),()=>Z(["x"]),()=>Z(["x"]),()=>Z(["k"]),()=>Z(["k","x"]),()=>Z(["k","\\alpha"]),()=>Z(["x","k","\\beta"]),()=>Z(["n","k"]),()=>Z(["\\beta","k","\\alpha"]),()=>Z(["\\beta","k","\\alpha"]),()=>Z(["n","k"]),()=>Z(["k","x"]),()=>Z([]),()=>Z([]),()=>Z(["n"]),()=>Z(["n"]),()=>Z([]),()=>Z(["N"]),()=>Z([]),()=>Z(["n"]),()=>Z(["r","n","m","N","s","t"]),()=>Z(["\\psi"]),()=>Z(["x","\\psi","r","n","m","s","t"]),()=>Z([]),()=>Z(["n","x","N","\\psi"]),()=>Z(["y"]),()=>Z(["n"]),()=>Z(["y","k"]),()=>Z(["k"]),()=>Z(["y"]),()=>Z(["y","k"]),()=>Z(["k"]),()=>Z([]),()=>Z(["y","k"]),()=>Z([]),()=>Z(["n","k"]),()=>Z(["y"]),()=>Z(["y","k","n"]),()=>Z(["n"]),()=>Z(["k"]),()=>Z(["y","k","N","n"]),()=>Z(["x","\\psi","r","y","n","m","N","s","t"]),()=>Z(["k"]),()=>Z(["y","k","x"]),()=>Z(["k","x"]),()=>Z(["y","k"]),()=>Z(["k","x"]),()=>Z(["y","k"]),()=>Z(["n"]),()=>Z(["x","\\psi","y","n","N"]),()=>Z(["x","\\psi","y","n","k","N"]),()=>Z(["x","\\psi","y","n","k","N"]),()=>Z(["x"]),()=>Z(["k"]),()=>Z(["x","\\psi","y","n","k","N"]),()=>Z(["y","n","k"]),()=>Z(["y","N"]),()=>Z(["y","k"]),()=>Z(["y"]),()=>Z(["y"]),()=>Z(["y","n"]),()=>Z(["y","x","N","\\psi"]),()=>Z(["x"]),()=>Z(["y","x","N"]),()=>Z(["y"]),()=>Z(["x"]),()=>Z(["x"])]}class Pu extends rn{constructor(t){super(),sn(this,t,Mu,Tu,on,{},null,[-1,-1,-1])}}function _s(e,t){return e==null||t==null?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function Su(e,t){return e==null||t==null?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function gi(e){let t,a,s;e.length!==2?(t=_s,a=(m,b)=>_s(e(m),b),s=(m,b)=>e(m)-b):(t=e===_s||e===Su?e:xu,a=e,s=e);function o(m,b,_=0,N=m.length){if(_<N){if(t(b,b)!==0)return N;do{const v=_+N>>>1;a(m[v],b)<0?_=v+1:N=v}while(_<N)}return _}function c(m,b,_=0,N=m.length){if(_<N){if(t(b,b)!==0)return N;do{const v=_+N>>>1;a(m[v],b)<=0?_=v+1:N=v}while(_<N)}return _}function p(m,b,_=0,N=m.length){const v=o(m,b,_,N-1);return v>_&&s(m[v-1],b)>-s(m[v],b)?v-1:v}return{left:o,center:p,right:c}}function xu(){return 0}function Au(e){return e===null?NaN:+e}const qu=gi(_s),Hu=qu.right;gi(Au).center;const Lu=Hu;function Yo(e,t){let a,s;if(t===void 0)for(const o of e)o!=null&&(a===void 0?o>=o&&(a=s=o):(a>o&&(a=o),s<o&&(s=o)));else{let o=-1;for(let c of e)(c=t(c,++o,e))!=null&&(a===void 0?c>=c&&(a=s=c):(a>c&&(a=c),s<c&&(s=c)))}return[a,s]}var mo=Math.sqrt(50),po=Math.sqrt(10),co=Math.sqrt(2);function Iu(e,t,a){var s,o=-1,c,p,m;if(t=+t,e=+e,a=+a,e===t&&a>0)return[e];if((s=t<e)&&(c=e,e=t,t=c),(m=yi(e,t,a))===0||!isFinite(m))return[];if(m>0){let b=Math.round(e/m),_=Math.round(t/m);for(b*m<e&&++b,_*m>t&&--_,p=new Array(c=_-b+1);++o<c;)p[o]=(b+o)*m}else{m=-m;let b=Math.round(e*m),_=Math.round(t*m);for(b/m<e&&++b,_/m>t&&--_,p=new Array(c=_-b+1);++o<c;)p[o]=(b+o)/m}return s&&p.reverse(),p}function yi(e,t,a){var s=(t-e)/Math.max(0,a),o=Math.floor(Math.log(s)/Math.LN10),c=s/Math.pow(10,o);return o>=0?(c>=mo?10:c>=po?5:c>=co?2:1)*Math.pow(10,o):-Math.pow(10,-o)/(c>=mo?10:c>=po?5:c>=co?2:1)}function Fu(e,t,a){var s=Math.abs(t-e)/Math.max(0,a),o=Math.pow(10,Math.floor(Math.log(s)/Math.LN10)),c=s/o;return c>=mo?o*=10:c>=po?o*=5:c>=co&&(o*=2),t<e?-o:o}function zu(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e);break}return this}function No(e,t,a){e.prototype=t.prototype=a,a.constructor=e}function $i(e,t){var a=Object.create(e.prototype);for(var s in t)a[s]=t[s];return a}function Gr(){}var jr=.7,bs=1/jr,Er="\\s*([+-]?\\d+)\\s*",Dr="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",aa="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Vu=/^#([0-9a-f]{3,8})$/,Cu=new RegExp(`^rgb\\(${Er},${Er},${Er}\\)$`),Bu=new RegExp(`^rgb\\(${aa},${aa},${aa}\\)$`),Ru=new RegExp(`^rgba\\(${Er},${Er},${Er},${Dr}\\)$`),Qu=new RegExp(`^rgba\\(${aa},${aa},${aa},${Dr}\\)$`),ju=new RegExp(`^hsl\\(${Dr},${aa},${aa}\\)$`),Du=new RegExp(`^hsla\\(${Dr},${aa},${aa},${Dr}\\)$`),Jo={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};No(Gr,Wr,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:Xo,formatHex:Xo,formatHex8:Wu,formatHsl:Gu,formatRgb:ei,toString:ei});function Xo(){return this.rgb().formatHex()}function Wu(){return this.rgb().formatHex8()}function Gu(){return ki(this).formatHsl()}function ei(){return this.rgb().formatRgb()}function Wr(e){var t,a;return e=(e+"").trim().toLowerCase(),(t=Vu.exec(e))?(a=t[1].length,t=parseInt(t[1],16),a===6?ti(t):a===3?new cn(t>>8&15|t>>4&240,t>>4&15|t&240,(t&15)<<4|t&15,1):a===8?ps(t>>24&255,t>>16&255,t>>8&255,(t&255)/255):a===4?ps(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|t&240,((t&15)<<4|t&15)/255):null):(t=Cu.exec(e))?new cn(t[1],t[2],t[3],1):(t=Bu.exec(e))?new cn(t[1]*255/100,t[2]*255/100,t[3]*255/100,1):(t=Ru.exec(e))?ps(t[1],t[2],t[3],t[4]):(t=Qu.exec(e))?ps(t[1]*255/100,t[2]*255/100,t[3]*255/100,t[4]):(t=ju.exec(e))?ri(t[1],t[2]/100,t[3]/100,1):(t=Du.exec(e))?ri(t[1],t[2]/100,t[3]/100,t[4]):Jo.hasOwnProperty(e)?ti(Jo[e]):e==="transparent"?new cn(NaN,NaN,NaN,0):null}function ti(e){return new cn(e>>16&255,e>>8&255,e&255,1)}function ps(e,t,a,s){return s<=0&&(e=t=a=NaN),new cn(e,t,a,s)}function Uu(e){return e instanceof Gr||(e=Wr(e)),e?(e=e.rgb(),new cn(e.r,e.g,e.b,e.opacity)):new cn}function _o(e,t,a,s){return arguments.length===1?Uu(e):new cn(e,t,a,s==null?1:s)}function cn(e,t,a,s){this.r=+e,this.g=+t,this.b=+a,this.opacity=+s}No(cn,_o,$i(Gr,{brighter(e){return e=e==null?bs:Math.pow(bs,e),new cn(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=e==null?jr:Math.pow(jr,e),new cn(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new cn(La(this.r),La(this.g),La(this.b),vs(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:ni,formatHex:ni,formatHex8:Ou,formatRgb:ai,toString:ai}));function ni(){return`#${Ha(this.r)}${Ha(this.g)}${Ha(this.b)}`}function Ou(){return`#${Ha(this.r)}${Ha(this.g)}${Ha(this.b)}${Ha((isNaN(this.opacity)?1:this.opacity)*255)}`}function ai(){const e=vs(this.opacity);return`${e===1?"rgb(":"rgba("}${La(this.r)}, ${La(this.g)}, ${La(this.b)}${e===1?")":`, ${e})`}`}function vs(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function La(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function Ha(e){return e=La(e),(e<16?"0":"")+e.toString(16)}function ri(e,t,a,s){return s<=0?e=t=a=NaN:a<=0||a>=1?e=t=NaN:t<=0&&(e=NaN),new Qn(e,t,a,s)}function ki(e){if(e instanceof Qn)return new Qn(e.h,e.s,e.l,e.opacity);if(e instanceof Gr||(e=Wr(e)),!e)return new Qn;if(e instanceof Qn)return e;e=e.rgb();var t=e.r/255,a=e.g/255,s=e.b/255,o=Math.min(t,a,s),c=Math.max(t,a,s),p=NaN,m=c-o,b=(c+o)/2;return m?(t===c?p=(a-s)/m+(a<s)*6:a===c?p=(s-t)/m+2:p=(t-a)/m+4,m/=b<.5?c+o:2-c-o,p*=60):m=b>0&&b<1?0:p,new Qn(p,m,b,e.opacity)}function Ku(e,t,a,s){return arguments.length===1?ki(e):new Qn(e,t,a,s==null?1:s)}function Qn(e,t,a,s){this.h=+e,this.s=+t,this.l=+a,this.opacity=+s}No(Qn,Ku,$i(Gr,{brighter(e){return e=e==null?bs:Math.pow(bs,e),new Qn(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=e==null?jr:Math.pow(jr,e),new Qn(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+(this.h<0)*360,t=isNaN(e)||isNaN(this.s)?0:this.s,a=this.l,s=a+(a<.5?a:1-a)*t,o=2*a-s;return new cn(ho(e>=240?e-240:e+120,o,s),ho(e,o,s),ho(e<120?e+240:e-120,o,s),this.opacity)},clamp(){return new Qn(si(this.h),cs(this.s),cs(this.l),vs(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const e=vs(this.opacity);return`${e===1?"hsl(":"hsla("}${si(this.h)}, ${cs(this.s)*100}%, ${cs(this.l)*100}%${e===1?")":`, ${e})`}`}}));function si(e){return e=(e||0)%360,e<0?e+360:e}function cs(e){return Math.max(0,Math.min(1,e||0))}function ho(e,t,a){return(e<60?t+(a-t)*e/60:e<180?a:e<240?t+(a-t)*(240-e)/60:t)*255}const Eo=e=>()=>e;function Zu(e,t){return function(a){return e+a*t}}function Yu(e,t,a){return e=Math.pow(e,a),t=Math.pow(t,a)-e,a=1/a,function(s){return Math.pow(e+s*t,a)}}function Ju(e){return(e=+e)==1?Ni:function(t,a){return a-t?Yu(t,a,e):Eo(isNaN(t)?a:t)}}function Ni(e,t){var a=t-e;return a?Zu(e,a):Eo(isNaN(e)?t:e)}const oi=function e(t){var a=Ju(t);function s(o,c){var p=a((o=_o(o)).r,(c=_o(c)).r),m=a(o.g,c.g),b=a(o.b,c.b),_=Ni(o.opacity,c.opacity);return function(N){return o.r=p(N),o.g=m(N),o.b=b(N),o.opacity=_(N),o+""}}return s.gamma=e,s}(1);function Xu(e,t){t||(t=[]);var a=e?Math.min(t.length,e.length):0,s=t.slice(),o;return function(c){for(o=0;o<a;++o)s[o]=e[o]*(1-c)+t[o]*c;return s}}function ef(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function tf(e,t){var a=t?t.length:0,s=e?Math.min(a,e.length):0,o=new Array(s),c=new Array(a),p;for(p=0;p<s;++p)o[p]=To(e[p],t[p]);for(;p<a;++p)c[p]=t[p];return function(m){for(p=0;p<s;++p)c[p]=o[p](m);return c}}function nf(e,t){var a=new Date;return e=+e,t=+t,function(s){return a.setTime(e*(1-s)+t*s),a}}function ws(e,t){return e=+e,t=+t,function(a){return e*(1-a)+t*a}}function af(e,t){var a={},s={},o;(e===null||typeof e!="object")&&(e={}),(t===null||typeof t!="object")&&(t={});for(o in t)o in e?a[o]=To(e[o],t[o]):s[o]=t[o];return function(c){for(o in a)s[o]=a[o](c);return s}}var bo=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,uo=new RegExp(bo.source,"g");function rf(e){return function(){return e}}function sf(e){return function(t){return e(t)+""}}function of(e,t){var a=bo.lastIndex=uo.lastIndex=0,s,o,c,p=-1,m=[],b=[];for(e=e+"",t=t+"";(s=bo.exec(e))&&(o=uo.exec(t));)(c=o.index)>a&&(c=t.slice(a,c),m[p]?m[p]+=c:m[++p]=c),(s=s[0])===(o=o[0])?m[p]?m[p]+=o:m[++p]=o:(m[++p]=null,b.push({i:p,x:ws(s,o)})),a=uo.lastIndex;return a<t.length&&(c=t.slice(a),m[p]?m[p]+=c:m[++p]=c),m.length<2?b[0]?sf(b[0].x):rf(t):(t=b.length,function(_){for(var N=0,v;N<t;++N)m[(v=b[N]).i]=v.x(_);return m.join("")})}function To(e,t){var a=typeof t,s;return t==null||a==="boolean"?Eo(t):(a==="number"?ws:a==="string"?(s=Wr(t))?(t=s,oi):of:t instanceof Wr?oi:t instanceof Date?nf:ef(t)?Xu:Array.isArray(t)?tf:typeof t.valueOf!="function"&&typeof t.toString!="function"||isNaN(t)?af:ws)(e,t)}function lf(e,t){return e=+e,t=+t,function(a){return Math.round(e*(1-a)+t*a)}}function hf(e){return function(){return e}}function uf(e){return+e}var ii=[0,1];function Nr(e){return e}function vo(e,t){return(t-=e=+e)?function(a){return(a-e)/t}:hf(isNaN(t)?NaN:.5)}function ff(e,t){var a;return e>t&&(a=e,e=t,t=a),function(s){return Math.max(e,Math.min(t,s))}}function mf(e,t,a){var s=e[0],o=e[1],c=t[0],p=t[1];return o<s?(s=vo(o,s),c=a(p,c)):(s=vo(s,o),c=a(c,p)),function(m){return c(s(m))}}function pf(e,t,a){var s=Math.min(e.length,t.length)-1,o=new Array(s),c=new Array(s),p=-1;for(e[s]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++p<s;)o[p]=vo(e[p],e[p+1]),c[p]=a(t[p],t[p+1]);return function(m){var b=Lu(e,m,1,s)-1;return c[b](o[b](m))}}function cf(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function df(){var e=ii,t=ii,a=To,s,o,c,p=Nr,m,b,_;function N(){var k=Math.min(e.length,t.length);return p!==Nr&&(p=ff(e[0],e[k-1])),m=k>2?pf:mf,b=_=null,v}function v(k){return k==null||isNaN(k=+k)?c:(b||(b=m(e.map(s),t,a)))(s(p(k)))}return v.invert=function(k){return p(o((_||(_=m(t,e.map(s),ws)))(k)))},v.domain=function(k){return arguments.length?(e=Array.from(k,uf),N()):e.slice()},v.range=function(k){return arguments.length?(t=Array.from(k),N()):t.slice()},v.rangeRound=function(k){return t=Array.from(k),a=lf,N()},v.clamp=function(k){return arguments.length?(p=k?!0:Nr,N()):p!==Nr},v.interpolate=function(k){return arguments.length?(a=k,N()):a},v.unknown=function(k){return arguments.length?(c=k,v):c},function(k,$){return s=k,o=$,N()}}function _f(){return df()(Nr,Nr)}function bf(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)}function gs(e,t){if((a=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var a,s=e.slice(0,a);return[s.length>1?s[0]+s.slice(2):s,+e.slice(a+1)]}function Tr(e){return e=gs(Math.abs(e)),e?e[1]:NaN}function vf(e,t){return function(a,s){for(var o=a.length,c=[],p=0,m=e[0],b=0;o>0&&m>0&&(b+m+1>s&&(m=Math.max(1,s-b)),c.push(a.substring(o-=m,o+m)),!((b+=m+1)>s));)m=e[p=(p+1)%e.length];return c.reverse().join(t)}}function wf(e){return function(t){return t.replace(/[0-9]/g,function(a){return e[+a]})}}var gf=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function ys(e){if(!(t=gf.exec(e)))throw new Error("invalid format: "+e);var t;return new Mo({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}ys.prototype=Mo.prototype;function Mo(e){this.fill=e.fill===void 0?" ":e.fill+"",this.align=e.align===void 0?">":e.align+"",this.sign=e.sign===void 0?"-":e.sign+"",this.symbol=e.symbol===void 0?"":e.symbol+"",this.zero=!!e.zero,this.width=e.width===void 0?void 0:+e.width,this.comma=!!e.comma,this.precision=e.precision===void 0?void 0:+e.precision,this.trim=!!e.trim,this.type=e.type===void 0?"":e.type+""}Mo.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function yf(e){e:for(var t=e.length,a=1,s=-1,o;a<t;++a)switch(e[a]){case".":s=o=a;break;case"0":s===0&&(s=a),o=a;break;default:if(!+e[a])break e;s>0&&(s=0);break}return s>0?e.slice(0,s)+e.slice(o+1):e}var Ei;function $f(e,t){var a=gs(e,t);if(!a)return e+"";var s=a[0],o=a[1],c=o-(Ei=Math.max(-8,Math.min(8,Math.floor(o/3)))*3)+1,p=s.length;return c===p?s:c>p?s+new Array(c-p+1).join("0"):c>0?s.slice(0,c)+"."+s.slice(c):"0."+new Array(1-c).join("0")+gs(e,Math.max(0,t+c-1))[0]}function li(e,t){var a=gs(e,t);if(!a)return e+"";var s=a[0],o=a[1];return o<0?"0."+new Array(-o).join("0")+s:s.length>o+1?s.slice(0,o+1)+"."+s.slice(o+1):s+new Array(o-s.length+2).join("0")}const hi={"%":(e,t)=>(e*100).toFixed(t),b:e=>Math.round(e).toString(2),c:e=>e+"",d:bf,e:(e,t)=>e.toExponential(t),f:(e,t)=>e.toFixed(t),g:(e,t)=>e.toPrecision(t),o:e=>Math.round(e).toString(8),p:(e,t)=>li(e*100,t),r:li,s:$f,X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function ui(e){return e}var fi=Array.prototype.map,mi=["y","z","a","f","p","n","\xB5","m","","k","M","G","T","P","E","Z","Y"];function kf(e){var t=e.grouping===void 0||e.thousands===void 0?ui:vf(fi.call(e.grouping,Number),e.thousands+""),a=e.currency===void 0?"":e.currency[0]+"",s=e.currency===void 0?"":e.currency[1]+"",o=e.decimal===void 0?".":e.decimal+"",c=e.numerals===void 0?ui:wf(fi.call(e.numerals,String)),p=e.percent===void 0?"%":e.percent+"",m=e.minus===void 0?"\u2212":e.minus+"",b=e.nan===void 0?"NaN":e.nan+"";function _(v){v=ys(v);var k=v.fill,$=v.align,x=v.sign,O=v.symbol,j=v.zero,P=v.width,C=v.comma,F=v.precision,S=v.trim,z=v.type;z==="n"?(C=!0,z="g"):hi[z]||(F===void 0&&(F=12),S=!0,z="g"),(j||k==="0"&&$==="=")&&(j=!0,k="0",$="=");var M=O==="$"?a:O==="#"&&/[boxX]/.test(z)?"0"+z.toLowerCase():"",J=O==="$"?s:/[%p]/.test(z)?p:"",Y=hi[z],Q=/[defgprs%]/.test(z);F=F===void 0?6:/[gprs]/.test(z)?Math.max(1,Math.min(21,F)):Math.max(0,Math.min(20,F));function te(I){var E=M,A=J,ae,R,L;if(z==="c")A=Y(I)+A,I="";else{I=+I;var D=I<0||1/I<0;if(I=isNaN(I)?b:Y(Math.abs(I),F),S&&(I=yf(I)),D&&+I==0&&x!=="+"&&(D=!1),E=(D?x==="("?x:m:x==="-"||x==="("?"":x)+E,A=(z==="s"?mi[8+Ei/3]:"")+A+(D&&x==="("?")":""),Q){for(ae=-1,R=I.length;++ae<R;)if(L=I.charCodeAt(ae),48>L||L>57){A=(L===46?o+I.slice(ae+1):I.slice(ae))+A,I=I.slice(0,ae);break}}}C&&!j&&(I=t(I,1/0));var oe=E.length+I.length+A.length,ne=oe<P?new Array(P-oe+1).join(k):"";switch(C&&j&&(I=t(ne+I,ne.length?P-A.length:1/0),ne=""),$){case"<":I=E+I+A+ne;break;case"=":I=E+ne+I+A;break;case"^":I=ne.slice(0,oe=ne.length>>1)+E+I+A+ne.slice(oe);break;default:I=ne+E+I+A;break}return c(I)}return te.toString=function(){return v+""},te}function N(v,k){var $=_((v=ys(v),v.type="f",v)),x=Math.max(-8,Math.min(8,Math.floor(Tr(k)/3)))*3,O=Math.pow(10,-x),j=mi[8+x/3];return function(P){return $(O*P)+j}}return{format:_,formatPrefix:N}}var ds,Ti,Mi;Nf({thousands:",",grouping:[3],currency:["$",""]});function Nf(e){return ds=kf(e),Ti=ds.format,Mi=ds.formatPrefix,ds}function Ef(e){return Math.max(0,-Tr(Math.abs(e)))}function Tf(e,t){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(Tr(t)/3)))*3-Tr(Math.abs(e)))}function Mf(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,Tr(t)-Tr(e))+1}function Pf(e,t,a,s){var o=Fu(e,t,a),c;switch(s=ys(s==null?",f":s),s.type){case"s":{var p=Math.max(Math.abs(e),Math.abs(t));return s.precision==null&&!isNaN(c=Tf(o,p))&&(s.precision=c),Mi(s,p)}case"":case"e":case"g":case"p":case"r":{s.precision==null&&!isNaN(c=Mf(o,Math.max(Math.abs(e),Math.abs(t))))&&(s.precision=c-(s.type==="e"));break}case"f":case"%":{s.precision==null&&!isNaN(c=Ef(o))&&(s.precision=c-(s.type==="%")*2);break}}return Ti(s)}function Sf(e){var t=e.domain;return e.ticks=function(a){var s=t();return Iu(s[0],s[s.length-1],a==null?10:a)},e.tickFormat=function(a,s){var o=t();return Pf(o[0],o[o.length-1],a==null?10:a,s)},e.nice=function(a){a==null&&(a=10);var s=t(),o=0,c=s.length-1,p=s[o],m=s[c],b,_,N=10;for(m<p&&(_=p,p=m,m=_,_=o,o=c,c=_);N-- >0;){if(_=yi(p,m,a),_===b)return s[o]=p,s[c]=m,t(s);if(_>0)p=Math.floor(p/_)*_,m=Math.ceil(m/_)*_;else if(_<0)p=Math.ceil(p*_)/_,m=Math.floor(m*_)/_;else break;b=_}return e},e}function wo(){var e=_f();return e.copy=function(){return cf(e,wo())},zu.apply(e,arguments),Sf(e)}const go=Math.PI,yo=2*go,qa=1e-6,xf=yo-qa;function $o(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Pi(){return new $o}$o.prototype=Pi.prototype={constructor:$o,moveTo:function(e,t){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)},closePath:function(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(e,t){this._+="L"+(this._x1=+e)+","+(this._y1=+t)},quadraticCurveTo:function(e,t,a,s){this._+="Q"+ +e+","+ +t+","+(this._x1=+a)+","+(this._y1=+s)},bezierCurveTo:function(e,t,a,s,o,c){this._+="C"+ +e+","+ +t+","+ +a+","+ +s+","+(this._x1=+o)+","+(this._y1=+c)},arcTo:function(e,t,a,s,o){e=+e,t=+t,a=+a,s=+s,o=+o;var c=this._x1,p=this._y1,m=a-e,b=s-t,_=c-e,N=p-t,v=_*_+N*N;if(o<0)throw new Error("negative radius: "+o);if(this._x1===null)this._+="M"+(this._x1=e)+","+(this._y1=t);else if(v>qa)if(!(Math.abs(N*m-b*_)>qa)||!o)this._+="L"+(this._x1=e)+","+(this._y1=t);else{var k=a-c,$=s-p,x=m*m+b*b,O=k*k+$*$,j=Math.sqrt(x),P=Math.sqrt(v),C=o*Math.tan((go-Math.acos((x+v-O)/(2*j*P)))/2),F=C/P,S=C/j;Math.abs(F-1)>qa&&(this._+="L"+(e+F*_)+","+(t+F*N)),this._+="A"+o+","+o+",0,0,"+ +(N*k>_*$)+","+(this._x1=e+S*m)+","+(this._y1=t+S*b)}},arc:function(e,t,a,s,o,c){e=+e,t=+t,a=+a,c=!!c;var p=a*Math.cos(s),m=a*Math.sin(s),b=e+p,_=t+m,N=1^c,v=c?s-o:o-s;if(a<0)throw new Error("negative radius: "+a);this._x1===null?this._+="M"+b+","+_:(Math.abs(this._x1-b)>qa||Math.abs(this._y1-_)>qa)&&(this._+="L"+b+","+_),a&&(v<0&&(v=v%yo+yo),v>xf?this._+="A"+a+","+a+",0,1,"+N+","+(e-p)+","+(t-m)+"A"+a+","+a+",0,1,"+N+","+(this._x1=b)+","+(this._y1=_):v>qa&&(this._+="A"+a+","+a+",0,"+ +(v>=go)+","+N+","+(this._x1=e+a*Math.cos(o))+","+(this._y1=t+a*Math.sin(o))))},rect:function(e,t,a,s){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)+"h"+ +a+"v"+ +s+"h"+-a+"Z"},toString:function(){return this._}};function $r(e){return function(){return e}}function Af(e){return typeof e=="object"&&"length"in e?e:Array.from(e)}function Si(e){this._context=e}Si.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:this._context.lineTo(e,t);break}}};function qf(e){return new Si(e)}function Hf(e){return e[0]}function Lf(e){return e[1]}function If(e,t){var a=$r(!0),s=null,o=qf,c=null;e=typeof e=="function"?e:e===void 0?Hf:$r(e),t=typeof t=="function"?t:t===void 0?Lf:$r(t);function p(m){var b,_=(m=Af(m)).length,N,v=!1,k;for(s==null&&(c=o(k=Pi())),b=0;b<=_;++b)!(b<_&&a(N=m[b],b,m))===v&&((v=!v)?c.lineStart():c.lineEnd()),v&&c.point(+e(N,b,m),+t(N,b,m));if(k)return c=null,k+""||null}return p.x=function(m){return arguments.length?(e=typeof m=="function"?m:$r(+m),p):e},p.y=function(m){return arguments.length?(t=typeof m=="function"?m:$r(+m),p):t},p.defined=function(m){return arguments.length?(a=typeof m=="function"?m:$r(!!m),p):a},p.curve=function(m){return arguments.length?(o=m,s!=null&&(c=o(s)),p):o},p.context=function(m){return arguments.length?(m==null?s=c=null:c=o(s=m),p):s},p}function pi(e,t,a){const s=e.slice();return s[10]=t[a],s}function ci(e,t,a){const s=e.slice();return s[10]=t[a],s}function di(e){let t,a,s,o=e[10]+"",c,p;return{c(){t=ka("g"),a=ka("line"),s=ka("text"),c=i(o),this.h()},l(m){t=Na(m,"g",{transform:!0});var b=f(t);a=Na(b,"line",{y2:!0,stroke:!0,class:!0}),f(a).forEach(r),s=Na(b,"text",{"font-size":!0,"text-anchor":!0,y:!0});var _=f(s);c=l(_,o),_.forEach(r),b.forEach(r),this.h()},h(){V(a,"y2","3"),V(a,"stroke","black"),V(a,"class","svelte-e941bf"),V(s,"font-size","5"),V(s,"text-anchor","middle"),V(s,"y","8"),V(t,"transform",p=`translate(${e[5](e[10]).toPrecision(3)}, 102)`)},m(m,b){y(m,t,b),n(t,a),n(t,s),n(s,c)},p(m,b){b&288&&o!==(o=m[10]+"")&&ko(c,o),b&288&&p!==(p=`translate(${m[5](m[10]).toPrecision(3)}, 102)`)&&V(t,"transform",p)},d(m){m&&r(t)}}}function _i(e){let t,a,s,o=e[10]+"",c,p;return{c(){t=ka("g"),a=ka("line"),s=ka("text"),c=i(o),this.h()},l(m){t=Na(m,"g",{transform:!0});var b=f(t);a=Na(b,"line",{x2:!0,stroke:!0,class:!0}),f(a).forEach(r),s=Na(b,"text",{"font-size":!0,"text-anchor":!0,x:!0,y:!0});var _=f(s);c=l(_,o),_.forEach(r),b.forEach(r),this.h()},h(){V(a,"x2","-3"),V(a,"stroke","black"),V(a,"class","svelte-e941bf"),V(s,"font-size","5"),V(s,"text-anchor","end"),V(s,"x","-6"),V(s,"y","1.5"),V(t,"transform",p=`translate(-2, ${e[4](e[10]).toPrecision(3)})`)},m(m,b){y(m,t,b),n(t,a),n(t,s),n(s,c)},p(m,b){b&272&&o!==(o=m[10]+"")&&ko(c,o),b&272&&p!==(p=`translate(-2, ${m[4](m[10]).toPrecision(3)})`)&&V(t,"transform",p)},d(m){m&&r(t)}}}function bi(e){let t,a,s,o;return{c(){t=ka("path"),this.h()},l(c){t=Na(c,"path",{d:!0,stroke:!0,class:!0}),f(t).forEach(r),this.h()},h(){V(t,"d",a=e[7](e[0])),V(t,"stroke",e[2]),V(t,"class","svelte-e941bf")},m(c,p){y(c,t,p),o=!0},p(c,p){(!o||p&129&&a!==(a=c[7](c[0])))&&V(t,"d",a),(!o||p&4)&&V(t,"stroke",c[2])},i(c){o||(wi(()=>{s||(s=Uo(t,Ko,{duration:2e3},!0)),s.run(1)}),o=!0)},o(c){s||(s=Uo(t,Ko,{duration:2e3},!1)),s.run(0),o=!1},d(c){c&&r(t),c&&s&&s.end()}}}function Ff(e){let t,a,s,o,c,p=e[5].ticks(ms(e[8],10)),m=[];for(let v=0;v<p.length;v+=1)m[v]=di(ci(e,p,v));let b=e[4].ticks(ms(e[8],7)),_=[];for(let v=0;v<b.length;v+=1)_[v]=_i(pi(e,b,v));let N=e[1]&&bi(e);return{c(){t=ka("svg");for(let v=0;v<m.length;v+=1)m[v].c();a=kr();for(let v=0;v<_.length;v+=1)_[v].c();s=kr(),N&&N.c(),this.h()},l(v){t=Na(v,"svg",{width:!0,height:!0,viewBox:!0});var k=f(t);for(let $=0;$<m.length;$+=1)m[$].l(k);a=kr();for(let $=0;$<_.length;$+=1)_[$].l(k);s=kr(),N&&N.l(k),k.forEach(r),this.h()},h(){V(t,"width","100%"),V(t,"height",e[3]),V(t,"viewBox",o="-15 -10 "+(e[6]+15)+" 120")},m(v,k){y(v,t,k);for(let $=0;$<m.length;$+=1)m[$].m(t,null);n(t,a);for(let $=0;$<_.length;$+=1)_[$].m(t,null);n(t,s),N&&N.m(t,null),c=!0},p(v,[k]){if(k&288){p=v[5].ticks(ms(v[8],10));let $;for($=0;$<p.length;$+=1){const x=ci(v,p,$);m[$]?m[$].p(x,k):(m[$]=di(x),m[$].c(),m[$].m(t,a))}for(;$<m.length;$+=1)m[$].d(1);m.length=p.length}if(k&272){b=v[4].ticks(ms(v[8],7));let $;for($=0;$<b.length;$+=1){const x=pi(v,b,$);_[$]?_[$].p(x,k):(_[$]=_i(x),_[$].c(),_[$].m(t,s))}for(;$<_.length;$+=1)_[$].d(1);_.length=b.length}v[1]?N?(N.p(v,k),k&2&&fe(N,1)):(N=bi(v),N.c(),fe(N,1),N.m(t,null)):N&&(Sh(),be(N,1,1,()=>{N=null}),xh()),(!c||k&8)&&V(t,"height",v[3]),(!c||k&64&&o!==(o="-15 -10 "+(v[6]+15)+" 120"))&&V(t,"viewBox",o)},i(v){c||(fe(N),c=!0)},o(v){be(N),c=!1},d(v){v&&r(t),Go(m,v),Go(_,v),N&&N.d()}}}function zf(e,t,a){let s,o,c,p,m,{data:b}=t,{show:_}=t,{strokeColor:N="#8A2BE2"}=t,{height:v=300}=t,{aspectRatio:k=2}=t;return e.$$set=$=>{"data"in $&&a(0,b=$.data),"show"in $&&a(1,_=$.show),"strokeColor"in $&&a(2,N=$.strokeColor),"height"in $&&a(3,v=$.height),"aspectRatio"in $&&a(9,k=$.aspectRatio)},e.$$.update=()=>{e.$$.dirty&1&&a(8,s=b.length),e.$$.dirty&512&&a(6,o=k*100),e.$$.dirty&65&&a(5,c=wo().domain(Yo(b.map($=>$.x))).range([0,o])),e.$$.dirty&1&&a(4,p=wo().domain(Yo(b.map($=>$.y))).range([0,100])),e.$$.dirty&48&&a(7,m=If().x($=>c($.x)).y($=>p($.y)))},[b,_,N,v,p,c,o,m,s,k]}class vi extends rn{constructor(t){super(),sn(this,t,zf,Ff,on,{data:0,show:1,strokeColor:2,height:3,aspectRatio:9})}}function Vf(e){let t,a,s,o,c,p,m=d(`x = ${e[0]}`)+"",b,_,N,v,k,$,x,O,j,P,C,F,S,z,M,J,Y,Q,te,I,E,A,ae,R;return t=new Pu({}),M=new vi({props:{data:e[3],show:!0,aspectRatio:3}}),E=new vi({props:{data:e[2],show:!0,aspectRatio:3,strokeColor:"#A0522D"}}),{c(){we(t.$$.fragment),a=q(),s=h("div"),o=h("div"),c=h("div"),p=h("span"),b=q(),_=h("input"),N=q(),v=h("div"),k=h("span"),$=i(e[1]),x=i(" qubits"),O=q(),j=h("input"),P=q(),C=h("div"),F=h("p"),S=i("Real part"),z=q(),we(M.$$.fragment),J=q(),Y=h("div"),Q=h("p"),te=i("Imaginary part"),I=q(),we(E.$$.fragment),this.h()},l(L){ge(t.$$.fragment,L),a=H(L),s=u(L,"DIV",{class:!0});var D=f(s);o=u(D,"DIV",{class:!0});var oe=f(o);c=u(oe,"DIV",{class:!0});var ne=f(c);p=u(ne,"SPAN",{class:!0});var Me=f(p);Me.forEach(r),b=H(ne),_=u(ne,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),ne.forEach(r),N=H(oe),v=u(oe,"DIV",{class:!0});var re=f(v);k=u(re,"SPAN",{class:!0});var W=f(k);$=l(W,e[1]),x=l(W," qubits"),W.forEach(r),O=H(re),j=u(re,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),re.forEach(r),oe.forEach(r),P=H(D),C=u(D,"DIV",{class:!0});var T=f(C);F=u(T,"P",{});var K=f(F);S=l(K,"Real part"),K.forEach(r),z=H(T),ge(M.$$.fragment,T),T.forEach(r),J=H(D),Y=u(D,"DIV",{});var ee=f(Y);Q=u(ee,"P",{});var Pe=f(Q);te=l(Pe,"Imaginary part"),Pe.forEach(r),I=H(ee),ge(E.$$.fragment,ee),ee.forEach(r),D.forEach(r),this.h()},h(){V(p,"class","label svelte-1k89lhb"),V(_,"type","range"),V(_,"min",0),V(_,"max",10),V(_,"step",1),V(_,"class","svelte-1k89lhb"),V(c,"class","col-lg-6 col-sm-12"),V(k,"class","label svelte-1k89lhb"),V(j,"type","range"),V(j,"min",3),V(j,"max",10),V(j,"step",1),V(j,"class","svelte-1k89lhb"),V(v,"class","col-lg-6 col-sm-12"),V(o,"class","row"),V(C,"class","mb-3"),V(s,"class","interaction container")},m(L,D){ye(t,L,D),y(L,a,D),y(L,s,D),n(s,o),n(o,c),n(c,p),p.innerHTML=m,n(c,b),n(c,_),Xt(_,e[0]),n(o,N),n(o,v),n(v,k),n(k,$),n(k,x),n(v,O),n(v,j),Xt(j,e[1]),n(s,P),n(s,C),n(C,F),n(F,S),n(C,z),ye(M,C,null),n(s,J),n(s,Y),n(Y,Q),n(Q,te),n(Y,I),ye(E,Y,null),A=!0,ae||(R=[w(_,"change",e[6]),w(_,"input",e[6]),w(j,"change",e[7]),w(j,"input",e[7])],ae=!0)},p(L,[D]){(!A||D&1)&&m!==(m=d(`x = ${L[0]}`)+"")&&(p.innerHTML=m),D&1&&Xt(_,L[0]),(!A||D&2)&&ko($,L[1]),D&2&&Xt(j,L[1]);const oe={};D&8&&(oe.data=L[3]),M.$set(oe);const ne={};D&4&&(ne.data=L[2]),E.$set(ne)},i(L){A||(fe(t.$$.fragment,L),fe(M.$$.fragment,L),fe(E.$$.fragment,L),A=!0)},o(L){be(t.$$.fragment,L),be(M.$$.fragment,L),be(E.$$.fragment,L),A=!1},d(L){$e(t,L),L&&r(a),L&&r(s),$e(M),$e(E),ae=!1,jn(R)}}}function Cf(e,t,a){let s,o,c,p,m,b;function _(){o=na(this.value),a(0,o)}function N(){s=na(this.value),a(1,s)}return e.$$.update=()=>{e.$$.dirty&2&&a(5,c=Oo(2,s)),e.$$.dirty&33&&a(4,b=[...Array(c).keys()].map(v=>Oo(qh,Hh(2*fo*o*v/c,Lh)))),e.$$.dirty&16&&a(3,p=b.map((v,k)=>({x:k,y:v.im}))),e.$$.dirty&16&&a(2,m=b.map((v,k)=>({x:k,y:v.re})))},a(1,s=3),a(0,o=9),[o,s,m,p,b,c,_,N]}class Bf extends rn{constructor(t){super(),sn(this,t,Cf,Vf,on,{})}}const Rf='<a href="https://en.wikipedia.org/wiki/Projection_(linear_algebra)"><h3>Projection (linear algebra)</h3></a><p>In linear algebra and functional analysis, a <b>projection</b> is a linear transformation <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b4dc73bf40314945ff376bd363916a738548d40a" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:1.745ex;height:2.176ex" /></span> from a vector space to itself such that <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/5369d895625034bc50c9f28975e3293ef6f2105b" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:10.529ex;height:2.176ex" /></span>. That is, whenever <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b4dc73bf40314945ff376bd363916a738548d40a" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:1.745ex;height:2.176ex" /></span> is applied twice to any vector, it gives the same result as if it were applied once. It leaves its image unchanged. This definition of "projection" formalizes and generalizes the idea of graphical projection. One can also consider the effect of a projection on a geometrical object by examining the effect of the projection on points in the object.</p>',Qf='<a href="https://en.wikipedia.org/wiki/Bloch_sphere"><h3>Bloch sphere</h3></a><p>In quantum mechanics and computing, the <b>Bloch sphere</b> is a geometrical representation of the pure state space of a two-level quantum mechanical system (qubit), named after the physicist Felix Bloch.</p>',jf='<a href="https://en.wikipedia.org/wiki/Degrees_of_freedom"><h3>Degrees of freedom</h3></a><p><b>Degrees of freedom</b> refers to the number of independent variables or parameters of a system. In various scientific fields, the word "freedom" is used to describe the limits to which physical movement or other physical processes are possible. This relates to the philosophical concept to the extent that people may be considered to have as much freedom as they are physically able to exercise.</p>',Df='<a href="https://en.wikipedia.org/wiki/Phase_factor"><h3>Phase factor</h3></a><p>For any complex number written in polar form, the <b>phase factor</b> is the complex exponential factor. As such, the term "phase factor" is related to the more general term phasor, which may have any magnitude. The phase factor is a unit complex number, i.e. a complex number of absolute value 1. It is commonly used in quantum mechanics.</p>';function Wf(e){let t;return{c(){t=i("projection")},l(a){t=l(a,"projection")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function Gf(e){let t;return{c(){t=i("Bloch sphere")},l(a){t=l(a,"Bloch sphere")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function Uf(e){let t;return{c(){t=i("degrees of freedom")},l(a){t=l(a,"degrees of freedom")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function Of(e){let t;return{c(){t=i("phase")},l(a){t=l(a,"phase")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function Kf(e){let t,a,s,o,c,p,m=d("\\alpha")+"",b,_,N=d("\\beta")+"",v,k,$=d("\\alpha = \\Vert{\\alpha}\\Vert \\cdot e^{i \\phi_{\\alpha}}")+"",x,O,j=d("\\beta = \\Vert{\\beta}\\Vert \\cdot e^{i \\phi_{\\beta}}")+"",P,C,F=d("\\Vert{\\alpha}\\Vert \\cdot e^{i \\phi_{\\alpha}} |0\\rangle + \\Vert{\\beta}\\Vert \\cdot e^{i \\phi_{\\beta}} |1\\rangle")+"",S,z,M,J,Y,Q=d("e^{i \\phi_{\\alpha}}")+"",te,I,E=d("\\Vert{e^{i \\phi_{\\alpha}}}\\Vert^2")+"",A,ae,R=d("1")+"",L,D,oe=d("\\phi_{\\alpha}")+"",ne,Me,re=d("\\phi_{\\beta}")+"",W,T,K=d("e^{i \\phi_{\\alpha}}")+"",ee,Pe,ke=d("\\Vert{\\alpha}\\Vert \\cdot |0\\rangle + \\Vert{\\beta}\\Vert \\cdot \\frac{e^{i \\phi_{\\beta}}}{e^{i \\phi_{\\alpha}}} |1\\rangle")+"",Le,Ie,Se=d("\\frac{e^{i \\phi_{\\beta}}}{e^{i \\phi_{\\alpha}}} = e^{i (\\phi_{\\beta} - \\phi_{\\alpha})}")+"",Be,Ve,mt=d("\\phi = \\phi_{\\beta} - \\phi_{\\alpha}")+"",Ne,ce,wt=d("\\Vert{\\alpha}\\Vert \\cdot |0\\rangle + \\Vert{\\beta}\\Vert \\cdot e^{i \\phi} |1\\rangle")+"",xe,Je,le,Xe,pt,G=d("\\Vert{\\alpha}\\Vert^2 + \\Vert{\\beta}\\Vert^2 = 1")+"",_e,U,ct=d("\\theta")+"",nt,je,dt=d("\\cos{(\\frac{\\theta}{2})} \\cdot |0 \\rangle + \\sin{(\\frac{\\theta}{2})} \\cdot e^{i \\phi} |1 \\rangle")+"",at,De,kt=d("\\theta")+"",_t,ot,Pt=d("\\phi")+"",ie,Ee,he=d("\\theta")+"",Ht,gt,en=d("z")+"",We,Nt,Ot=d("\\phi")+"",zt,vt,Vt,Et,dn=d("x-y")+"",yt,Ke,St,bt,Oe,et,it,Te,Tt,lt=d("\\theta")+"",_n,$t,Lt=d("\\phi")+"",bn,ht,Kt,ln,jt,ze;return vt=new tt({props:{hovertext:Rf,$$slots:{default:[Wf]},$$scope:{ctx:e}}}),Ke=new tt({props:{hovertext:Qf,$$slots:{default:[Gf]},$$scope:{ctx:e}}}),it=new tt({props:{hovertext:jf,$$slots:{default:[Uf]},$$scope:{ctx:e}}}),ht=new tt({props:{hovertext:Df,$$slots:{default:[Of]},$$scope:{ctx:e}}}),{c(){t=h("h2"),a=i("The Bloch-sphere"),s=q(),o=h("p"),c=i("As the coefficients "),p=h("span"),b=i(" and "),_=h("span"),v=i(" are complex numbers, they can be expressed in the form "),k=h("span"),x=i(" and "),O=h("span"),P=i(". Thus, the state of the qubit can be rewritten as "),C=h("span"),S=i("."),z=q(),M=h("p"),J=i("Remember that "),Y=h("span"),te=i(" is a unit vector rotated around the origin, and therefore the square of its norm "),I=h("span"),A=i(" also equals to "),ae=h("span"),L=i(". This means that we can modify the angles "),D=h("span"),ne=i(" and "),Me=h("span"),W=i(" freely without affecting the measurement probabilities. Therefore, we can do an algebraic trick to simplify the expression above. Namely, let's divide the state by "),T=h("span"),ee=i(" to obtain "),Pe=h("span"),Le=i(". By the rules of exponentiation, "),Ie=h("span"),Be=i(". Next, let's introduce a new variable "),Ve=h("span"),Ne=i(", with the help of which the state can be further simplified to "),ce=h("span"),xe=i("."),Je=q(),le=h("p"),Xe=i("We know that "),pt=h("span"),_e=i(". Consequently, these two numbers can also be represented geometrically as vector of unit length rotated around the origin by some angle, the double of which we'll denote as "),U=h("span"),nt=i(". Using trigonometry, we can now rewrite the state as "),je=h("span"),at=i(". Notice that we now only need two variables to express the state of the qubit: the angles "),De=h("span"),_t=i(" and "),ot=h("span"),ie=i(". Geometrically, this can be represented as a vector pointing to the surface of 3-dimensional sphere with unit radius, where "),Ee=h("span"),Ht=i(" is the angle of the vector and the "),gt=h("span"),We=i(" axis, and "),Nt=h("span"),zt=i(" is the angle of the vertical "),we(vt.$$.fragment),Vt=i(" of the vector on the "),Et=h("span"),yt=i(" plane. This representation of qubit states is called the "),we(Ke.$$.fragment),St=i("."),bt=q(),Oe=h("p"),et=i("It's important to note that of the two "),we(it.$$.fragment),Te=i(" on the Bloch sphere, only the angle "),Tt=h("span"),_n=i(" is related to measurement probabilities. "),$t=h("span"),bn=i(" is an inherently quantum property called the "),we(ht.$$.fragment),Kt=i(" that does not have physical manifestation directly observable to us. Because of this, it's hard to find any intuitive analogy from everyday life that could help us understand what exactly the phase is. The most useful approach in this context is to look at the phase as a matematical property of quantum objects that we can leverage to design clever algorithms.")},l(se){t=u(se,"H2",{});var Ce=f(t);a=l(Ce,"The Bloch-sphere"),Ce.forEach(r),s=H(se),o=u(se,"P",{});var Ue=f(o);c=l(Ue,"As the coefficients "),p=u(Ue,"SPAN",{});var $n=f(p);$n.forEach(r),b=l(Ue," and "),_=u(Ue,"SPAN",{});var It=f(_);It.forEach(r),v=l(Ue," are complex numbers, they can be expressed in the form "),k=u(Ue,"SPAN",{});var xt=f(k);xt.forEach(r),x=l(Ue," and "),O=u(Ue,"SPAN",{});var ra=f(O);ra.forEach(r),P=l(Ue,". Thus, the state of the qubit can be rewritten as "),C=u(Ue,"SPAN",{});var Zt=f(C);Zt.forEach(r),S=l(Ue,"."),Ue.forEach(r),z=H(se),M=u(se,"P",{});var qe=f(M);J=l(qe,"Remember that "),Y=u(qe,"SPAN",{});var Hn=f(Y);Hn.forEach(r),te=l(qe," is a unit vector rotated around the origin, and therefore the square of its norm "),I=u(qe,"SPAN",{});var Dt=f(I);Dt.forEach(r),A=l(qe," also equals to "),ae=u(qe,"SPAN",{});var me=f(ae);me.forEach(r),L=l(qe,". This means that we can modify the angles "),D=u(qe,"SPAN",{});var Ln=f(D);Ln.forEach(r),ne=l(qe," and "),Me=u(qe,"SPAN",{});var Wt=f(Me);Wt.forEach(r),W=l(qe," freely without affecting the measurement probabilities. Therefore, we can do an algebraic trick to simplify the expression above. Namely, let's divide the state by "),T=u(qe,"SPAN",{});var hn=f(T);hn.forEach(r),ee=l(qe," to obtain "),Pe=u(qe,"SPAN",{});var Dn=f(Pe);Dn.forEach(r),Le=l(qe,". By the rules of exponentiation, "),Ie=u(qe,"SPAN",{});var ue=f(Ie);ue.forEach(r),Be=l(qe,". Next, let's introduce a new variable "),Ve=u(qe,"SPAN",{});var ut=f(Ve);ut.forEach(r),Ne=l(qe,", with the help of which the state can be further simplified to "),ce=u(qe,"SPAN",{});var Ct=f(ce);Ct.forEach(r),xe=l(qe,"."),qe.forEach(r),Je=H(se),le=u(se,"P",{});var pe=f(le);Xe=l(pe,"We know that "),pt=u(pe,"SPAN",{});var vn=f(pt);vn.forEach(r),_e=l(pe,". Consequently, these two numbers can also be represented geometrically as vector of unit length rotated around the origin by some angle, the double of which we'll denote as "),U=u(pe,"SPAN",{});var He=f(U);He.forEach(r),nt=l(pe,". Using trigonometry, we can now rewrite the state as "),je=u(pe,"SPAN",{});var In=f(je);In.forEach(r),at=l(pe,". Notice that we now only need two variables to express the state of the qubit: the angles "),De=u(pe,"SPAN",{});var Gt=f(De);Gt.forEach(r),_t=l(pe," and "),ot=u(pe,"SPAN",{});var Ea=f(ot);Ea.forEach(r),ie=l(pe,". Geometrically, this can be represented as a vector pointing to the surface of 3-dimensional sphere with unit radius, where "),Ee=u(pe,"SPAN",{});var Fn=f(Ee);Fn.forEach(r),Ht=l(pe," is the angle of the vector and the "),gt=u(pe,"SPAN",{});var tn=f(gt);tn.forEach(r),We=l(pe," axis, and "),Nt=u(pe,"SPAN",{});var kn=f(Nt);kn.forEach(r),zt=l(pe," is the angle of the vertical "),ge(vt.$$.fragment,pe),Vt=l(pe," of the vector on the "),Et=u(pe,"SPAN",{});var un=f(Et);un.forEach(r),yt=l(pe," plane. This representation of qubit states is called the "),ge(Ke.$$.fragment,pe),St=l(pe,"."),pe.forEach(r),bt=H(se),Oe=u(se,"P",{});var Mt=f(Oe);et=l(Mt,"It's important to note that of the two "),ge(it.$$.fragment,Mt),Te=l(Mt," on the Bloch sphere, only the angle "),Tt=u(Mt,"SPAN",{});var zn=f(Tt);zn.forEach(r),_n=l(Mt," is related to measurement probabilities. "),$t=u(Mt,"SPAN",{});var rt=f($t);rt.forEach(r),bn=l(Mt," is an inherently quantum property called the "),ge(ht.$$.fragment,Mt),Kt=l(Mt," that does not have physical manifestation directly observable to us. Because of this, it's hard to find any intuitive analogy from everyday life that could help us understand what exactly the phase is. The most useful approach in this context is to look at the phase as a matematical property of quantum objects that we can leverage to design clever algorithms."),Mt.forEach(r)},m(se,Ce){y(se,t,Ce),n(t,a),y(se,s,Ce),y(se,o,Ce),n(o,c),n(o,p),p.innerHTML=m,n(o,b),n(o,_),_.innerHTML=N,n(o,v),n(o,k),k.innerHTML=$,n(o,x),n(o,O),O.innerHTML=j,n(o,P),n(o,C),C.innerHTML=F,n(o,S),y(se,z,Ce),y(se,M,Ce),n(M,J),n(M,Y),Y.innerHTML=Q,n(M,te),n(M,I),I.innerHTML=E,n(M,A),n(M,ae),ae.innerHTML=R,n(M,L),n(M,D),D.innerHTML=oe,n(M,ne),n(M,Me),Me.innerHTML=re,n(M,W),n(M,T),T.innerHTML=K,n(M,ee),n(M,Pe),Pe.innerHTML=ke,n(M,Le),n(M,Ie),Ie.innerHTML=Se,n(M,Be),n(M,Ve),Ve.innerHTML=mt,n(M,Ne),n(M,ce),ce.innerHTML=wt,n(M,xe),y(se,Je,Ce),y(se,le,Ce),n(le,Xe),n(le,pt),pt.innerHTML=G,n(le,_e),n(le,U),U.innerHTML=ct,n(le,nt),n(le,je),je.innerHTML=dt,n(le,at),n(le,De),De.innerHTML=kt,n(le,_t),n(le,ot),ot.innerHTML=Pt,n(le,ie),n(le,Ee),Ee.innerHTML=he,n(le,Ht),n(le,gt),gt.innerHTML=en,n(le,We),n(le,Nt),Nt.innerHTML=Ot,n(le,zt),ye(vt,le,null),n(le,Vt),n(le,Et),Et.innerHTML=dn,n(le,yt),ye(Ke,le,null),n(le,St),y(se,bt,Ce),y(se,Oe,Ce),n(Oe,et),ye(it,Oe,null),n(Oe,Te),n(Oe,Tt),Tt.innerHTML=lt,n(Oe,_n),n(Oe,$t),$t.innerHTML=Lt,n(Oe,bn),ye(ht,Oe,null),n(Oe,Kt),ln=!0,jt||(ze=[w(p,"mouseenter",e[0]),w(_,"mouseenter",e[1]),w(k,"mouseenter",e[2]),w(O,"mouseenter",e[3]),w(C,"mouseenter",e[4]),w(Y,"mouseenter",e[5]),w(I,"mouseenter",e[6]),w(ae,"mouseenter",e[7]),w(D,"mouseenter",e[8]),w(Me,"mouseenter",e[9]),w(T,"mouseenter",e[10]),w(Pe,"mouseenter",e[11]),w(Ie,"mouseenter",e[12]),w(Ve,"mouseenter",e[13]),w(ce,"mouseenter",e[14]),w(pt,"mouseenter",e[15]),w(U,"mouseenter",e[16]),w(je,"mouseenter",e[17]),w(De,"mouseenter",e[18]),w(ot,"mouseenter",e[19]),w(Ee,"mouseenter",e[20]),w(gt,"mouseenter",e[21]),w(Nt,"mouseenter",e[22]),w(Et,"mouseenter",e[23]),w(Tt,"mouseenter",e[24]),w($t,"mouseenter",e[25])],jt=!0)},p(se,[Ce]){const Ue={};Ce&67108864&&(Ue.$$scope={dirty:Ce,ctx:se}),vt.$set(Ue);const $n={};Ce&67108864&&($n.$$scope={dirty:Ce,ctx:se}),Ke.$set($n);const It={};Ce&67108864&&(It.$$scope={dirty:Ce,ctx:se}),it.$set(It);const xt={};Ce&67108864&&(xt.$$scope={dirty:Ce,ctx:se}),ht.$set(xt)},i(se){ln||(fe(vt.$$.fragment,se),fe(Ke.$$.fragment,se),fe(it.$$.fragment,se),fe(ht.$$.fragment,se),ln=!0)},o(se){be(vt.$$.fragment,se),be(Ke.$$.fragment,se),be(it.$$.fragment,se),be(ht.$$.fragment,se),ln=!1},d(se){se&&r(t),se&&r(s),se&&r(o),se&&r(z),se&&r(M),se&&r(Je),se&&r(le),$e(vt),$e(Ke),se&&r(bt),se&&r(Oe),$e(it),$e(ht),jt=!1,jn(ze)}}}function ft(e){console.log(e)}function Zf(e){return[()=>ft(["\\alpha"]),()=>ft(["\\beta"]),()=>ft(["\\phi","\\alpha"]),()=>ft(["\\beta","\\phi"]),()=>ft(["\\phi","\\beta","\\alpha"]),()=>ft(["\\alpha","\\phi"]),()=>ft(["\\alpha","\\phi"]),()=>ft([]),()=>ft(["\\alpha","\\phi"]),()=>ft(["\\beta","\\phi"]),()=>ft(["\\alpha","\\phi"]),()=>ft(["\\phi","\\beta","\\alpha"]),()=>ft(["\\beta","\\phi","\\alpha"]),()=>ft(["\\beta","\\phi","\\alpha"]),()=>ft(["\\phi","\\beta","\\alpha"]),()=>ft(["\\beta","\\alpha"]),()=>ft(["\\theta"]),()=>ft(["\\theta","\\phi"]),()=>ft(["\\theta"]),()=>ft(["\\phi"]),()=>ft(["\\theta"]),()=>ft(["z"]),()=>ft(["\\phi"]),()=>ft(["y","x"]),()=>ft(["\\theta"]),()=>ft(["\\phi"])]}class Yf extends rn{constructor(t){super(),sn(this,t,Zf,Kf,on,{})}}const Jf='<a href="https://en.wikipedia.org/wiki/Complex_number"><h3 class="text-lg font-semibold">Complex number</h3></a><p>In mathematics, a <b>complex number</b> is an element of a number system that extends the real numbers with a specific element denoted <span class="texhtml mvar" style="font-style:italic">i</span>, called the imaginary unit and satisfying the equation <span class="texhtml "><i>i</i><sup>2</sup> = \u22121</span>; every complex number can be expressed in the form <span class="texhtml "><i>a</i> + <i>bi</i></span>, where <span class="texhtml mvar" style="font-style:italic">a</span> and <span class="texhtml mvar" style="font-style:italic">b</span> are real numbers. Because no real number satisfies the above equation, <span class="texhtml mvar" style="font-style:italic">i</span> was called an imaginary number by Ren\xE9 Descartes. For the complex number <span class="texhtml "><i>a</i> + <i>bi</i></span>, <span class="texhtml mvar" style="font-style:italic">a</span> is called the <b><span class="vanchor"><span class="vanchor-text">real part</span></span></b> and <span class="texhtml mvar" style="font-style:italic">b</span> is called the <b><span class="vanchor"><span class="vanchor-text">imaginary part</span></span></b>. The set of complex numbers is denoted by either of the symbols <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f9add4085095b9b6d28d045fd9c92c2c09f549a7" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:1.678ex;height:2.176ex" /></span> or <span class="texhtml "><b>C</b></span>. Despite the historical nomenclature "imaginary", complex numbers are regarded in the mathematical sciences as just as "real" as the real numbers and are fundamental in many aspects of the scientific description of the natural world.</p>',Xf='<a href="https://en.wikipedia.org/wiki/Imaginary_number"><h3>Imaginary number</h3></a><p>An <b>imaginary number</b> is a real number multiplied by the imaginary unit <span class="texhtml mvar" style="font-style:italic">i</span>, which is defined by its property <span class="texhtml "><i>i</i><sup>2</sup> = \u22121</span>. The square of an imaginary number <span class="texhtml mvar" style="font-style:italic">bi</span> is <span class="texhtml ">\u2212<i>b</i><sup>2</sup></span>. For example, <span class="texhtml ">5<i>i</i></span> is an imaginary number, and its square is <span class="texhtml ">\u221225</span>. By definition, zero is considered to be both real and imaginary.</p>',em='<a href="https://en.wikipedia.org/wiki/Real_number"><h3>Real number</h3></a><p>In mathematics, a <b>real number</b> is a value of a continuous quantity that can represent a distance along a line. The adjective <i>real</i> in this context was introduced in the 17th century by Ren\xE9 Descartes, who distinguished between real and imaginary roots of polynomials. The real numbers include all the rational numbers, such as the integer \u22125 and the fraction 4/3, and all the irrational numbers, such as <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b4afc1e27d418021bf10898eb44a7f5f315735ff" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.671ex;width:3.098ex;height:3.009ex" /></span>. Included within the irrationals are the real transcendental numbers, such as <span><span class="texhtml mvar" style="font-style:italic">\u03C0</span></span> (3.14159265...). In addition to measuring distance, real numbers can be used to measure quantities such as time, mass, energy, velocity, and many more. The set of real numbers is denoted using the symbol <b>R</b> or <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/786849c765da7a84dbc3cce43e96aad58a5868dc" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:1.678ex;height:2.176ex" /></span> and is sometimes called "the reals".</p>',tm='<a href="https://en.wikipedia.org/wiki/Complex_plane"><h3>Complex plane</h3></a><p>In mathematics, the <b>complex plane</b> is the plane formed by the complex numbers, with a Cartesian coordinate system such that the <span class="texhtml mvar" style="font-style:italic">x</span>-axis, called <b>real axis</b>, is formed by the real numbers, and the <span class="texhtml mvar" style="font-style:italic">y</span>-axis, called <b>imaginary axis</b>, is formed by the imaginary numbers.</p>',nm='<a href="https://en.wikipedia.org/wiki/Bit"><h3 class="text-lg font-semibold">Bit</h3></a><p>The <b>bit</b> is the most basic unit of information in computing and digital communications. The name is a portmanteau of <b>binary digit</b>. The bit represents a logical state with one of two possible values. These values are most commonly represented as either <span class="nowrap">"<span class="monospaced">1</span>" or "<span class="monospaced">0</span>"</span>, but other representations such as <i>true</i>/<i>false</i>, <i>yes</i>/<i>no</i>, <i>on</i>/<i>off</i>, or <i>+</i>/<i>\u2212</i> are also commonly used.</p>',am='<a href="https://en.wikipedia.org/wiki/Information_theory"><h3>Information theory</h3></a><p><b>Information theory</b> is the scientific study of the quantification, storage, and communication of digital information. The field was fundamentally established by the works of Harry Nyquist and Ralph Hartley, in the 1920s, and Claude Shannon in the 1940s. The field is at the intersection of probability theory, statistics, computer science, statistical mechanics, information engineering, and electrical engineering.</p>',rm='<a href="https://en.wikipedia.org/wiki/Qubit"><h3 class="text-lg font-semibold">Qubit</h3></a><p>In quantum computing, a <b>qubit</b> or <b>quantum bit</b> is a basic unit of quantum information\u2014the quantum version of the classic binary bit physically realized with a two-state device. A qubit is a two-state quantum-mechanical system, one of the simplest quantum systems displaying the peculiarity of quantum mechanics. Examples include the spin of the electron in which the two levels can be taken as spin up and spin down; or the polarization of a single photon in which the two states can be taken to be the vertical polarization and the horizontal polarization. In a classical system, a bit would have to be in one state or the other. However, quantum mechanics allows the qubit to be in a coherent superposition of both states simultaneously, a property that is fundamental to quantum mechanics and quantum computing.</p>',sm='<a href="https://en.wikipedia.org/wiki/Measurement_in_quantum_mechanics"><h3>Measurement in quantum mechanics</h3></a><p>In quantum physics, a <b>measurement</b> is the testing or manipulation of a physical system to yield a numerical result. The predictions that quantum physics makes are in general probabilistic. The mathematical tools for making predictions about what measurement outcomes may occur were developed during the 20th century and make use of linear algebra and functional analysis.</p>',om=`<a href="https://en.wikipedia.org/wiki/Quantum_state"><h3>Quantum state</h3></a><p>In quantum physics, a <b>quantum state</b> is a mathematical entity that provides a probability distribution for the outcomes of each possible measurement on a system. Knowledge of the quantum state together with the rules for the system's evolution in time exhausts all that can be predicted about the system's behavior. A mixture of quantum states is again a quantum state. Quantum states that cannot be written as a mixture of other states are called <b>pure quantum states</b>, while all other states are called <b>mixed quantum states</b>. A pure quantum state can be represented by a ray in a Hilbert space over the complex numbers, while mixed states are represented by density matrices, which are positive semidefinite operators that act on Hilbert spaces.</p>`,im=`<a href="https://en.wikipedia.org/wiki/Linear_combination"><h3>Linear combination</h3></a><p>In mathematics, a <b>linear combination</b> is an expression constructed from a set of terms by multiplying each term by a constant and adding the results. The concept of linear combinations is central to linear algebra and related fields of mathematics.
Most of this article deals with linear combinations in the context of a vector space over a field, with some generalizations given at the end of the article.</p>`;function lm(e){let t;return{c(){t=i("complex number")},l(a){t=l(a,"complex number")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function hm(e){let t;return{c(){t=i("imaginary")},l(a){t=l(a,"imaginary")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function um(e){let t;return{c(){t=i("real")},l(a){t=l(a,"real")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function fm(e){let t;return{c(){t=i("complex plane")},l(a){t=l(a,"complex plane")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function mm(e){let t;return{c(){t=i("bits")},l(a){t=l(a,"bits")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function pm(e){let t;return{c(){t=i("bit of information")},l(a){t=l(a,"bit of information")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function cm(e){let t;return{c(){t=i("Qubits")},l(a){t=l(a,"Qubits")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function dm(e){let t;return{c(){t=i("measured")},l(a){t=l(a,"measured")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function _m(e){let t;return{c(){t=i("state")},l(a){t=l(a,"state")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function bm(e){let t;return{c(){t=i("linear combination")},l(a){t=l(a,"linear combination")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function vm(e){let t,a,s,o,c,p,m,b,_=d("z \\in \\mathbb{C}")+"",N,v,k=d("z = a i + b")+"",$,x,O=d("a, b \\in \\mathbb{R}")+"",j,P,C=d("i = \\sqrt{-1}")+"",F,S,z=d("a")+"",M,J,Y,Q,te=d("b")+"",I,E,A,ae,R=d("z")+"",L,D,oe=d("a=0")+"",ne,Me,re,W,T,K,ee,Pe=d("x")+"",ke,Le,Ie=d("y")+"",Se,Be,Ve,mt,Ne,ce=d("\\Vert{z}\\Vert = \\sqrt{a^2 + b^2}")+"",wt,xe,Je=d("z")+"",le,Xe,pt=d("\\Vert{z}\\Vert^2 = a^2 + b^2")+"",G,_e,U,ct,nt,je=d("z")+"",dt,at,De=d("\\Vert{z}\\Vert \\cdot e^{i \\phi_z}")+"",kt,_t,ot=d("\\phi_z \\in [0, 2\\pi]")+"",Pt,ie,Ee=d("e^{i \\phi_z}")+"",he,Ht,gt=d("\\phi_z")+"",en,We,Nt=d("2\\pi")+"",Ot,zt,vt=d("z")+"",Vt,Et,dn=d("\\Vert{z}\\Vert")+"",yt,Ke,St,bt,Oe,et,it,Te,Tt,lt,_n,$t,Lt=d("0")+"",bn,ht,Kt=d("1")+"",ln,jt,ze,se,Ce,Ue,$n=d("0")+"",It,xt,ra=d("1")+"",Zt,qe,Hn,Dt,me,Ln,Wt,hn=d("|0\\rangle")+"",Dn,ue,ut=d("|1\\rangle")+"",Ct,pe,vn,He,In,Gt,Ea=d("\\alpha |0\\rangle + \\beta |1\\rangle")+"",Fn,tn,kn=d("\\alpha")+"",un,Mt,zn=d("\\beta")+"",rt,Nn,Wn=d("|0\\rangle")+"",Ta,En,oa=d("\\Vert{\\alpha}\\Vert^2")+"",wn,Ge,Mr=d("|1\\rangle")+"",Gn,de,Ma=d("\\Vert{\\beta}\\Vert^2")+"",Tn,Un,Pa=d("|0\\rangle")+"",Mn,Vn,fn=d("|1\\rangle")+"",Pn,On,Kn=d("\\Vert{\\alpha}\\Vert^2 + \\Vert{\\beta}\\Vert^2 = 1")+"",gn,Ft,Sa=d("\\Vert{\\alpha}\\Vert^2")+"",Sn,Zn,xa=d("\\Vert{\\beta}\\Vert^2")+"",Yn,Fa,Aa,sa;return p=new tt({props:{hovertext:Jf,$$slots:{default:[lm]},$$scope:{ctx:e}}}),J=new tt({props:{hovertext:Xf,$$slots:{default:[hm]},$$scope:{ctx:e}}}),E=new tt({props:{hovertext:em,$$slots:{default:[um]},$$scope:{ctx:e}}}),T=new tt({props:{hovertext:tm,$$slots:{default:[fm]},$$scope:{ctx:e}}}),Te=new tt({props:{hovertext:nm,$$slots:{default:[mm]},$$scope:{ctx:e}}}),lt=new tt({props:{hovertext:am,$$slots:{default:[pm]},$$scope:{ctx:e}}}),se=new tt({props:{hovertext:rm,$$slots:{default:[cm]},$$scope:{ctx:e}}}),qe=new tt({props:{hovertext:sm,$$slots:{default:[dm]},$$scope:{ctx:e}}}),pe=new tt({props:{hovertext:om,$$slots:{default:[_m]},$$scope:{ctx:e}}}),He=new tt({props:{hovertext:im,$$slots:{default:[bm]},$$scope:{ctx:e}}}),{c(){t=h("h2"),a=i("Important properties of complex numbers"),s=q(),o=h("p"),c=i("The general form of a "),we(p.$$.fragment),m=q(),b=h("span"),N=i(" is the following: "),v=h("span"),$=i(", where "),x=h("span"),j=i(" and "),P=h("span"),F=i(". "),S=h("span"),M=i(" is called the "),we(J.$$.fragment),Y=i(" and "),Q=h("span"),I=i(" the "),we(E.$$.fragment),A=i(" component of "),ae=h("span"),L=i(". In fact, all real numbers are complex numbers, the imaginary component of which is zero ("),D=h("span"),ne=i(")."),Me=q(),re=h("p"),W=i("Complex numbers can be represented geometrically as two-dimensional vectors in the so called "),we(T.$$.fragment),K=i(", where the "),ee=h("span"),ke=i("-axis stands for the real, and the "),Le=h("span"),Se=i("-axis for the imaginary component."),Be=q(),Ve=h("p"),mt=i("Let "),Ne=h("span"),wt=i(" denote the Euclidean norm of the vector associated with the complex number "),xe=h("span"),le=i(". Consequently, "),Xe=h("span"),G=i(" is the square of this norm, and it's going to play an important role in what follows."),_e=q(),U=h("p"),ct=i("Another important thing to note is that each 2-dimensional vector is uniquely defined by two properties: its length and angle of rotation. Consequently, a complex number "),nt=h("span"),dt=i(" can be expressed as "),at=h("span"),kt=i(", where "),_t=h("span"),Pt=i(". Here, "),ie=h("span"),he=i(" is a vector of unit length in the complex plane, rotated around the origin by an angle of "),Ht=h("span"),en=i(" ("),We=h("span"),Ot=i(" corresponds to a full rotation). All we have to do to get back "),zt=h("span"),Vt=i(", then, is multiply this rotated unit vector by "),Et=h("span"),yt=i(" to adjust its norm."),Ke=q(),St=h("h2"),bt=i("Qubit states"),Oe=q(),et=h("p"),it=i("The elementary units of information in classical computing are "),we(Te.$$.fragment),Tt=i(". As their name suggests, bits represent one single "),we(lt.$$.fragment),_n=i(", which means they can take on either of two values "),$t=h("span"),bn=i(" and "),ht=h("span"),ln=i(" at a time."),jt=q(),ze=h("p"),we(se.$$.fragment),Ce=i(" are the quantum computing equivalent of bits. They differ from classical bits - among other things - in that they can take on a multitude of values instead of just "),Ue=h("span"),It=i(" and "),xt=h("span"),Zt=i(", until that value is "),we(qe.$$.fragment),Hn=i(", at which point they behave just like classical bits. To explain what this means exactly, we'll need to introduce some further concepts."),Dt=q(),me=h("p"),Ln=i("Let "),Wt=h("span"),Dn=i(" and "),ue=h("span"),Ct=i(" denote the so called basis states of a qubit that are the quantum-equivalent of classical bit states. If you look at a qubit directly to learn it's value, you'll see one of these basis states. But while you're not looking - due to it's quantum nature - the "),we(pe.$$.fragment),vn=i(" of a qubit may be something more intricate. Generally, it can be expressed as the "),we(He.$$.fragment),In=i(" of the two basis states: "),Gt=h("span"),Fn=i(". Here, "),tn=h("span"),un=i(" and "),Mt=h("span"),rt=i(" are complex numbers that indicate the relative weight, with which the two basis states are present in this combination. More precisely, if we now look at the qubit, we'll see the basis state "),Nn=h("span"),Ta=i(" with a probability of "),En=h("span"),wn=i(", and the basis state "),Ge=h("span"),Gn=i(" with a probability of "),de=h("span"),Tn=i(". Because these probabilities must add up to one - as "),Un=h("span"),Mn=i(" and "),Vn=h("span"),Pn=i(" are the only possible outcomes - the equation "),On=h("span"),gn=i(" must hold for all possible qubit states. Let's call "),Ft=h("span"),Sn=i(" and "),Zn=h("span"),Yn=i(" the measurement probabilities of the basis states.")},l(B){t=u(B,"H2",{});var ve=f(t);a=l(ve,"Important properties of complex numbers"),ve.forEach(r),s=H(B),o=u(B,"P",{});var Re=f(o);c=l(Re,"The general form of a "),ge(p.$$.fragment,Re),m=H(Re),b=u(Re,"SPAN",{});var za=f(b);za.forEach(r),N=l(Re," is the following: "),v=u(Re,"SPAN",{});var ia=f(v);ia.forEach(r),$=l(Re,", where "),x=u(Re,"SPAN",{});var Cn=f(x);Cn.forEach(r),j=l(Re," and "),P=u(Re,"SPAN",{});var Va=f(P);Va.forEach(r),F=l(Re,". "),S=u(Re,"SPAN",{});var la=f(S);la.forEach(r),M=l(Re," is called the "),ge(J.$$.fragment,Re),Y=l(Re," and "),Q=u(Re,"SPAN",{});var Bn=f(Q);Bn.forEach(r),I=l(Re," the "),ge(E.$$.fragment,Re),A=l(Re," component of "),ae=u(Re,"SPAN",{});var Ca=f(ae);Ca.forEach(r),L=l(Re,". In fact, all real numbers are complex numbers, the imaginary component of which is zero ("),D=u(Re,"SPAN",{});var ha=f(D);ha.forEach(r),ne=l(Re,")."),Re.forEach(r),Me=H(B),re=u(B,"P",{});var Bt=f(re);W=l(Bt,"Complex numbers can be represented geometrically as two-dimensional vectors in the so called "),ge(T.$$.fragment,Bt),K=l(Bt,", where the "),ee=u(Bt,"SPAN",{});var $s=f(ee);$s.forEach(r),ke=l(Bt,"-axis stands for the real, and the "),Le=u(Bt,"SPAN",{});var Pr=f(Le);Pr.forEach(r),Se=l(Bt,"-axis for the imaginary component."),Bt.forEach(r),Be=H(B),Ve=u(B,"P",{});var nn=f(Ve);mt=l(nn,"Let "),Ne=u(nn,"SPAN",{});var ks=f(Ne);ks.forEach(r),wt=l(nn," denote the Euclidean norm of the vector associated with the complex number "),xe=u(nn,"SPAN",{});var Sr=f(xe);Sr.forEach(r),le=l(nn,". Consequently, "),Xe=u(nn,"SPAN",{});var ua=f(Xe);ua.forEach(r),G=l(nn," is the square of this norm, and it's going to play an important role in what follows."),nn.forEach(r),_e=H(B),U=u(B,"P",{});var At=f(U);ct=l(At,"Another important thing to note is that each 2-dimensional vector is uniquely defined by two properties: its length and angle of rotation. Consequently, a complex number "),nt=u(At,"SPAN",{});var xr=f(nt);xr.forEach(r),dt=l(At," can be expressed as "),at=u(At,"SPAN",{});var fa=f(at);fa.forEach(r),kt=l(At,", where "),_t=u(At,"SPAN",{});var Ns=f(_t);Ns.forEach(r),Pt=l(At,". Here, "),ie=u(At,"SPAN",{});var Ar=f(ie);Ar.forEach(r),he=l(At," is a vector of unit length in the complex plane, rotated around the origin by an angle of "),Ht=u(At,"SPAN",{});var ma=f(Ht);ma.forEach(r),en=l(At," ("),We=u(At,"SPAN",{});var Es=f(We);Es.forEach(r),Ot=l(At," corresponds to a full rotation). All we have to do to get back "),zt=u(At,"SPAN",{});var qr=f(zt);qr.forEach(r),Vt=l(At,", then, is multiply this rotated unit vector by "),Et=u(At,"SPAN",{});var pa=f(Et);pa.forEach(r),yt=l(At," to adjust its norm."),At.forEach(r),Ke=H(B),St=u(B,"H2",{});var Ur=f(St);bt=l(Ur,"Qubit states"),Ur.forEach(r),Oe=H(B),et=u(B,"P",{});var mn=f(et);it=l(mn,"The elementary units of information in classical computing are "),ge(Te.$$.fragment,mn),Tt=l(mn,". As their name suggests, bits represent one single "),ge(lt.$$.fragment,mn),_n=l(mn,", which means they can take on either of two values "),$t=u(mn,"SPAN",{});var Ba=f($t);Ba.forEach(r),bn=l(mn," and "),ht=u(mn,"SPAN",{});var ca=f(ht);ca.forEach(r),ln=l(mn," at a time."),mn.forEach(r),jt=H(B),ze=u(B,"P",{});var yn=f(ze);ge(se.$$.fragment,yn),Ce=l(yn," are the quantum computing equivalent of bits. They differ from classical bits - among other things - in that they can take on a multitude of values instead of just "),Ue=u(yn,"SPAN",{});var Ra=f(Ue);Ra.forEach(r),It=l(yn," and "),xt=u(yn,"SPAN",{});var da=f(xt);da.forEach(r),Zt=l(yn,", until that value is "),ge(qe.$$.fragment,yn),Hn=l(yn,", at which point they behave just like classical bits. To explain what this means exactly, we'll need to introduce some further concepts."),yn.forEach(r),Dt=H(B),me=u(B,"P",{});var Ae=f(me);Ln=l(Ae,"Let "),Wt=u(Ae,"SPAN",{});var Ts=f(Wt);Ts.forEach(r),Dn=l(Ae," and "),ue=u(Ae,"SPAN",{});var Qa=f(ue);Qa.forEach(r),Ct=l(Ae," denote the so called basis states of a qubit that are the quantum-equivalent of classical bit states. If you look at a qubit directly to learn it's value, you'll see one of these basis states. But while you're not looking - due to it's quantum nature - the "),ge(pe.$$.fragment,Ae),vn=l(Ae," of a qubit may be something more intricate. Generally, it can be expressed as the "),ge(He.$$.fragment,Ae),In=l(Ae," of the two basis states: "),Gt=u(Ae,"SPAN",{});var xn=f(Gt);xn.forEach(r),Fn=l(Ae,". Here, "),tn=u(Ae,"SPAN",{});var Hr=f(tn);Hr.forEach(r),un=l(Ae," and "),Mt=u(Ae,"SPAN",{});var _a=f(Mt);_a.forEach(r),rt=l(Ae," are complex numbers that indicate the relative weight, with which the two basis states are present in this combination. More precisely, if we now look at the qubit, we'll see the basis state "),Nn=u(Ae,"SPAN",{});var Ms=f(Nn);Ms.forEach(r),Ta=l(Ae," with a probability of "),En=u(Ae,"SPAN",{});var Lr=f(En);Lr.forEach(r),wn=l(Ae,", and the basis state "),Ge=u(Ae,"SPAN",{});var ba=f(Ge);ba.forEach(r),Gn=l(Ae," with a probability of "),de=u(Ae,"SPAN",{});var Ps=f(de);Ps.forEach(r),Tn=l(Ae,". Because these probabilities must add up to one - as "),Un=u(Ae,"SPAN",{});var Ir=f(Un);Ir.forEach(r),Mn=l(Ae," and "),Vn=u(Ae,"SPAN",{});var ja=f(Vn);ja.forEach(r),Pn=l(Ae," are the only possible outcomes - the equation "),On=u(Ae,"SPAN",{});var Jn=f(On);Jn.forEach(r),gn=l(Ae," must hold for all possible qubit states. Let's call "),Ft=u(Ae,"SPAN",{});var Xn=f(Ft);Xn.forEach(r),Sn=l(Ae," and "),Zn=u(Ae,"SPAN",{});var va=f(Zn);va.forEach(r),Yn=l(Ae," the measurement probabilities of the basis states."),Ae.forEach(r)},m(B,ve){y(B,t,ve),n(t,a),y(B,s,ve),y(B,o,ve),n(o,c),ye(p,o,null),n(o,m),n(o,b),b.innerHTML=_,n(o,N),n(o,v),v.innerHTML=k,n(o,$),n(o,x),x.innerHTML=O,n(o,j),n(o,P),P.innerHTML=C,n(o,F),n(o,S),S.innerHTML=z,n(o,M),ye(J,o,null),n(o,Y),n(o,Q),Q.innerHTML=te,n(o,I),ye(E,o,null),n(o,A),n(o,ae),ae.innerHTML=R,n(o,L),n(o,D),D.innerHTML=oe,n(o,ne),y(B,Me,ve),y(B,re,ve),n(re,W),ye(T,re,null),n(re,K),n(re,ee),ee.innerHTML=Pe,n(re,ke),n(re,Le),Le.innerHTML=Ie,n(re,Se),y(B,Be,ve),y(B,Ve,ve),n(Ve,mt),n(Ve,Ne),Ne.innerHTML=ce,n(Ve,wt),n(Ve,xe),xe.innerHTML=Je,n(Ve,le),n(Ve,Xe),Xe.innerHTML=pt,n(Ve,G),y(B,_e,ve),y(B,U,ve),n(U,ct),n(U,nt),nt.innerHTML=je,n(U,dt),n(U,at),at.innerHTML=De,n(U,kt),n(U,_t),_t.innerHTML=ot,n(U,Pt),n(U,ie),ie.innerHTML=Ee,n(U,he),n(U,Ht),Ht.innerHTML=gt,n(U,en),n(U,We),We.innerHTML=Nt,n(U,Ot),n(U,zt),zt.innerHTML=vt,n(U,Vt),n(U,Et),Et.innerHTML=dn,n(U,yt),y(B,Ke,ve),y(B,St,ve),n(St,bt),y(B,Oe,ve),y(B,et,ve),n(et,it),ye(Te,et,null),n(et,Tt),ye(lt,et,null),n(et,_n),n(et,$t),$t.innerHTML=Lt,n(et,bn),n(et,ht),ht.innerHTML=Kt,n(et,ln),y(B,jt,ve),y(B,ze,ve),ye(se,ze,null),n(ze,Ce),n(ze,Ue),Ue.innerHTML=$n,n(ze,It),n(ze,xt),xt.innerHTML=ra,n(ze,Zt),ye(qe,ze,null),n(ze,Hn),y(B,Dt,ve),y(B,me,ve),n(me,Ln),n(me,Wt),Wt.innerHTML=hn,n(me,Dn),n(me,ue),ue.innerHTML=ut,n(me,Ct),ye(pe,me,null),n(me,vn),ye(He,me,null),n(me,In),n(me,Gt),Gt.innerHTML=Ea,n(me,Fn),n(me,tn),tn.innerHTML=kn,n(me,un),n(me,Mt),Mt.innerHTML=zn,n(me,rt),n(me,Nn),Nn.innerHTML=Wn,n(me,Ta),n(me,En),En.innerHTML=oa,n(me,wn),n(me,Ge),Ge.innerHTML=Mr,n(me,Gn),n(me,de),de.innerHTML=Ma,n(me,Tn),n(me,Un),Un.innerHTML=Pa,n(me,Mn),n(me,Vn),Vn.innerHTML=fn,n(me,Pn),n(me,On),On.innerHTML=Kn,n(me,gn),n(me,Ft),Ft.innerHTML=Sa,n(me,Sn),n(me,Zn),Zn.innerHTML=xa,n(me,Yn),Fa=!0,Aa||(sa=[w(b,"mouseenter",e[0]),w(v,"mouseenter",e[1]),w(x,"mouseenter",e[2]),w(P,"mouseenter",e[3]),w(S,"mouseenter",e[4]),w(Q,"mouseenter",e[5]),w(ae,"mouseenter",e[6]),w(D,"mouseenter",e[7]),w(ee,"mouseenter",e[8]),w(Le,"mouseenter",e[9]),w(Ne,"mouseenter",e[10]),w(xe,"mouseenter",e[11]),w(Xe,"mouseenter",e[12]),w(nt,"mouseenter",e[13]),w(at,"mouseenter",e[14]),w(_t,"mouseenter",e[15]),w(ie,"mouseenter",e[16]),w(Ht,"mouseenter",e[17]),w(We,"mouseenter",e[18]),w(zt,"mouseenter",e[19]),w(Et,"mouseenter",e[20]),w($t,"mouseenter",e[21]),w(ht,"mouseenter",e[22]),w(Ue,"mouseenter",e[23]),w(xt,"mouseenter",e[24]),w(Wt,"mouseenter",e[25]),w(ue,"mouseenter",e[26]),w(Gt,"mouseenter",e[27]),w(tn,"mouseenter",e[28]),w(Mt,"mouseenter",e[29]),w(Nn,"mouseenter",e[30]),w(En,"mouseenter",e[31]),w(Ge,"mouseenter",e[32]),w(de,"mouseenter",e[33]),w(Un,"mouseenter",e[34]),w(Vn,"mouseenter",e[35]),w(On,"mouseenter",e[36]),w(Ft,"mouseenter",e[37]),w(Zn,"mouseenter",e[38])],Aa=!0)},p(B,ve){const Re={};ve[1]&256&&(Re.$$scope={dirty:ve,ctx:B}),p.$set(Re);const za={};ve[1]&256&&(za.$$scope={dirty:ve,ctx:B}),J.$set(za);const ia={};ve[1]&256&&(ia.$$scope={dirty:ve,ctx:B}),E.$set(ia);const Cn={};ve[1]&256&&(Cn.$$scope={dirty:ve,ctx:B}),T.$set(Cn);const Va={};ve[1]&256&&(Va.$$scope={dirty:ve,ctx:B}),Te.$set(Va);const la={};ve[1]&256&&(la.$$scope={dirty:ve,ctx:B}),lt.$set(la);const Bn={};ve[1]&256&&(Bn.$$scope={dirty:ve,ctx:B}),se.$set(Bn);const Ca={};ve[1]&256&&(Ca.$$scope={dirty:ve,ctx:B}),qe.$set(Ca);const ha={};ve[1]&256&&(ha.$$scope={dirty:ve,ctx:B}),pe.$set(ha);const Bt={};ve[1]&256&&(Bt.$$scope={dirty:ve,ctx:B}),He.$set(Bt)},i(B){Fa||(fe(p.$$.fragment,B),fe(J.$$.fragment,B),fe(E.$$.fragment,B),fe(T.$$.fragment,B),fe(Te.$$.fragment,B),fe(lt.$$.fragment,B),fe(se.$$.fragment,B),fe(qe.$$.fragment,B),fe(pe.$$.fragment,B),fe(He.$$.fragment,B),Fa=!0)},o(B){be(p.$$.fragment,B),be(J.$$.fragment,B),be(E.$$.fragment,B),be(T.$$.fragment,B),be(Te.$$.fragment,B),be(lt.$$.fragment,B),be(se.$$.fragment,B),be(qe.$$.fragment,B),be(pe.$$.fragment,B),be(He.$$.fragment,B),Fa=!1},d(B){B&&r(t),B&&r(s),B&&r(o),$e(p),$e(J),$e(E),B&&r(Me),B&&r(re),$e(T),B&&r(Be),B&&r(Ve),B&&r(_e),B&&r(U),B&&r(Ke),B&&r(St),B&&r(Oe),B&&r(et),$e(Te),$e(lt),B&&r(jt),B&&r(ze),$e(se),$e(qe),B&&r(Dt),B&&r(me),$e(pe),$e(He),Aa=!1,jn(sa)}}}function Fe(e){console.log(e)}function wm(e){return[()=>Fe(["C","z"]),()=>Fe(["a","b","z"]),()=>Fe(["R","a","b"]),()=>Fe([]),()=>Fe(["a"]),()=>Fe(["b"]),()=>Fe(["z"]),()=>Fe(["a"]),()=>Fe(["x"]),()=>Fe(["y"]),()=>Fe(["a","b","z"]),()=>Fe(["z"]),()=>Fe(["a","b","z"]),()=>Fe(["z"]),()=>Fe(["\\phi","z"]),()=>Fe(["\\phi","z"]),()=>Fe(["\\phi","z"]),()=>Fe(["\\phi","z"]),()=>Fe([]),()=>Fe(["z"]),()=>Fe(["z"]),()=>Fe([]),()=>Fe([]),()=>Fe([]),()=>Fe([]),()=>Fe([]),()=>Fe([]),()=>Fe(["\\beta","\\alpha"]),()=>Fe(["\\alpha"]),()=>Fe(["\\beta"]),()=>Fe([]),()=>Fe(["\\alpha"]),()=>Fe([]),()=>Fe(["\\beta"]),()=>Fe([]),()=>Fe([]),()=>Fe(["\\beta","\\alpha"]),()=>Fe(["\\alpha"]),()=>Fe(["\\beta"])]}class gm extends rn{constructor(t){super(),sn(this,t,wm,vm,on,{},null,[-1,-1])}}const ym='<a href="https://en.wikipedia.org/wiki/Separable_state"><h3>Separable state</h3></a><p>In quantum mechanics, <b>separable states</b> are quantum states belonging to a composite space that can be factored into individual states belonging to separate subspaces. A state is said to be entangled if it is not separable. In general, determining if a state is separable is not straightforward and the problem is classed as NP-hard.</p>',$m='<a href="https://en.wikipedia.org/wiki/Quantum_entanglement"><h3>Quantum entanglement</h3></a><p><b>Quantum entanglement</b> is the physical phenomenon that occurs when a group of particles are generated, interact, or share spatial proximity in a way such that the quantum state of each particle of the group cannot be described independently of the state of the others, including when the particles are separated by a large distance. The topic of quantum entanglement is at the heart of the disparity between classical and quantum physics: entanglement is a primary feature of quantum mechanics lacking in classical mechanics.</p>';function km(e){let t;return{c(){t=i("separable")},l(a){t=l(a,"separable")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function Nm(e){let t;return{c(){t=i("entaglement")},l(a){t=l(a,"entaglement")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function Em(e){let t,a,s,o,c,p,m,b,_,N,v=d("|0\\rangle")+"",k,$,x=d("|1\\rangle")+"",O,j,P,C,F,S=d("|\\psi\\rangle")+"",z,M,J=d("n")+"",Y,Q,te=d("|\\psi\\rangle = \\left( \\alpha_1 |0\\rangle + \\beta_1 |1\\rangle \\right) \\otimes ... \\otimes \\left( \\alpha_n |0\\rangle + \\beta_n |1\\rangle \\right)")+"",I,E,A=d("\\alpha_k, \\beta_k")+"",ae,R,L=d("k")+"",D,oe,ne=d("\\otimes")+"",Me,re,W,T;return p=new tt({props:{hovertext:ym,$$slots:{default:[km]},$$scope:{ctx:e}}}),b=new tt({props:{hovertext:$m,$$slots:{default:[Nm]},$$scope:{ctx:e}}}),{c(){t=h("h2"),a=i("Multiple qubits"),s=q(),o=h("p"),c=i("Most quantum algorithms require not only one, but several qubits. The states of these qubits may be "),we(p.$$.fragment),m=i(", meaning they each contain one independent unit of information. However, it is possible for multiple qubits to share some information with each other, in which case they no longer have states of their own, but only one joint state. This is called "),we(b.$$.fragment),_=i(", and it is another fundamental difference between classical and quantum computing. As an example, two qubits can be entangled in a way that, if we look at one of them and find it's in the basis state "),N=h("span"),k=i(", we learn immediately that the other one must be in the basis state "),$=h("span"),O=i(", and vice versa."),j=q(),P=h("p"),C=i("Let "),F=h("span"),z=i(" denote the state of a sequence of "),M=h("span"),Y=i(" qubits. If the qubits are separable, the state can be written as "),Q=h("span"),I=i(", where "),E=h("span"),ae=i(" are the coefficients associated with the state of the "),R=h("span"),D=i("-th qubit as described above, and the operator "),oe=h("span"),Me=i(" indicates that none of the qubits are entagled with each other.")},l(K){t=u(K,"H2",{});var ee=f(t);a=l(ee,"Multiple qubits"),ee.forEach(r),s=H(K),o=u(K,"P",{});var Pe=f(o);c=l(Pe,"Most quantum algorithms require not only one, but several qubits. The states of these qubits may be "),ge(p.$$.fragment,Pe),m=l(Pe,", meaning they each contain one independent unit of information. However, it is possible for multiple qubits to share some information with each other, in which case they no longer have states of their own, but only one joint state. This is called "),ge(b.$$.fragment,Pe),_=l(Pe,", and it is another fundamental difference between classical and quantum computing. As an example, two qubits can be entangled in a way that, if we look at one of them and find it's in the basis state "),N=u(Pe,"SPAN",{});var ke=f(N);ke.forEach(r),k=l(Pe,", we learn immediately that the other one must be in the basis state "),$=u(Pe,"SPAN",{});var Le=f($);Le.forEach(r),O=l(Pe,", and vice versa."),Pe.forEach(r),j=H(K),P=u(K,"P",{});var Ie=f(P);C=l(Ie,"Let "),F=u(Ie,"SPAN",{});var Se=f(F);Se.forEach(r),z=l(Ie," denote the state of a sequence of "),M=u(Ie,"SPAN",{});var Be=f(M);Be.forEach(r),Y=l(Ie," qubits. If the qubits are separable, the state can be written as "),Q=u(Ie,"SPAN",{});var Ve=f(Q);Ve.forEach(r),I=l(Ie,", where "),E=u(Ie,"SPAN",{});var mt=f(E);mt.forEach(r),ae=l(Ie," are the coefficients associated with the state of the "),R=u(Ie,"SPAN",{});var Ne=f(R);Ne.forEach(r),D=l(Ie,"-th qubit as described above, and the operator "),oe=u(Ie,"SPAN",{});var ce=f(oe);ce.forEach(r),Me=l(Ie," indicates that none of the qubits are entagled with each other."),Ie.forEach(r)},m(K,ee){y(K,t,ee),n(t,a),y(K,s,ee),y(K,o,ee),n(o,c),ye(p,o,null),n(o,m),ye(b,o,null),n(o,_),n(o,N),N.innerHTML=v,n(o,k),n(o,$),$.innerHTML=x,n(o,O),y(K,j,ee),y(K,P,ee),n(P,C),n(P,F),F.innerHTML=S,n(P,z),n(P,M),M.innerHTML=J,n(P,Y),n(P,Q),Q.innerHTML=te,n(P,I),n(P,E),E.innerHTML=A,n(P,ae),n(P,R),R.innerHTML=L,n(P,D),n(P,oe),oe.innerHTML=ne,n(P,Me),re=!0,W||(T=[w(N,"mouseenter",e[0]),w($,"mouseenter",e[1]),w(F,"mouseenter",e[2]),w(M,"mouseenter",e[3]),w(Q,"mouseenter",e[4]),w(E,"mouseenter",e[5]),w(R,"mouseenter",e[6]),w(oe,"mouseenter",e[7])],W=!0)},p(K,[ee]){const Pe={};ee&256&&(Pe.$$scope={dirty:ee,ctx:K}),p.$set(Pe);const ke={};ee&256&&(ke.$$scope={dirty:ee,ctx:K}),b.$set(ke)},i(K){re||(fe(p.$$.fragment,K),fe(b.$$.fragment,K),re=!0)},o(K){be(p.$$.fragment,K),be(b.$$.fragment,K),re=!1},d(K){K&&r(t),K&&r(s),K&&r(o),$e(p),$e(b),K&&r(j),K&&r(P),W=!1,jn(T)}}}function $a(e){console.log(e)}function Tm(e){return[()=>$a([]),()=>$a([]),()=>$a(["\\psi"]),()=>$a(["n"]),()=>$a(["n","\\beta","\\alpha","\\psi"]),()=>$a(["\\beta","k","\\alpha"]),()=>$a(["k"]),()=>$a([])]}class Mm extends rn{constructor(t){super(),sn(this,t,Tm,Em,on,{})}}function Pm(e){let t,a,s,o,c,p,m,b,_,N,v,k,$,x,O=d("\\phi_\\alpha")+"",j,P,C,F=d("\\phi_\\beta")+"",S,z,M,J=d("r_\\alpha")+"",Y,Q,te,I,E,A,ae,R,L,D,oe,ne,Me,re,W;return o=new gm({}),R=new Ih({props:{displayBloch:e[2],phiAlpha:e[4],phiBeta:e[3],rAlpha:e[5],blochClass:"col-lg-4 col-sm-12",vectorClass:"col-lg-4 col-sm-12"}}),D=new Yf({}),ne=new Mm({}),{c(){t=h("h2"),a=i("Quantum Basics"),s=q(),we(o.$$.fragment),c=q(),p=h("div"),m=h("div"),b=h("div"),_=h("p"),N=i(`Play around with 2 representations of a single qubit. You adjust the view of the 3D Bloch
				sphere by clicking on the image and dragging.`),v=q(),k=h("div"),$=h("div"),x=new Ze(!1),j=h("input"),P=q(),C=new Ze(!1),S=h("input"),z=q(),M=new Ze(!1),Y=h("input"),Q=q(),te=h("b"),I=i("Display Bloch sphere"),E=q(),A=h("input"),ae=q(),we(R.$$.fragment),L=q(),we(D.$$.fragment),oe=q(),we(ne.$$.fragment),this.h()},l(T){t=u(T,"H2",{});var K=f(t);a=l(K,"Quantum Basics"),K.forEach(r),s=H(T),ge(o.$$.fragment,T),c=H(T),p=u(T,"DIV",{class:!0});var ee=f(p);m=u(ee,"DIV",{class:!0});var Pe=f(m);b=u(Pe,"DIV",{class:!0});var ke=f(b);_=u(ke,"P",{});var Le=f(_);N=l(Le,`Play around with 2 representations of a single qubit. You adjust the view of the 3D Bloch
				sphere by clicking on the image and dragging.`),Le.forEach(r),ke.forEach(r),Pe.forEach(r),v=H(ee),k=u(ee,"DIV",{class:!0});var Ie=f(k);$=u(Ie,"DIV",{class:!0});var Se=f($);x=Ye(Se,!1),j=u(Se,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),P=H(Se),C=Ye(Se,!1),S=u(Se,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),z=H(Se),M=Ye(Se,!1),Y=u(Se,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),Q=H(Se),te=u(Se,"B",{});var Be=f(te);I=l(Be,"Display Bloch sphere"),Be.forEach(r),E=H(Se),A=u(Se,"INPUT",{type:!0,style:!0,class:!0}),Se.forEach(r),ae=H(Ie),ge(R.$$.fragment,Ie),Ie.forEach(r),ee.forEach(r),L=H(T),ge(D.$$.fragment,T),oe=H(T),ge(ne.$$.fragment,T),this.h()},h(){V(b,"class","col-12"),V(m,"class","row mb-4"),x.a=j,V(j,"type","range"),V(j,"min",0),V(j,"max",360),V(j,"step",1),V(j,"class","svelte-unwbto"),C.a=S,V(S,"type","range"),V(S,"min",0),V(S,"max",360),V(S,"step",1),V(S,"class","svelte-unwbto"),M.a=Y,V(Y,"type","range"),V(Y,"min",0),V(Y,"max",1),V(Y,"step",.01),V(Y,"class","svelte-unwbto"),V(A,"type","checkbox"),Ah(A,"width","auto"),V(A,"class","svelte-unwbto"),V($,"class","col-lg-4 col-sm-12"),V(k,"class","row"),V(p,"class","interaction container")},m(T,K){y(T,t,K),n(t,a),y(T,s,K),ye(o,T,K),y(T,c,K),y(T,p,K),n(p,m),n(m,b),n(b,_),n(_,N),n(p,v),n(p,k),n(k,$),x.m(O,$),n($,j),Xt(j,e[1]),n($,P),C.m(F,$),n($,S),Xt(S,e[0]),n($,z),M.m(J,$),n($,Y),Xt(Y,e[5]),n($,Q),n($,te),n(te,I),n($,E),n($,A),A.checked=e[2],n(k,ae),ye(R,k,null),y(T,L,K),ye(D,T,K),y(T,oe,K),ye(ne,T,K),Me=!0,re||(W=[w(j,"change",e[6]),w(j,"input",e[6]),w(S,"change",e[7]),w(S,"input",e[7]),w(Y,"change",e[8]),w(Y,"input",e[8]),w(A,"change",e[9])],re=!0)},p(T,[K]){K&2&&Xt(j,T[1]),K&1&&Xt(S,T[0]),K&32&&Xt(Y,T[5]),K&4&&(A.checked=T[2]);const ee={};K&4&&(ee.displayBloch=T[2]),K&16&&(ee.phiAlpha=T[4]),K&8&&(ee.phiBeta=T[3]),K&32&&(ee.rAlpha=T[5]),R.$set(ee)},i(T){Me||(fe(o.$$.fragment,T),fe(R.$$.fragment,T),fe(D.$$.fragment,T),fe(ne.$$.fragment,T),Me=!0)},o(T){be(o.$$.fragment,T),be(R.$$.fragment,T),be(D.$$.fragment,T),be(ne.$$.fragment,T),Me=!1},d(T){T&&r(t),T&&r(s),$e(o,T),T&&r(c),T&&r(p),$e(R),T&&r(L),$e(D,T),T&&r(oe),$e(ne,T),re=!1,jn(W)}}}function Sm(e,t,a){let s,o,c,p,m,b=!0;function _(){s=na(this.value),a(1,s)}function N(){o=na(this.value),a(0,o)}function v(){c=na(this.value),a(5,c)}function k(){b=this.checked,a(2,b)}return e.$$.update=()=>{e.$$.dirty&2&&a(4,p=s/180*fo),e.$$.dirty&1&&a(3,m=o/180*fo)},a(1,s=15),a(0,o=310),a(5,c=.9),[o,s,b,m,p,c,_,N,v,k]}class xm extends rn{constructor(t){super(),sn(this,t,Sm,Pm,on,{})}}const Am='<a href="https://en.wikipedia.org/wiki/Periodic_function"><h3 class="text-lg font-semibold">Periodic function</h3></a><p>A <b>periodic function</b> is a function that repeats its values at regular intervals. For example, the trigonometric functions, which repeat at intervals of <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/73efd1f6493490b058097060a572606d2c550a06" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:2.494ex;height:2.176ex" /></span> radians, are periodic functions. Periodic functions are used throughout science to describe oscillations, waves, and other phenomena that exhibit periodicity. Any function that is not periodic is called <b>aperiodic</b>.</p>';function qm(e){let t;return{c(){t=i("periodic")},l(a){t=l(a,"periodic")},m(a,s){y(a,t,s)},d(a){a&&r(t)}}}function Hm(e){let t,a,s,o,c,p,m=d("N")+"",b,_,N=d("1 < \\hat{r} < N")+"",v,k,$=d("f(\\hat{r}) = a^{\\hat{r}} \\mod N = 1")+"",x,O,j=d("f")+"",P,C,F,S,z=d("\\hat{r}")+"",M,J,Y=d("f")+"",Q,te,I=d("0 < p")+"",E,A,ae=d("f(r) = f(r + p)")+"",R,L,D=d("r")+"",oe,ne,Me=d("f(0) = a^{0} \\mod N = 1 \\mod N = 1")+"",re,W,T=d("f(0) = f(0 + p) = f(p) = 1")+"",K,ee,Pe=d("p")+"",ke,Le,Ie=d("f")+"",Se,Be,Ve=d("1")+"",mt,Ne,ce=d("\\hat{r}")+"",wt,xe,Je,le,Xe,pt=d("\\hat{r}")+"",G,_e,U=d("f")+"",ct,nt,je,dt,at,De,kt,_t,ot,Pt;return C=new tt({props:{hovertext:Am,$$slots:{default:[qm]},$$scope:{ctx:e}}}),{c(){t=h("h2"),a=i("The period-finding problem"),s=q(),o=h("p"),c=i("Recall the steps for computing the prime factors of a large integer "),p=h("span"),b=i(", the hard part of which was finding the smallest "),_=h("span"),v=i(" such that "),k=h("span"),x=i(". It turns out that "),O=h("span"),P=i(" is a "),we(C.$$.fragment),F=i(" function, and the integer "),S=h("span"),M=i(" we're looking for is its period. This is because the period of "),J=h("span"),Q=i(" is defined as the smallest integer "),te=h("span"),E=i(", for which "),A=h("span"),R=i(" for all "),L=h("span"),oe=i(". We know for sure that "),ne=h("span"),re=i(", from which follows that "),W=h("span"),K=i(". Thus, the period "),ee=h("span"),ke=i(" is the smallest positive integer, at which the value of "),Le=h("span"),Se=i(" is "),Be=h("span"),mt=i(", and this is exactly how we originally defined "),Ne=h("span"),wt=i("."),xe=q(),Je=h("p"),le=i("Thus, finding "),Xe=h("span"),G=i(" can be reformulated as finding the period of the function "),_e=h("span"),ct=i(", which is where the quantum Fourier transform will prove extremely useful."),nt=q(),je=h("h2"),dt=i("Finding the period with the help of interference"),at=q(),De=h("p"),kt=i("...")},l(ie){t=u(ie,"H2",{});var Ee=f(t);a=l(Ee,"The period-finding problem"),Ee.forEach(r),s=H(ie),o=u(ie,"P",{});var he=f(o);c=l(he,"Recall the steps for computing the prime factors of a large integer "),p=u(he,"SPAN",{});var Ht=f(p);Ht.forEach(r),b=l(he,", the hard part of which was finding the smallest "),_=u(he,"SPAN",{});var gt=f(_);gt.forEach(r),v=l(he," such that "),k=u(he,"SPAN",{});var en=f(k);en.forEach(r),x=l(he,". It turns out that "),O=u(he,"SPAN",{});var We=f(O);We.forEach(r),P=l(he," is a "),ge(C.$$.fragment,he),F=l(he," function, and the integer "),S=u(he,"SPAN",{});var Nt=f(S);Nt.forEach(r),M=l(he," we're looking for is its period. This is because the period of "),J=u(he,"SPAN",{});var Ot=f(J);Ot.forEach(r),Q=l(he," is defined as the smallest integer "),te=u(he,"SPAN",{});var zt=f(te);zt.forEach(r),E=l(he,", for which "),A=u(he,"SPAN",{});var vt=f(A);vt.forEach(r),R=l(he," for all "),L=u(he,"SPAN",{});var Vt=f(L);Vt.forEach(r),oe=l(he,". We know for sure that "),ne=u(he,"SPAN",{});var Et=f(ne);Et.forEach(r),re=l(he,", from which follows that "),W=u(he,"SPAN",{});var dn=f(W);dn.forEach(r),K=l(he,". Thus, the period "),ee=u(he,"SPAN",{});var yt=f(ee);yt.forEach(r),ke=l(he," is the smallest positive integer, at which the value of "),Le=u(he,"SPAN",{});var Ke=f(Le);Ke.forEach(r),Se=l(he," is "),Be=u(he,"SPAN",{});var St=f(Be);St.forEach(r),mt=l(he,", and this is exactly how we originally defined "),Ne=u(he,"SPAN",{});var bt=f(Ne);bt.forEach(r),wt=l(he,"."),he.forEach(r),xe=H(ie),Je=u(ie,"P",{});var Oe=f(Je);le=l(Oe,"Thus, finding "),Xe=u(Oe,"SPAN",{});var et=f(Xe);et.forEach(r),G=l(Oe," can be reformulated as finding the period of the function "),_e=u(Oe,"SPAN",{});var it=f(_e);it.forEach(r),ct=l(Oe,", which is where the quantum Fourier transform will prove extremely useful."),Oe.forEach(r),nt=H(ie),je=u(ie,"H2",{});var Te=f(je);dt=l(Te,"Finding the period with the help of interference"),Te.forEach(r),at=H(ie),De=u(ie,"P",{});var Tt=f(De);kt=l(Tt,"..."),Tt.forEach(r)},m(ie,Ee){y(ie,t,Ee),n(t,a),y(ie,s,Ee),y(ie,o,Ee),n(o,c),n(o,p),p.innerHTML=m,n(o,b),n(o,_),_.innerHTML=N,n(o,v),n(o,k),k.innerHTML=$,n(o,x),n(o,O),O.innerHTML=j,n(o,P),ye(C,o,null),n(o,F),n(o,S),S.innerHTML=z,n(o,M),n(o,J),J.innerHTML=Y,n(o,Q),n(o,te),te.innerHTML=I,n(o,E),n(o,A),A.innerHTML=ae,n(o,R),n(o,L),L.innerHTML=D,n(o,oe),n(o,ne),ne.innerHTML=Me,n(o,re),n(o,W),W.innerHTML=T,n(o,K),n(o,ee),ee.innerHTML=Pe,n(o,ke),n(o,Le),Le.innerHTML=Ie,n(o,Se),n(o,Be),Be.innerHTML=Ve,n(o,mt),n(o,Ne),Ne.innerHTML=ce,n(o,wt),y(ie,xe,Ee),y(ie,Je,Ee),n(Je,le),n(Je,Xe),Xe.innerHTML=pt,n(Je,G),n(Je,_e),_e.innerHTML=U,n(Je,ct),y(ie,nt,Ee),y(ie,je,Ee),n(je,dt),y(ie,at,Ee),y(ie,De,Ee),n(De,kt),_t=!0,ot||(Pt=[w(p,"mouseenter",e[0]),w(_,"mouseenter",e[1]),w(k,"mouseenter",e[2]),w(O,"mouseenter",e[3]),w(S,"mouseenter",e[4]),w(J,"mouseenter",e[5]),w(te,"mouseenter",e[6]),w(A,"mouseenter",e[7]),w(L,"mouseenter",e[8]),w(ne,"mouseenter",e[9]),w(W,"mouseenter",e[10]),w(ee,"mouseenter",e[11]),w(Le,"mouseenter",e[12]),w(Be,"mouseenter",e[13]),w(Ne,"mouseenter",e[14]),w(Xe,"mouseenter",e[15]),w(_e,"mouseenter",e[16])],ot=!0)},p(ie,[Ee]){const he={};Ee&131072&&(he.$$scope={dirty:Ee,ctx:ie}),C.$set(he)},i(ie){_t||(fe(C.$$.fragment,ie),_t=!0)},o(ie){be(C.$$.fragment,ie),_t=!1},d(ie){ie&&r(t),ie&&r(s),ie&&r(o),$e(C),ie&&r(xe),ie&&r(Je),ie&&r(nt),ie&&r(je),ie&&r(at),ie&&r(De),ot=!1,jn(Pt)}}}function Ut(e){console.log(e)}function Lm(e){return[()=>Ut(["N"]),()=>Ut(["r","N"]),()=>Ut(["r","f","a","N"]),()=>Ut(["f"]),()=>Ut(["r"]),()=>Ut(["f"]),()=>Ut(["p"]),()=>Ut(["r","f","p"]),()=>Ut(["r"]),()=>Ut(["f","a","N"]),()=>Ut(["f","p"]),()=>Ut(["p"]),()=>Ut(["f"]),()=>Ut([]),()=>Ut(["r"]),()=>Ut(["r"]),()=>Ut(["f"])]}class Im extends rn{constructor(t){super(),sn(this,t,Lm,Hm,on,{})}}function Fm(e){let t,a,s,o,c;return o=new Im({}),{c(){t=h("h2"),a=i("Shor's Algorithm"),s=q(),we(o.$$.fragment)},l(p){t=u(p,"H2",{});var m=f(t);a=l(m,"Shor's Algorithm"),m.forEach(r),s=H(p),ge(o.$$.fragment,p)},m(p,m){y(p,t,m),n(t,a),y(p,s,m),ye(o,p,m),c=!0},p:Ia,i(p){c||(fe(o.$$.fragment,p),c=!0)},o(p){be(o.$$.fragment,p),c=!1},d(p){p&&r(t),p&&r(s),$e(o,p)}}}class zm extends rn{constructor(t){super(),sn(this,t,null,Fm,on,{})}}function Vm(e){let t,a,s,o,c,p,m,b,_,N,v,k,$,x,O,j,P,C,F,S;return $=new yu({}),O=new xm({}),P=new Bf({}),F=new zm({}),{c(){t=h("div"),a=q(),s=h("main"),o=h("h1"),c=i("Interactive Quantum Computing"),p=q(),m=h("p"),b=i("This page intends to introduce concepts, connect them and derive a practical use case"),_=q(),N=h("h2"),v=i("Clickable Table of Contents"),k=q(),we($.$$.fragment),x=q(),we(O.$$.fragment),j=q(),we(P.$$.fragment),C=q(),we(F.$$.fragment),this.h()},l(z){t=u(z,"DIV",{class:!0}),f(t).forEach(r),a=H(z),s=u(z,"MAIN",{});var M=f(s);o=u(M,"H1",{});var J=f(o);c=l(J,"Interactive Quantum Computing"),J.forEach(r),p=H(M),m=u(M,"P",{});var Y=f(m);b=l(Y,"This page intends to introduce concepts, connect them and derive a practical use case"),Y.forEach(r),_=H(M),N=u(M,"H2",{});var Q=f(N);v=l(Q,"Clickable Table of Contents"),Q.forEach(r),k=H(M),ge($.$$.fragment,M),x=H(M),ge(O.$$.fragment,M),j=H(M),ge(P.$$.fragment,M),C=H(M),ge(F.$$.fragment,M),M.forEach(r),this.h()},h(){V(t,"class","sidebar")},m(z,M){y(z,t,M),y(z,a,M),y(z,s,M),n(s,o),n(o,c),n(s,p),n(s,m),n(m,b),n(s,_),n(s,N),n(N,v),n(s,k),ye($,s,null),n(s,x),ye(O,s,null),n(s,j),ye(P,s,null),n(s,C),ye(F,s,null),S=!0},p:Ia,i(z){S||(fe($.$$.fragment,z),fe(O.$$.fragment,z),fe(P.$$.fragment,z),fe(F.$$.fragment,z),S=!0)},o(z){be($.$$.fragment,z),be(O.$$.fragment,z),be(P.$$.fragment,z),be(F.$$.fragment,z),S=!1},d(z){z&&r(t),z&&r(a),z&&r(s),$e($),$e(O),$e(P),$e(F)}}}const Rm=!0;class Qm extends rn{constructor(t){super(),sn(this,t,null,Vm,on,{})}}export{Qm as default,Rm as prerender};
