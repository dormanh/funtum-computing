import{S as na,i as aa,s as ra,l,u as s,a as M,L as Et,e as ho,m as h,p as u,v as o,h as a,c as S,M as Tt,q as R,b as g,H as t,N as Un,O as c,P as qh,Q as Dr,R as Ah,n as Ws,T as er,F as Hh,I as Lh,J as xh,K as Ih,f as _e,t as Ne,U as ih,V as Fh,x as Te,y as Pe,z as Me,C as Se,W as gs,X as ys,g as Qh,d as zh,Y as xl,w as Pl,Z as Il,r as Vh}from"../chunks/index-760eefc7.js";import{m as f,g as Ao,a as ni,p as Fl,e as Bh,b as Ch,c as dl,i as Rh,Q as jh}from"../chunks/Qbit-e7529a99.js";function Dh(e){let n,r,i,m=f(`K = ${e[6]}`)+"",d,_,p=f("r")+"",v,b,k=f("a^r \\mod N = 1")+"",w,N,$,I,X,O=f("r")+"",H,j,V=f(`${e[1]}^{${e[2]}} \\mod ${e[0]} = 1`)+"",A,z,q=f("m")+"",te,x,J=f(`${e[1]}^{${e[2]}} = m \\cdot ${e[0]} + 1`)+"",ne,Q;function P(Y,F){return Y[2]%2==0?Oh:Uh}let L=P(e),re=L(e);return{c(){n=l("p"),r=s("As "),i=new Et(!1),d=s(", the value of "),_=new Et(!1),v=s(" in "),b=new Et(!1),w=s(` will
		be informative.`),N=M(),$=l("p"),I=s(`As these are all relatively small numbers, we can try all relevant possible values for
		`),X=new Et(!1),H=s(" rather quickly and find that "),j=new Et(!1),A=s(` which means
		that there is an `),z=new Et(!1),te=s(" for which "),x=new Et(!1),ne=M(),Q=l("p"),re.c(),this.h()},l(Y){n=h(Y,"P",{});var F=u(n);r=o(F,"As "),i=Tt(F,!1),d=o(F,", the value of "),_=Tt(F,!1),v=o(F," in "),b=Tt(F,!1),w=o(F,` will
		be informative.`),F.forEach(a),N=S(Y),$=h(Y,"P",{});var U=u($);I=o(U,`As these are all relatively small numbers, we can try all relevant possible values for
		`),X=Tt(U,!1),H=o(U," rather quickly and find that "),j=Tt(U,!1),A=o(U,` which means
		that there is an `),z=Tt(U,!1),te=o(U," for which "),x=Tt(U,!1),U.forEach(a),ne=S(Y),Q=h(Y,"P",{});var $e=u(Q);re.l($e),$e.forEach(a),this.h()},h(){i.a=d,_.a=v,b.a=w,X.a=H,j.a=A,z.a=te,x.a=null},m(Y,F){g(Y,n,F),t(n,r),i.m(m,n),t(n,d),_.m(p,n),t(n,v),b.m(k,n),t(n,w),g(Y,N,F),g(Y,$,F),t($,I),X.m(O,$),t($,H),j.m(V,$),t($,A),z.m(q,$),t($,te),x.m(J,$),g(Y,ne,F),g(Y,Q,F),re.m(Q,null)},p(Y,F){F&64&&m!==(m=f(`K = ${Y[6]}`)+"")&&i.p(m),F&7&&V!==(V=f(`${Y[1]}^{${Y[2]}} \\mod ${Y[0]} = 1`)+"")&&j.p(V),F&7&&J!==(J=f(`${Y[1]}^{${Y[2]}} = m \\cdot ${Y[0]} + 1`)+"")&&x.p(J),L===(L=P(Y))&&re?re.p(Y,F):(re.d(1),re=L(Y),re&&(re.c(),re.m(Q,null)))},d(Y){Y&&a(n),Y&&a(N),Y&&a($),Y&&a(ne),Y&&a(Q),re.d()}}}function Wh(e){let n,r,i,m=f("K \\neq 1")+"",d,_,p=f("a")+"",v,b,k=f("N")+"",w,N,$=f(`K=${e[6]}`)+"",I,X,O=f("a")+"",H;return{c(){n=l("p"),r=s("As in this case "),i=new Et(!1),d=s(", a new "),_=new Et(!1),v=s(` is needed. Or to put a more positive
		spin on it, we instantly can found a prime factor for `),b=new Et(!1),w=s(`, which in fact
		`),N=new Et(!1),I=s(` is. However, in order to see the whole algorithm in action, we should choose
		a new `),X=new Et(!1),H=s("."),this.h()},l(j){n=h(j,"P",{});var V=u(n);r=o(V,"As in this case "),i=Tt(V,!1),d=o(V,", a new "),_=Tt(V,!1),v=o(V,` is needed. Or to put a more positive
		spin on it, we instantly can found a prime factor for `),b=Tt(V,!1),w=o(V,`, which in fact
		`),N=Tt(V,!1),I=o(V,` is. However, in order to see the whole algorithm in action, we should choose
		a new `),X=Tt(V,!1),H=o(V,"."),V.forEach(a),this.h()},h(){i.a=d,_.a=v,b.a=w,N.a=I,X.a=H},m(j,V){g(j,n,V),t(n,r),i.m(m,n),t(n,d),_.m(p,n),t(n,v),b.m(k,n),t(n,w),N.m($,n),t(n,I),X.m(O,n),t(n,H)},p(j,V){V&64&&$!==($=f(`K=${j[6]}`)+"")&&N.p($)},d(j){j&&a(n)}}}function Uh(e){let n,r=f("r")+"",i,m,d=f("a")+"",_;return{c(){n=new Et(!1),i=s(" is odd, we need a new "),m=new Et(!1),_=s("."),this.h()},l(p){n=Tt(p,!1),i=o(p," is odd, we need a new "),m=Tt(p,!1),_=o(p,"."),this.h()},h(){n.a=i,m.a=_},m(p,v){n.m(r,p,v),g(p,i,v),m.m(d,p,v),g(p,_,v)},p:Ws,d(p){p&&n.d(),p&&a(i),p&&m.d(),p&&a(_)}}}function Oh(e){let n,r=f("r")+"",i,m,d=f("b = a^{\\frac{r}{2}}")+"",_,p,v=f("a^r = m \\cdot N + 1 \\Rightarrow b^2-1 = (b + 1)(b - 1) = m \\cdot N")+"",b,k,w=f(`b = ${e[5]}`)+"",N,$,I=f("N")+"",X,O,H=f("b-1")+"",j,V,A=f("b+1")+"",z,q,te=f(`${Ao(e[0],e[5]-1)}`)+"",x,J,ne=f(`${Ao(e[0],e[5]+1)}`)+"",Q;return{c(){n=new Et(!1),i=s(" is even, so we can create "),m=new Et(!1),_=s(`, and expand
			the above so that
			`),p=new Et(!1),b=s(`. In this
			case, as `),k=new Et(!1),N=s(`, we can calculate the greatest common divisor for
			`),$=new Et(!1),X=s(" with "),O=new Et(!1),j=s(" and "),V=new Et(!1),z=s(` very quickly, which are
			`),q=new Et(!1),x=s(" and "),J=new Et(!1),Q=s(" respectively"),this.h()},l(P){n=Tt(P,!1),i=o(P," is even, so we can create "),m=Tt(P,!1),_=o(P,`, and expand
			the above so that
			`),p=Tt(P,!1),b=o(P,`. In this
			case, as `),k=Tt(P,!1),N=o(P,`, we can calculate the greatest common divisor for
			`),$=Tt(P,!1),X=o(P," with "),O=Tt(P,!1),j=o(P," and "),V=Tt(P,!1),z=o(P,` very quickly, which are
			`),q=Tt(P,!1),x=o(P," and "),J=Tt(P,!1),Q=o(P," respectively"),this.h()},h(){n.a=i,m.a=_,p.a=b,k.a=N,$.a=X,O.a=j,V.a=z,q.a=x,J.a=Q},m(P,L){n.m(r,P,L),g(P,i,L),m.m(d,P,L),g(P,_,L),p.m(v,P,L),g(P,b,L),k.m(w,P,L),g(P,N,L),$.m(I,P,L),g(P,X,L),O.m(H,P,L),g(P,j,L),V.m(A,P,L),g(P,z,L),q.m(te,P,L),g(P,x,L),J.m(ne,P,L),g(P,Q,L)},p(P,L){L&32&&w!==(w=f(`b = ${P[5]}`)+"")&&k.p(w),L&33&&te!==(te=f(`${Ao(P[0],P[5]-1)}`)+"")&&q.p(te),L&33&&ne!==(ne=f(`${Ao(P[0],P[5]+1)}`)+"")&&J.p(ne)},d(P){P&&n.d(),P&&a(i),P&&m.d(),P&&a(_),P&&p.d(),P&&a(b),P&&k.d(),P&&a(N),P&&$.d(),P&&a(X),P&&O.d(),P&&a(j),P&&V.d(),P&&a(z),P&&q.d(),P&&a(x),P&&J.d(),P&&a(Q)}}}function Gh(e){let n,r,i,m,d,_,p,v,b,k,w,N,$,I,X,O,H,j=f(` = ${e[3]} \\cdot ${e[4]}`)+"",V,A,z,q,te=f(`a = ${e[1]}`)+"",x,J,ne=f(`N = ${e[0]}`)+"",Q,P,L=f(`K = ${e[6]}`)+"",re,Y,F,U,$e;function ae(Z,T){return Z[6]!=1?Wh:Dh}let Ae=ae(e),le=Ae(e);return{c(){n=l("div"),r=l("div"),i=s("a:"),m=M(),d=l("input"),p=M(),v=l("input"),k=M(),w=l("div"),N=s("N:"),$=M(),I=l("input"),O=M(),H=l("div"),V=M(),A=l("p"),z=s("The greatest common divisor of "),q=new Et(!1),x=s(" and "),J=new Et(!1),Q=s(` is
	`),P=new Et(!1),re=s(". This is very quick to calculate."),Y=M(),le.c(),F=ho(),this.h()},l(Z){n=h(Z,"DIV",{class:!0});var T=u(n);r=h(T,"DIV",{class:!0});var oe=u(r);i=o(oe,"a:"),oe.forEach(a),m=S(T),d=h(T,"INPUT",{class:!0,type:!0,min:!0,max:!0}),p=S(T),v=h(T,"INPUT",{class:!0,type:!0,min:!0,max:!0}),k=S(T),w=h(T,"DIV",{class:!0});var ue=u(w);N=o(ue,"N:"),ue.forEach(a),$=S(T),I=h(T,"INPUT",{class:!0,type:!0,min:!0,max:!0}),O=S(T),H=h(T,"DIV",{id:!0,class:!0});var st=u(H);st.forEach(a),T.forEach(a),V=S(Z),A=h(Z,"P",{});var He=u(A);z=o(He,"The greatest common divisor of "),q=Tt(He,!1),x=o(He," and "),J=Tt(He,!1),Q=o(He,` is
	`),P=Tt(He,!1),re=o(He,". This is very quick to calculate."),He.forEach(a),Y=S(Z),le.l(Z),F=ho(),this.h()},h(){R(r,"class","varlabel svelte-1lqus27"),R(d,"class","numsel svelte-1lqus27"),R(d,"type","number"),R(d,"min",2),R(d,"max",_=e[0]-1),R(v,"class","slider svelte-1lqus27"),R(v,"type","range"),R(v,"min",2),R(v,"max",b=e[0]-1),R(w,"class","varlabel svelte-1lqus27"),R(I,"class","numsel svelte-1lqus27"),R(I,"type","number"),R(I,"min","1"),R(I,"max",e[7]),R(H,"id","decomp"),R(H,"class","svelte-1lqus27"),R(n,"class","cpanel svelte-1lqus27"),q.a=x,J.a=Q,P.a=re},m(Z,T){g(Z,n,T),t(n,r),t(r,i),t(n,m),t(n,d),Un(d,e[1]),t(n,p),t(n,v),Un(v,e[1]),t(n,k),t(n,w),t(w,N),t(n,$),t(n,I),Un(I,e[0]),t(n,O),t(n,H),H.innerHTML=j,g(Z,V,T),g(Z,A,T),t(A,z),q.m(te,A),t(A,x),J.m(ne,A),t(A,Q),P.m(L,A),t(A,re),g(Z,Y,T),le.m(Z,T),g(Z,F,T),U||($e=[c(d,"input",e[10]),c(v,"change",e[11]),c(v,"input",e[11]),qh(X=e[8].call(null,I,e[0])),c(I,"input",e[12])],U=!0)},p(Z,[T]){T&1&&_!==(_=Z[0]-1)&&R(d,"max",_),T&2&&Dr(d.value)!==Z[1]&&Un(d,Z[1]),T&1&&b!==(b=Z[0]-1)&&R(v,"max",b),T&2&&Un(v,Z[1]),X&&Ah(X.update)&&T&1&&X.update.call(null,Z[0]),T&1&&Dr(I.value)!==Z[0]&&Un(I,Z[0]),T&24&&j!==(j=f(` = ${Z[3]} \\cdot ${Z[4]}`)+"")&&(H.innerHTML=j),T&2&&te!==(te=f(`a = ${Z[1]}`)+"")&&q.p(te),T&1&&ne!==(ne=f(`N = ${Z[0]}`)+"")&&J.p(ne),T&64&&L!==(L=f(`K = ${Z[6]}`)+"")&&P.p(L),Ae===(Ae=ae(Z))&&le?le.p(Z,T):(le.d(1),le=Ae(Z),le&&(le.c(),le.m(F.parentNode,F)))},i:Ws,o:Ws,d(Z){Z&&a(n),Z&&a(V),Z&&a(A),Z&&a(Y),le.d(Z),Z&&a(F),U=!1,er($e)}}}function Kh(e,n){for(let r=1;r<n;r++){let i=e%n;for(let m=1;m<r;m++)i=i*e%n;if(i==1)return r}return 0}function Yh(e,n,r){let i,m,d,{bits:_=7}=n,p=Math.pow(2,_)-1;const v=new Set;for(let A=2;A<=p/2;A++){let z=!0;v.forEach(function(q){A%q==0&&(z=!1)}),z&&v.add(A)}let b=39,k=b,w=7,N,$;function I(A){for(const z of v)if(v.has(A/z))return r(3,N=z),r(4,$=A/z),!0;return!1}I(b);function X(A,z){return{update(q){let te=q-k;if(te!=0){for(;!I(q);)if(q+=te,q<=2||q>=p)return;O(q)}}}}function O(A){r(0,b=A),k=b,r(1,w=w>=b?b-1:w)}function H(){w=Dr(this.value),r(1,w)}function j(){w=Dr(this.value),r(1,w)}function V(){b=Dr(this.value),r(0,b)}return e.$$set=A=>{"bits"in A&&r(9,_=A.bits)},e.$$.update=()=>{e.$$.dirty&3&&r(2,i=Kh(w,b)),e.$$.dirty&3&&r(6,m=Ao(b,w)),e.$$.dirty&6&&r(5,d=Math.pow(w,i/2))},[b,w,i,N,$,d,m,p,X,_,H,j,V]}class Zh extends na{constructor(n){super(),aa(this,n,Yh,Gh,ra,{bits:9})}}function Jh(e){return e<.5?4*e*e*e:.5*Math.pow(2*e-2,3)+1}function Xh(e){const n=e-1;return n*n*n+1}function eu(e){return--e*e*e*e*e+1}function tu(e,{delay:n=0,duration:r=400,easing:i=Xh,start:m=0,opacity:d=0}={}){const _=getComputedStyle(e),p=+_.opacity,v=_.transform==="none"?"":_.transform,b=1-m,k=p*(1-d);return{delay:n,duration:r,easing:i,css:(w,N)=>`
			transform: ${v} scale(${1-b*N});
			opacity: ${p-k*N}
		`}}function Ql(e,{delay:n=0,speed:r,duration:i,easing:m=Jh}={}){let d=e.getTotalLength();const _=getComputedStyle(e);return _.strokeLinecap!=="butt"&&(d+=parseInt(_.strokeWidth)),i===void 0?r===void 0?i=800:i=d/r:typeof i=="function"&&(i=i(d)),{delay:n,duration:i,easing:m,css:(p,v)=>`stroke-dasharray: ${p*d} ${v*d}`}}function zl(e){let n,r;return{c(){n=l("div"),this.h()},l(i){n=h(i,"DIV",{class:!0});var m=u(n);m.forEach(a),this.h()},h(){R(n,"class","hover-inner svelte-5qv8za")},m(i,m){g(i,n,m),n.innerHTML=e[0]},p(i,m){e=i,m&1&&(n.innerHTML=e[0])},i(i){r||ih(()=>{r=Fh(n,tu,{duration:150,easing:eu,opacity:0}),r.start()})},o:Ws,d(i){i&&a(n)}}}function nu(e){let n,r,i,m;const d=e[5].default,_=Hh(d,e,e[4],null);let p=e[1]&&zl(e);return{c(){n=l("span"),_&&_.c(),p&&p.c(),this.h()},l(v){n=h(v,"SPAN",{class:!0});var b=u(n);_&&_.l(b),p&&p.l(b),b.forEach(a),this.h()},h(){R(n,"class","hover-outer svelte-5qv8za")},m(v,b){g(v,n,b),_&&_.m(n,null),p&&p.m(n,null),r=!0,i||(m=[c(n,"mouseenter",e[2]),c(n,"mouseleave",e[3])],i=!0)},p(v,[b]){_&&_.p&&(!r||b&16)&&Lh(_,d,v,v[4],r?Ih(d,v[4],b,null):xh(v[4]),null),v[1]?p?(p.p(v,b),b&2&&_e(p,1)):(p=zl(v),p.c(),_e(p,1),p.m(n,null)):p&&(p.d(1),p=null)},i(v){r||(_e(_,v),_e(p),r=!0)},o(v){Ne(_,v),r=!1},d(v){v&&a(n),_&&_.d(v),p&&p.d(),i=!1,er(m)}}}function au(e,n,r){let{$$slots:i={},$$scope:m}=n,{hovertext:d}=n,_=!1;const p=()=>r(1,_=!0),v=()=>r(1,_=!1);return e.$$set=b=>{"hovertext"in b&&r(0,d=b.hovertext),"$$scope"in b&&r(4,m=b.$$scope)},[d,_,p,v,m,i]}class mt extends na{constructor(n){super(),aa(this,n,au,nu,ra,{hovertext:0})}}const ru=`<a href="https://en.wikipedia.org/wiki/Semiprime"><h3 class="text-lg font-semibold">Semiprime</h3></a><p>In mathematics, a <b>semiprime</b> is a natural number that is the product of exactly two prime numbers. The two primes in the product may equal each other, so the semiprimes include the squares of prime numbers.
Because there are infinitely many prime numbers, there are also infinitely many semiprimes. Semiprimes are also called <b>biprimes</b>.</p>`,su='<a href="https://en.wikipedia.org/wiki/General_number_field_sieve"><h3>General number field sieve</h3></a><p>In number theory, the <b>general number field sieve</b> (<b>GNFS</b>) is the most efficient classical algorithm known for factoring integers larger than <span class="texhtml ">10<sup>100</sup></span>. Heuristically, its complexity for factoring an integer <span class="texhtml mvar" style="font-style:italic">n</span> (consisting of <span class="texhtml ">\u230Alog<sub>2</sub> <span class="texhtml mvar" style="font-style:italic">n</span>\u230B + 1</span> bits) is of the form</p><dl><dd><span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/fcc5450b9f039008c0a728e15b6c66f24dafbb30" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-2.505ex;width:57.324ex;height:6.343ex" /></span></dd></dl>',ou='<a href="https://en.wikipedia.org/wiki/Exponential_function"><h3>Exponential function</h3></a><p>The <b>exponential function</b> is a mathematical function denoted by <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/9dd9b17af32bc3cffe927507c7bccf4e2a96f585" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:14.207ex;height:2.843ex" /></span> or <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/841c0d168e64191c45a45e54c7e447defd17ec6a" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:2.256ex;height:2.343ex" /></span>. Unless otherwise specified, the term generally refers to the positive-valued function of a real variable, although it can be extended to the complex numbers or generalized to other mathematical objects like matrices or Lie algebras. The exponential function originated from the notion of exponentiation, but modern definitions allow it to be rigorously extended to all real arguments, including irrational numbers. Its ubiquitous occurrence in pure and applied mathematics led mathematician Walter Rudin to opine that the exponential function is "the most important function in mathematics".</p>',iu='<a href="https://en.wikipedia.org/wiki/Quantum_computing"><h3>Quantum computing</h3></a><p><b>Quantum computing</b> is a type of computation whose operations can harness the phenomena of quantum mechanics, such as superposition, interference, and entanglement. Devices that perform quantum computations are known as <b>quantum computers</b>. Though current quantum computers are too small to outperform usual (classical) computers for practical applications, larger realizations are believed to be capable of solving certain computational problems, such as integer factorization, substantially faster than classical computers. The study of quantum computing is a subfield of quantum information science.</p>',lu=`<a href="https://en.wikipedia.org/wiki/Cubic_function"><h3>Cubic function</h3></a><p>In mathematics, a <b>cubic function</b> is a function of the form <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/9cc573924b3e958061c7436c149efc76e4098668" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:26.585ex;height:3.176ex" /></span>
where the coefficients <span class="texhtml mvar" style="font-style:italic">a</span>, <span class="texhtml mvar" style="font-style:italic">b</span>, <span class="texhtml mvar" style="font-style:italic">c</span>, and <span class="texhtml mvar" style="font-style:italic">d</span> are complex numbers, and the variable <span class="texhtml mvar" style="font-style:italic">x</span> takes real values, and <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f455a7f96d74aa94573d8e32da3b240ab0aa294f" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:5.491ex;height:2.676ex" /></span>. In other words, it is both a polynomial function of degree three, and a real function. In particular, the domain and the codomain are the set of the real numbers.</p>`,hu='<a href="https://en.wikipedia.org/wiki/Computational_complexity"><h3 class="text-lg font-semibold">Computational complexity</h3></a><p>In computer science, the <b>computational complexity</b> or simply <b>complexity</b> of an algorithm is the amount of resources required to run it. Particular focus is given to time and memory requirements. The complexity of a problem is the complexity of the best algorithms that allow solving the problem.</p>',uu=`<a href="https://en.wikipedia.org/wiki/Linear_function"><h3>Linear function</h3></a><p>In mathematics, the term <b>linear function</b> refers to two distinct but related notions:</p><ul><li>In calculus and related areas, a linear function is a function whose graph is a straight line, that is, a polynomial function of degree zero or one. For distinguishing such a linear function from the other concept, the term affine function is often used.</li>
<li>In linear algebra, mathematical analysis, and functional analysis, a linear function is a linear map.</li></ul>`;function mu(e){let n;return{c(){n=s("semiprime")},l(r){n=o(r,"semiprime")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function fu(e){let n;return{c(){n=s("number field sieve")},l(r){n=o(r,"number field sieve")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function pu(e){let n;return{c(){n=s("exponentially")},l(r){n=o(r,"exponentially")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function cu(e){let n;return{c(){n=s("quantum computer")},l(r){n=o(r,"quantum computer")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function _u(e){let n;return{c(){n=s("cubically")},l(r){n=o(r,"cubically")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function du(e){let n;return{c(){n=s("Computational complexity")},l(r){n=o(r,"Computational complexity")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function bu(e){let n;return{c(){n=s("linearly")},l(r){n=o(r,"linearly")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function vu(e){let n,r,i,m,d,_,p=f("p, q \\in \\mathbb{P}")+"",v,b,k,w,N=f("N \\in \\mathbb{N}")+"",$,I,X=f("N = p \\cdot q")+"",O,H,j=f("15")+"",V,A,z=f("3")+"",q,te,x=f("5")+"",J,ne,Q=f("62615533")+"",P,L,re,Y,F,U,$e,ae,Ae,le,Z=f("100")+"",T,oe,ue=f("3")+"",st,He,ze=f("200")+"",dt,ge,Fe=f("5")+"",Re,ot,Le,ce,qt,qe,ie,me,Ke,At;return b=new mt({props:{hovertext:ru,$$slots:{default:[mu]},$$scope:{ctx:e}}}),L=new mt({props:{hovertext:su,$$slots:{default:[fu]},$$scope:{ctx:e}}}),Y=new mt({props:{hovertext:ou,$$slots:{default:[pu]},$$scope:{ctx:e}}}),U=new mt({props:{hovertext:iu,$$slots:{default:[cu]},$$scope:{ctx:e}}}),ae=new mt({props:{hovertext:lu,$$slots:{default:[_u]},$$scope:{ctx:e}}}),ce=new mt({props:{hovertext:hu,$$slots:{default:[du]},$$scope:{ctx:e}}}),qe=new mt({props:{hovertext:uu,$$slots:{default:[bu]},$$scope:{ctx:e}}}),{c(){n=l("h2"),r=s("Description of the problem"),i=M(),m=l("p"),d=s("We would like to find the prime factors "),_=l("span"),v=s(" of a large "),Te(b.$$.fragment),k=M(),w=l("span"),$=s(" (so that "),I=l("span"),O=s("). Finding these factors for a small number, such as "),H=l("span"),V=s(", is quite easy. In fact, you may figure it out just by looking at it and recalling your grade school studies: the factors are "),A=l("span"),q=s(" and "),te=l("span"),J=s(". But what are the prime factors of, say, "),ne=l("span"),P=s("? It turns out that, using the best known classical (meaning non-quantum) algorithm (the so called "),Te(L.$$.fragment),re=s("), solving the factoring problem scales "),Te(Y.$$.fragment),F=s(" with the number of digits of the semiprime that we want to factor. With the help of Shor's algorithm and a sufficiently large "),Te(U.$$.fragment),$e=s(", the same problem scales roughly "),Te(ae.$$.fragment),Ae=s(" with the number of digits. (In fact, the algorithm does slighly better than that, but the precise formula is a bit complicated and is beside the point.) To illustrate what this means in practical terms, imagine the following. If factoring a "),le=l("span"),T=s("-digit number with Shor's algorithm on a quantum computer takes one second, factoring the same number with the number field sieve on a classical computer takes more than "),oe=l("span"),st=s(" hours. If we now try with a "),He=l("span"),dt=s("-digit number, Shor's algorithm finishes in roughly "),ge=l("span"),Re=s(" seconds, while the classical solution would take more than a year!"),ot=M(),Le=l("p"),Te(ce.$$.fragment),qt=s(` refers to how the time - or number of elementary operations - required to solve a given problem algorithmically grows with the size of the input. Let's say you have to find the longest book you have ever read. One way to approach this problem is to list the books you have read one by one, label the first one as the longest, and whenever you encounter an even longer book, it takes the place of the former. This way, you only have to keep track of the largest page number so far, and the book associated with it. The "elementary operation" in this case is checking the number of pages of the next book and comparing that with the previous maximum. If you have twice or three times as many books, this procedure requires twice or three times as many elementary operations. In other words, it grows `),Te(qe.$$.fragment),ie=s(" in the number of books. So, while the solution can be found using the same algorithm, the number of elementary operations required to carry out that algorithm depends on the size of the input. This is true for almost all algorithms that are designed to solve mathematical problems. However, how fast that growth is, makes all the difference between them.")},l(W){n=h(W,"H2",{});var de=u(n);r=o(de,"Description of the problem"),de.forEach(a),i=S(W),m=h(W,"P",{});var G=u(m);d=o(G,"We would like to find the prime factors "),_=h(G,"SPAN",{});var gt=u(_);gt.forEach(a),v=o(G," of a large "),Pe(b.$$.fragment,G),k=S(G),w=h(G,"SPAN",{});var Oe=u(w);Oe.forEach(a),$=o(G," (so that "),I=h(G,"SPAN",{});var bt=u(I);bt.forEach(a),O=o(G,"). Finding these factors for a small number, such as "),H=h(G,"SPAN",{});var yt=u(H);yt.forEach(a),V=o(G,", is quite easy. In fact, you may figure it out just by looking at it and recalling your grade school studies: the factors are "),A=h(G,"SPAN",{});var Ye=u(A);Ye.forEach(a),q=o(G," and "),te=h(G,"SPAN",{});var ft=u(te);ft.forEach(a),J=o(G,". But what are the prime factors of, say, "),ne=h(G,"SPAN",{});var xt=u(ne);xt.forEach(a),P=o(G,"? It turns out that, using the best known classical (meaning non-quantum) algorithm (the so called "),Pe(L.$$.fragment,G),re=o(G,"), solving the factoring problem scales "),Pe(Y.$$.fragment,G),F=o(G," with the number of digits of the semiprime that we want to factor. With the help of Shor's algorithm and a sufficiently large "),Pe(U.$$.fragment,G),$e=o(G,", the same problem scales roughly "),Pe(ae.$$.fragment,G),Ae=o(G," with the number of digits. (In fact, the algorithm does slighly better than that, but the precise formula is a bit complicated and is beside the point.) To illustrate what this means in practical terms, imagine the following. If factoring a "),le=h(G,"SPAN",{});var it=u(le);it.forEach(a),T=o(G,"-digit number with Shor's algorithm on a quantum computer takes one second, factoring the same number with the number field sieve on a classical computer takes more than "),oe=h(G,"SPAN",{});var $t=u(oe);$t.forEach(a),st=o(G," hours. If we now try with a "),He=h(G,"SPAN",{});var It=u(He);It.forEach(a),dt=o(G,"-digit number, Shor's algorithm finishes in roughly "),ge=h(G,"SPAN",{});var pt=u(ge);pt.forEach(a),Re=o(G," seconds, while the classical solution would take more than a year!"),G.forEach(a),ot=S(W),Le=h(W,"P",{});var lt=u(Le);Pe(ce.$$.fragment,lt),qt=o(lt,` refers to how the time - or number of elementary operations - required to solve a given problem algorithmically grows with the size of the input. Let's say you have to find the longest book you have ever read. One way to approach this problem is to list the books you have read one by one, label the first one as the longest, and whenever you encounter an even longer book, it takes the place of the former. This way, you only have to keep track of the largest page number so far, and the book associated with it. The "elementary operation" in this case is checking the number of pages of the next book and comparing that with the previous maximum. If you have twice or three times as many books, this procedure requires twice or three times as many elementary operations. In other words, it grows `),Pe(qe.$$.fragment,lt),ie=o(lt," in the number of books. So, while the solution can be found using the same algorithm, the number of elementary operations required to carry out that algorithm depends on the size of the input. This is true for almost all algorithms that are designed to solve mathematical problems. However, how fast that growth is, makes all the difference between them."),lt.forEach(a)},m(W,de){g(W,n,de),t(n,r),g(W,i,de),g(W,m,de),t(m,d),t(m,_),_.innerHTML=p,t(m,v),Me(b,m,null),t(m,k),t(m,w),w.innerHTML=N,t(m,$),t(m,I),I.innerHTML=X,t(m,O),t(m,H),H.innerHTML=j,t(m,V),t(m,A),A.innerHTML=z,t(m,q),t(m,te),te.innerHTML=x,t(m,J),t(m,ne),ne.innerHTML=Q,t(m,P),Me(L,m,null),t(m,re),Me(Y,m,null),t(m,F),Me(U,m,null),t(m,$e),Me(ae,m,null),t(m,Ae),t(m,le),le.innerHTML=Z,t(m,T),t(m,oe),oe.innerHTML=ue,t(m,st),t(m,He),He.innerHTML=ze,t(m,dt),t(m,ge),ge.innerHTML=Fe,t(m,Re),g(W,ot,de),g(W,Le,de),Me(ce,Le,null),t(Le,qt),Me(qe,Le,null),t(Le,ie),me=!0,Ke||(At=[c(_,"mouseenter",e[0]),c(w,"mouseenter",e[1]),c(I,"mouseenter",e[2]),c(H,"mouseenter",e[3]),c(A,"mouseenter",e[4]),c(te,"mouseenter",e[5]),c(ne,"mouseenter",e[6]),c(le,"mouseenter",e[7]),c(oe,"mouseenter",e[8]),c(He,"mouseenter",e[9]),c(ge,"mouseenter",e[10])],Ke=!0)},p(W,[de]){const G={};de&2048&&(G.$$scope={dirty:de,ctx:W}),b.$set(G);const gt={};de&2048&&(gt.$$scope={dirty:de,ctx:W}),L.$set(gt);const Oe={};de&2048&&(Oe.$$scope={dirty:de,ctx:W}),Y.$set(Oe);const bt={};de&2048&&(bt.$$scope={dirty:de,ctx:W}),U.$set(bt);const yt={};de&2048&&(yt.$$scope={dirty:de,ctx:W}),ae.$set(yt);const Ye={};de&2048&&(Ye.$$scope={dirty:de,ctx:W}),ce.$set(Ye);const ft={};de&2048&&(ft.$$scope={dirty:de,ctx:W}),qe.$set(ft)},i(W){me||(_e(b.$$.fragment,W),_e(L.$$.fragment,W),_e(Y.$$.fragment,W),_e(U.$$.fragment,W),_e(ae.$$.fragment,W),_e(ce.$$.fragment,W),_e(qe.$$.fragment,W),me=!0)},o(W){Ne(b.$$.fragment,W),Ne(L.$$.fragment,W),Ne(Y.$$.fragment,W),Ne(U.$$.fragment,W),Ne(ae.$$.fragment,W),Ne(ce.$$.fragment,W),Ne(qe.$$.fragment,W),me=!1},d(W){W&&a(n),W&&a(i),W&&a(m),Se(b),Se(L),Se(Y),Se(U),Se(ae),W&&a(ot),W&&a(Le),Se(ce),Se(qe),Ke=!1,er(At)}}}function Za(e){console.log(e)}function wu(e){return[()=>Za(["q","p","P"]),()=>Za(["N"]),()=>Za(["q","N","p"]),()=>Za([]),()=>Za([]),()=>Za([]),()=>Za([]),()=>Za([]),()=>Za([]),()=>Za([]),()=>Za([])]}class gu extends na{constructor(n){super(),aa(this,n,wu,vu,ra,{})}}const yu='<a href="https://en.wikipedia.org/wiki/Greatest_common_divisor"><h3>Greatest common divisor</h3></a><p>In mathematics, the <b>greatest common divisor</b> (<b>GCD</b>) of two or more integers, which are not all zero, is the largest positive integer that divides each of the integers. For two integers <i>x</i>, <i>y</i>, the greatest common divisor of <i>x</i> and <i>y</i> is denoted <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/24c083a217bb5e2d3468e683c957f220a683e4d8" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:8.816ex;height:2.843ex" /></span>. For example, the GCD of 8 and 12 is 4, that is, <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/cabed257e6ea789ef3febd9add3a7f3ef2237361" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.838ex;width:14.079ex;height:2.843ex" /></span>.</p>',$u=`<a href="https://en.wikipedia.org/wiki/Euclidean_algorithm"><h3>Euclidean algorithm</h3></a><p>In mathematics, the <b>Euclidean algorithm</b>, or <b>Euclid's algorithm</b>, is an efficient method for computing the greatest common divisor (GCD) of two integers (numbers), the largest number that divides them both without a remainder. It is named after the ancient Greek mathematician Euclid, who first described it in <span>his <i>Elements</i></span> .
It is an example of an <i>algorithm</i>, a step-by-step procedure for performing a calculation according to well-defined rules,
and is one of the oldest algorithms in common use. It can be used to reduce fractions to their simplest form, and is a part of many other number-theoretic and cryptographic calculations.</p>`;function Nu(e){let n;return{c(){n=s("greatest common divisor")},l(r){n=o(r,"greatest common divisor")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function ku(e){let n;return{c(){n=s("Euclid's algorithm")},l(r){n=o(r,"Euclid's algorithm")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Eu(e){let n,r,i,m,d,_,p,v,b,k,w,N=f("a \\in \\mathbb{N}, 1 < a < N")+"",$,I,X=f("a")+"",O,H,j=f("N")+"",V,A,z=f("\\gcd(a, N) = 1")+"",q,te,x=f("\\gcd")+"",J,ne,Q,P,L=f("a")+"",re,Y,F=f("N")+"",U,$e,ae=f("N")+"",Ae,le,Z,T,oe,ue,st=f("f_{a, N}(r): \\mathbb{N} \\rightarrow \\mathbb{N} = a^r \\mod N")+"",He,ze,dt=f("0 < \\hat{r} < N")+"",ge,Fe,Re=f("f_{a, N}(\\hat{r}) = 1")+"",ot,Le,ce=f("\\hat{r}")+"",qt,qe,ie=f("a")+"",me,Ke,At,W,de,G,gt=f("\\hat{r}")+"",Oe,bt,yt=f("\\hat{r}")+"",Ye,ft,xt=f("m \\in \\mathbb{N}")+"",it,$t,It=f("a^{\\hat{r}} = m \\cdot N + 1")+"",pt,lt,jt=f("b = a^{\\frac{\\hat{r}}{2}}")+"",D,be,ct=f("b^2 = (a^{\\frac{\\hat{r}}{2}})^2 = a^{\\hat{r}}")+"",Qe,Pt,je=f("b^2 - 1 = (b + 1)(b - 1)")+"",Nt,kt,Dt=f("(b + 1)(b - 1) = m \\cdot N")+"",Ht,Wt,Ft,Ge,Ut,at,Ce=f("\\gcd(a^{\\frac{r}{2} - 1}, N)")+"",et,vt,ke=f("\\gcd(a^{\\frac{r}{2} + 1}, N)")+"",Mt,ht,Nn,tt,Ot,rn,St,sn,en,un,Ve,se,We,nt=f("\\hat{r}")+"",Hn,rt,Bt=f("1")+"",Cn,kn,Ie=f("N")+"",En,mn,ve=f("N")+"",Tn,fn,Pn,Ln;return ne=new mt({props:{hovertext:yu,$$slots:{default:[Nu]},$$scope:{ctx:e}}}),ht=new mt({props:{hovertext:$u,$$slots:{default:[ku]},$$scope:{ctx:e}}}),{c(){n=l("h2"),r=s("Solution"),i=M(),m=l("p"),d=s("The factoring problem can be solved with the following simple, but very time-consuming algorithm:"),_=M(),p=l("ol"),v=l("li"),b=l("p"),k=s("We pick a random number "),w=l("span"),$=s(" and make sure that "),I=l("span"),O=s(" and "),H=l("span"),V=s(" are relative primes, meaning "),A=l("span"),q=s(", where "),te=l("span"),J=s(" stands for "),Te(ne.$$.fragment),Q=s(". (In case "),P=l("span"),re=s(" happens to be a factor of "),Y=l("span"),U=s(", the entire problem is solved and no further steps are required, but that is highly unlikely if "),$e=l("span"),Ae=s(" is large.)"),le=M(),Z=l("li"),T=l("p"),oe=s("Next, we construct the function "),ue=l("span"),He=s(" and find the smallest integer "),ze=l("span"),ge=s(" such that "),Fe=l("span"),ot=s(". If "),Le=l("span"),qt=s(" turns out to be odd, we unfortunately have to repeat the entire procedure with a different "),qe=l("span"),me=s(" parameter."),Ke=M(),At=l("li"),W=l("p"),de=s("If we're lucky and "),G=l("span"),Oe=s(" is even, we can proceed. From the definition of "),bt=l("span"),Ye=s(" follows that there's "),ft=l("span"),it=s(" such that "),$t=l("span"),pt=s(". We can then define the integer "),lt=l("span"),D=s(", which means "),be=l("span"),Qe=s(". Also, we can make use of a well-known algebraic identity to write "),Pt=l("span"),Nt=s(". Putting together these three equations, we find that "),kt=l("span"),Ht=s("."),Wt=M(),Ft=l("li"),Ge=l("p"),Ut=s("And then we're done, because the prime factors we're looking for are "),at=l("span"),et=s(" and "),vt=l("span"),Mt=s(", and these are very easy to compute with the help of "),Te(ht.$$.fragment),Nn=s("."),tt=M(),Ot=l("p"),rn=s("For a more illuminating explanation, see the video "),St=l("a"),sn=s("Hacking at Quantum Speed with Shor's Algorithm"),en=s(" by PBS Infinite Series."),un=M(),Ve=l("p"),se=s("The problem with this solution is that in order to find "),We=l("span"),Hn=s(", we might have to check all possible values between "),rt=l("span"),Cn=s(" and "),kn=l("span"),En=s(" one after the other, which is an insane amount of computation if "),mn=l("span"),Tn=s(" is number with several hundreds of digits. But that's only the case if we're trying with a classical computer."),this.h()},l(we){n=h(we,"H2",{});var _t=u(n);r=o(_t,"Solution"),_t.forEach(a),i=S(we),m=h(we,"P",{});var Mn=u(m);d=o(Mn,"The factoring problem can be solved with the following simple, but very time-consuming algorithm:"),Mn.forEach(a),_=S(we),p=h(we,"OL",{});var pe=u(p);v=h(pe,"LI",{});var pn=u(v);b=h(pn,"P",{});var Ue=u(b);k=o(Ue,"We pick a random number "),w=h(Ue,"SPAN",{});var Qt=u(w);Qt.forEach(a),$=o(Ue," and make sure that "),I=h(Ue,"SPAN",{});var cn=u(I);cn.forEach(a),O=o(Ue," and "),H=h(Ue,"SPAN",{});var _n=u(H);_n.forEach(a),V=o(Ue," are relative primes, meaning "),A=h(Ue,"SPAN",{});var ba=u(A);ba.forEach(a),q=o(Ue,", where "),te=h(Ue,"SPAN",{});var dn=u(te);dn.forEach(a),J=o(Ue," stands for "),Pe(ne.$$.fragment,Ue),Q=o(Ue,". (In case "),P=h(Ue,"SPAN",{});var tn=u(P);tn.forEach(a),re=o(Ue," happens to be a factor of "),Y=h(Ue,"SPAN",{});var va=u(Y);va.forEach(a),U=o(Ue,", the entire problem is solved and no further steps are required, but that is highly unlikely if "),$e=h(Ue,"SPAN",{});var wt=u($e);wt.forEach(a),Ae=o(Ue," is large.)"),Ue.forEach(a),pn.forEach(a),le=S(pe),Z=h(pe,"LI",{});var On=u(Z);T=h(On,"P",{});var Ct=u(T);oe=o(Ct,"Next, we construct the function "),ue=h(Ct,"SPAN",{});var xn=u(ue);xn.forEach(a),He=o(Ct," and find the smallest integer "),ze=h(Ct,"SPAN",{});var In=u(ze);In.forEach(a),ge=o(Ct," such that "),Fe=h(Ct,"SPAN",{});var sa=u(Fe);sa.forEach(a),ot=o(Ct,". If "),Le=h(Ct,"SPAN",{});var oa=u(Le);oa.forEach(a),qt=o(Ct," turns out to be odd, we unfortunately have to repeat the entire procedure with a different "),qe=h(Ct,"SPAN",{});var wa=u(qe);wa.forEach(a),me=o(Ct," parameter."),Ct.forEach(a),On.forEach(a),Ke=S(pe),At=h(pe,"LI",{});var Ze=u(At);W=h(Ze,"P",{});var ut=u(W);de=o(ut,"If we're lucky and "),G=h(ut,"SPAN",{});var Fn=u(G);Fn.forEach(a),Oe=o(ut," is even, we can proceed. From the definition of "),bt=h(ut,"SPAN",{});var Ur=u(bt);Ur.forEach(a),Ye=o(ut," follows that there's "),ft=h(ut,"SPAN",{});var Rn=u(ft);Rn.forEach(a),it=o(ut," such that "),$t=h(ut,"SPAN",{});var Gn=u($t);Gn.forEach(a),pt=o(ut,". We can then define the integer "),lt=h(ut,"SPAN",{});var ia=u(lt);ia.forEach(a),D=o(ut,", which means "),be=h(ut,"SPAN",{});var bn=u(be);bn.forEach(a),Qe=o(ut,". Also, we can make use of a well-known algebraic identity to write "),Pt=h(ut,"SPAN",{});var Pa=u(Pt);Pa.forEach(a),Nt=o(ut,". Putting together these three equations, we find that "),kt=h(ut,"SPAN",{});var Ma=u(kt);Ma.forEach(a),Ht=o(ut,"."),ut.forEach(a),Ze.forEach(a),Wt=S(pe),Ft=h(pe,"LI",{});var ye=u(Ft);Ge=h(ye,"P",{});var nn=u(Ge);Ut=o(nn,"And then we're done, because the prime factors we're looking for are "),at=h(nn,"SPAN",{});var la=u(at);la.forEach(a),et=o(nn," and "),vt=h(nn,"SPAN",{});var ha=u(vt);ha.forEach(a),Mt=o(nn,", and these are very easy to compute with the help of "),Pe(ht.$$.fragment,nn),Nn=o(nn,"."),nn.forEach(a),ye.forEach(a),pe.forEach(a),tt=S(we),Ot=h(we,"P",{});var Qn=u(Ot);rn=o(Qn,"For a more illuminating explanation, see the video "),St=h(Qn,"A",{href:!0});var Kn=u(St);sn=o(Kn,"Hacking at Quantum Speed with Shor's Algorithm"),Kn.forEach(a),en=o(Qn," by PBS Infinite Series."),Qn.forEach(a),un=S(we),Ve=h(we,"P",{});var Gt=u(Ve);se=o(Gt,"The problem with this solution is that in order to find "),We=h(Gt,"SPAN",{});var ua=u(We);ua.forEach(a),Hn=o(Gt,", we might have to check all possible values between "),rt=h(Gt,"SPAN",{});var ma=u(rt);ma.forEach(a),Cn=o(Gt," and "),kn=h(Gt,"SPAN",{});var fa=u(kn);fa.forEach(a),En=o(Gt," one after the other, which is an insane amount of computation if "),mn=h(Gt,"SPAN",{});var pa=u(mn);pa.forEach(a),Tn=o(Gt," is number with several hundreds of digits. But that's only the case if we're trying with a classical computer."),Gt.forEach(a),this.h()},h(){R(St,"href","https://www.youtube.com/watch?v=wUwZZaI5u0c&t=731s")},m(we,_t){g(we,n,_t),t(n,r),g(we,i,_t),g(we,m,_t),t(m,d),g(we,_,_t),g(we,p,_t),t(p,v),t(v,b),t(b,k),t(b,w),w.innerHTML=N,t(b,$),t(b,I),I.innerHTML=X,t(b,O),t(b,H),H.innerHTML=j,t(b,V),t(b,A),A.innerHTML=z,t(b,q),t(b,te),te.innerHTML=x,t(b,J),Me(ne,b,null),t(b,Q),t(b,P),P.innerHTML=L,t(b,re),t(b,Y),Y.innerHTML=F,t(b,U),t(b,$e),$e.innerHTML=ae,t(b,Ae),t(p,le),t(p,Z),t(Z,T),t(T,oe),t(T,ue),ue.innerHTML=st,t(T,He),t(T,ze),ze.innerHTML=dt,t(T,ge),t(T,Fe),Fe.innerHTML=Re,t(T,ot),t(T,Le),Le.innerHTML=ce,t(T,qt),t(T,qe),qe.innerHTML=ie,t(T,me),t(p,Ke),t(p,At),t(At,W),t(W,de),t(W,G),G.innerHTML=gt,t(W,Oe),t(W,bt),bt.innerHTML=yt,t(W,Ye),t(W,ft),ft.innerHTML=xt,t(W,it),t(W,$t),$t.innerHTML=It,t(W,pt),t(W,lt),lt.innerHTML=jt,t(W,D),t(W,be),be.innerHTML=ct,t(W,Qe),t(W,Pt),Pt.innerHTML=je,t(W,Nt),t(W,kt),kt.innerHTML=Dt,t(W,Ht),t(p,Wt),t(p,Ft),t(Ft,Ge),t(Ge,Ut),t(Ge,at),at.innerHTML=Ce,t(Ge,et),t(Ge,vt),vt.innerHTML=ke,t(Ge,Mt),Me(ht,Ge,null),t(Ge,Nn),g(we,tt,_t),g(we,Ot,_t),t(Ot,rn),t(Ot,St),t(St,sn),t(Ot,en),g(we,un,_t),g(we,Ve,_t),t(Ve,se),t(Ve,We),We.innerHTML=nt,t(Ve,Hn),t(Ve,rt),rt.innerHTML=Bt,t(Ve,Cn),t(Ve,kn),kn.innerHTML=Ie,t(Ve,En),t(Ve,mn),mn.innerHTML=ve,t(Ve,Tn),fn=!0,Pn||(Ln=[c(w,"mouseenter",e[0]),c(I,"mouseenter",e[1]),c(H,"mouseenter",e[2]),c(A,"mouseenter",e[3]),c(te,"mouseenter",e[4]),c(P,"mouseenter",e[5]),c(Y,"mouseenter",e[6]),c($e,"mouseenter",e[7]),c(ue,"mouseenter",e[8]),c(ze,"mouseenter",e[9]),c(Fe,"mouseenter",e[10]),c(Le,"mouseenter",e[11]),c(qe,"mouseenter",e[12]),c(G,"mouseenter",e[13]),c(bt,"mouseenter",e[14]),c(ft,"mouseenter",e[15]),c($t,"mouseenter",e[16]),c(lt,"mouseenter",e[17]),c(be,"mouseenter",e[18]),c(Pt,"mouseenter",e[19]),c(kt,"mouseenter",e[20]),c(at,"mouseenter",e[21]),c(vt,"mouseenter",e[22]),c(We,"mouseenter",e[23]),c(rt,"mouseenter",e[24]),c(kn,"mouseenter",e[25]),c(mn,"mouseenter",e[26])],Pn=!0)},p(we,[_t]){const Mn={};_t&134217728&&(Mn.$$scope={dirty:_t,ctx:we}),ne.$set(Mn);const pe={};_t&134217728&&(pe.$$scope={dirty:_t,ctx:we}),ht.$set(pe)},i(we){fn||(_e(ne.$$.fragment,we),_e(ht.$$.fragment,we),fn=!0)},o(we){Ne(ne.$$.fragment,we),Ne(ht.$$.fragment,we),fn=!1},d(we){we&&a(n),we&&a(i),we&&a(m),we&&a(_),we&&a(p),Se(ne),Se(ht),we&&a(tt),we&&a(Ot),we&&a(un),we&&a(Ve),Pn=!1,er(Ln)}}}function Lt(e){console.log(e)}function Tu(e){return[()=>Lt(["a","N"]),()=>Lt(["a"]),()=>Lt(["N"]),()=>Lt(["a","N"]),()=>Lt([]),()=>Lt(["a"]),()=>Lt(["N"]),()=>Lt(["N"]),()=>Lt(["f","a","r","N"]),()=>Lt(["N","r"]),()=>Lt(["f","a","r","N"]),()=>Lt(["r"]),()=>Lt(["a"]),()=>Lt(["r"]),()=>Lt(["r"]),()=>Lt(["m","N"]),()=>Lt(["a","m","r","N"]),()=>Lt(["a","r","b"]),()=>Lt(["a","r","b"]),()=>Lt(["b"]),()=>Lt(["N","m","b"]),()=>Lt(["a","r","N"]),()=>Lt(["a","r","N"]),()=>Lt(["r"]),()=>Lt([]),()=>Lt(["N"]),()=>Lt(["N"])]}class Pu extends na{constructor(n){super(),aa(this,n,Tu,Eu,ra,{})}}function Mu(e){let n,r,i,m,d,_,p,v,b,k;return m=new gu({}),_=new Pu({}),b=new Zh({}),{c(){n=l("h2"),r=s("Factoring"),i=M(),Te(m.$$.fragment),d=M(),Te(_.$$.fragment),p=M(),v=l("div"),Te(b.$$.fragment),this.h()},l(w){n=h(w,"H2",{});var N=u(n);r=o(N,"Factoring"),N.forEach(a),i=S(w),Pe(m.$$.fragment,w),d=S(w),Pe(_.$$.fragment,w),p=S(w),v=h(w,"DIV",{class:!0});var $=u(v);Pe(b.$$.fragment,$),$.forEach(a),this.h()},h(){R(v,"class","interaction")},m(w,N){g(w,n,N),t(n,r),g(w,i,N),Me(m,w,N),g(w,d,N),Me(_,w,N),g(w,p,N),g(w,v,N),Me(b,v,null),k=!0},p:Ws,i(w){k||(_e(m.$$.fragment,w),_e(_.$$.fragment,w),_e(b.$$.fragment,w),k=!0)},o(w){Ne(m.$$.fragment,w),Ne(_.$$.fragment,w),Ne(b.$$.fragment,w),k=!1},d(w){w&&a(n),w&&a(i),Se(m,w),w&&a(d),Se(_,w),w&&a(p),w&&a(v),Se(b)}}}class Su extends na{constructor(n){super(),aa(this,n,null,Mu,ra,{})}}const qu='<a href="https://en.wikipedia.org/wiki/Binary_number"><h3>Binary number</h3></a><p>A <b>binary number</b> is a number expressed in the <b>base-2 numeral system</b> or <b>binary numeral system</b>, a method of mathematical expression which uses only two symbols: typically "0" (zero) and "1" (one).</p>',Au=`<a href="https://en.wikipedia.org/wiki/Quantum_Fourier_transform"><h3>Quantum Fourier transform</h3></a><p>In quantum computing, the <b>quantum Fourier transform (QFT)</b> is a linear transformation on quantum bits, and is the quantum analogue of the discrete Fourier transform. The quantum Fourier transform is a part of many quantum algorithms, notably Shor's algorithm for factoring and computing the discrete logarithm, the quantum phase estimation algorithm for estimating the eigenvalues of a unitary operator, and algorithms for the hidden subgroup problem. The quantum Fourier transform was discovered by Don Coppersmith.</p>`;function Hu(e){let n;return{c(){n=s("binary representations")},l(r){n=o(r,"binary representations")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Lu(e){let n;return{c(){n=s("quantum Fourier transform")},l(r){n=o(r,"quantum Fourier transform")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function xu(e){let n,r,i,m,d,_,p,v,b,k=f("n")+"",w,N,$=f("|0\\rangle")+"",I,X,O=f("|1\\rangle")+"",H,j,V=f("\\underbrace{2 \\cdot \\ldots \\cdot 2}_\\text{n times} = 2^n")+"",A,z,q=f("N := 2^n")+"",te,x,J,ne,Q,P,L,re=f("0")+"",Y,F,U=f("N - 1")+"",$e,ae,Ae=f("n = 5")+"",le,Z,T=f("|0\\rangle \\otimes |1\\rangle \\otimes |0\\rangle \\otimes |0\\rangle \\otimes |1\\rangle")+"",oe,ue,st=f("01001")+"",He,ze,dt=f("\\small 0 \\cdot 2^4 + 1 \\cdot 2^3 + 0 \\cdot 2^2 + 0 \\cdot 2^1 + 1 \\cdot 2^0 = 0 + 8 + 0 + 0 + 1 = 9")+"",ge,Fe,Re,ot,Le,ce,qt,qe,ie,me,Ke=f("x")+"",At,W,de=f("x = 9")+"",G,gt,Oe=f("k")+"",bt,yt,Ye=f("\\frac{1}{\\sqrt{2}} \\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^k}} |1\\rangle \\right)")+"",ft,xt,it=f("\\alpha_k = \\frac{1}{\\sqrt{2}}")+"",$t,It,pt=f("\\beta_k = \\frac{1}{\\sqrt{2}} e^{\\frac{2 \\pi i x}{2^k}}")+"",lt,jt,D=f("k = 1, ..., n")+"",be,ct,Qe,Pt,je,Nt=f("\\alpha_k \\neq \\beta_k")+"",kt,Dt,Ht=f("\\Vert{\\alpha_k}\\Vert^2 = \\Vert{\\beta_k}\\Vert^2 = \\frac{1}{2}")+"",Wt,Ft,Ge=f("k = 1, ..., n")+"",Ut,at,Ce=f("e^{\\frac{2 \\pi i x}{2^k}}")+"",et,vt,ke,Mt,ht,Nn=f("|0\\rangle")+"",tt,Ot,rn=f("|1\\rangle")+"",St,sn,en=f("n")+"",un,Ve,se=f("n")+"",We,nt,Hn=f("0")+"",rt,Bt,Cn=f("N - 1")+"",kn,Ie,En=f("n")+"",mn,ve,Tn=f("2^n")+"",fn,Pn,Ln=f("\\frac{1}{2}")+"",we,_t,Mn=f("n")+"",pe,pn,Ue=f("\\underbrace{\\frac{1}{2} \\cdot \\ldots \\cdot \\frac{1}{2}}_\\text{n terms} = \\frac{1}{2^n} = \\frac{1}{N}")+"",Qt,cn,_n,ba,dn,tn,va,wt,On=f("|\\psi\\rangle")+"",Ct,xn,In,sa,oa=f("|\\psi\\rangle = \\underbrace{ \\frac{1}{\\sqrt{2}} \\left( |0\\rangle + e^{ \\frac{2 \\pi i x}{2^1} } |1\\rangle \\right) \\otimes \\ldots \\otimes \\frac{1}{\\sqrt{2}} \\left( |0\\rangle + e^{ \\frac{2 \\pi i x}{2^n} } |1\\rangle \\right) }_\\text{n terms}")+"",wa,Ze,ut,Fn,Ur=f("\\frac{1}{\\sqrt{2}}")+"",Rn,Gn,ia,bn,Pa=f("|\\psi\\rangle = \\frac{1}{\\sqrt{2^n}} \\left(\\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^1}} |1\\rangle \\right) \\otimes \\ldots \\otimes \\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^n}} |1\\rangle \\right) \\right) = \\frac{1}{\\sqrt{N}} \\left(\\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^1}} |1\\rangle \\right) \\otimes \\ldots \\otimes \\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^n}} |1\\rangle \\right) \\right)")+"",Ma,ye,nn,la,ha=f("y")+"",Qn,Kn,Gt=f("n")+"",ua,ma,fa=f("y_k")+"",pa,Sa,tr=f("k")+"",qa,jn,B=f("y")+"",Ee,he,nr=f("y_k = 0")+"",Yn,ga,ar=f("k")+"",Zn,ya,rr=f("|0\\rangle")+"",Jn,on,$s=f("y_k = 1")+"",Aa,zn,Ns=f("|1\\rangle")+"",Ha,sr,Rt=f("k = 1, \\ldots, n")+"",La,or,ks=f("y")+"",xa,ir,Es=f("\\displaystyle{ y = \\sum_{k=1}^n y_k \\cdot 2^{n - k}}")+"",Ia,lr,Gr=f("2^n")+"",an,hr,Ts=f("k")+"",Sn,Kt,Ps=f("\\displaystyle{ y = 2^n \\cdot \\sum_{k=1}^n y_k \\cdot 2^{-k} = N \\cdot \\sum_{k=1}^n \\frac{y_k}{2^k}}")+"",xe,Kr,Fa,Qa,Yr,za,Xn,po=f("|\\psi\\rangle = \\displaystyle{ \\frac{1}{\\sqrt{N}} \\underbrace{ \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1}_\\text{n terms} \\overbrace{e^{\\frac{2 \\pi i x y_1}{2^1}} |y_1\\rangle \\otimes \\ldots \\otimes e^{\\frac{2 \\pi i x y_n}{2^n}}|y_n\\rangle}^\\text{n terms} }")+"",ur,vn,Ms,Va,Zr=f("k")+"",Ba,Ca,Us=f("e^{\\frac{2 \\pi i x y_k}{2^k}}|y_k\\rangle")+"",Be,Jr,ea,mr,fr,Xr=f("e^{\\frac{2 \\pi i x \\cdot 0}{2^k}}|0\\rangle = 1 \\cdot |0\\rangle = |0\\rangle")+"",co,pr,es=f("y_k = 0")+"",_o,Ss,ta,ts,bo=f("e^{\\frac{2 \\pi i x \\cdot 1}{2^k}}|1\\rangle = e^{\\frac{2 \\pi i x }{2^k}}|1\\rangle")+"",cr,ns,vo=f("y_k = 1")+"",_r,Os,dr,br,Gs,Dn,vr,as,wo=f("n")+"",wr,qs,As,gr,Hs,Ls,yr,Ks,Ra,$r,xs,Is,Nr,Ys,kr,$a,fi=f("|\\psi\\rangle = \\displaystyle{ \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 \\left( e^{\\frac{2 \\pi i x y_1}{2^1}} \\cdot \\ldots \\cdot e^{\\frac{2 \\pi i x y_n}{2^n}} \\right) \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right)}")+"",rs,Na,ss,go=f("|\\psi\\rangle = \\displaystyle{ = \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 \\prod_{k=1}^n e^{\\frac{2 \\pi i x y_k}{2^k}} \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right)}")+"",Ga,os,Fs,Or,ka,Er,Zs=f("|\\psi\\rangle = \\displaystyle{ = \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 e^{\\sum_{k=1}^n \\frac{2 \\pi i x y_k}{2^k}} \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right)}")+"",wn,ca,Tr,is,yo=f("2 \\pi i x")+"",Pr,ls,$o=f("k")+"",Mr,Js,Sr,Ea,pi=f("|\\psi\\rangle = \\displaystyle{ = \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 e^{2 \\pi i x \\sum_{k=1}^n \\frac{y_k}{2^k}} \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right)}")+"",hs,Yt,qr,Ar,Xs=f("\\displaystyle{ \\sum_{k=1}^n \\frac{y_k}{2^k}}")+"",Jt,Hr,us=f("\\frac{y}{N}")+"",No,Lr,ms=f("y_k")+"",ko,xr,fs=f("y")+"",Eo,Ir,Fr=f("y")+"",Qs,Ta,ci=f("|y\\rangle = |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle")+"",zs,Ka,ps,Qr,eo=f("|\\psi\\rangle = \\displaystyle{ \\frac{1}{\\sqrt{N}} \\sum_{y=0}^{N - 1} e^{\\frac{2 \\pi i x y}{N}} |y\\rangle}")+"",gn,zr,Vr,to,ln,Br,cs,To=f("x")+"",Cr,_s,Po=f("e^{\\frac{2 \\pi i x y}{N}}")+"",Rr,ds,Mo=f("y")+"",bs,jr,Fo=f("x")+"",E,fe,yn=f("x")+"",vs,no,So,Qo;return Q=new mt({props:{hovertext:qu,$$slots:{default:[Hu]},$$scope:{ctx:e}}}),qe=new mt({props:{hovertext:Au,$$slots:{default:[Lu]},$$scope:{ctx:e}}}),{c(){n=l("h2"),r=s("Quantum Fourier transform (QFT)"),i=M(),m=l("h2"),d=s("Representing numbers with qubits"),_=M(),p=l("p"),v=s("Consider "),b=l("span"),w=s(" qubits aranged in a row, each of which are in either of the two basis states "),N=l("span"),I=s(" or "),X=l("span"),H=s(". With a little combinatorics, we can see that there are "),j=l("span"),A=s(" such combinations. For ease of notation, let "),z=l("span"),te=s("."),x=M(),J=l("p"),ne=s("For our purposes, we'll interpret these combinations as the "),Te(Q.$$.fragment),P=s(" of the numbers from "),L=l("span"),Y=s(" to "),F=l("span"),$e=s(". For example, let "),ae=l("span"),le=s(" and the qubits be in the following state: "),Z=l("span"),oe=s('. We can "read out" this state as the binary number '),ue=l("span"),He=s(", which is equal to "),ze=l("span"),ge=s("."),Fe=M(),Re=l("h2"),ot=s("QFT on the qubit level"),Le=M(),ce=l("p"),qt=s("The "),Te(qe.$$.fragment),ie=s(" is an operation that modifies the states of qubits in a particular way. (How this is done in practice is another topic, for now we'll only look at the mathematics.) Namely, if "),me=l("span"),At=s(" is the number represented by the qubits (in the example above, "),W=l("span"),G=s("), the QFT sets the state of the "),gt=l("span"),bt=s("-th qubit to "),yt=l("span"),ft=s(". In other words, it sets "),xt=l("span"),$t=s(" and "),It=l("span"),lt=s(" for all "),jt=l("span"),be=s("."),ct=M(),Qe=l("p"),Pt=s("Notice that even though "),je=l("span"),kt=s(", the associated measurement probabilities "),Dt=l("span"),Wt=s(" for all "),Ft=l("span"),Ut=s(". This is because the "),at=l("span"),et=s(" term - as we saw in the section about the Bloch-sphere - indicates the qubit's phase and does not affect measurement probabilities."),vt=M(),ke=l("p"),Mt=s("Just like the state of a single qubit can be the linear combination of "),ht=l("span"),tt=s(" and "),Ot=l("span"),St=s(", the state of these "),sn=l("span"),un=s(" qubits is essentially the linear combination of all the possible combinations of the "),Ve=l("span"),We=s(" basis states - which, as we saw in the previous section, represent the integers from "),nt=l("span"),rt=s(" to "),Bt=l("span"),kn=s(". Take a moment to appreciate this fact. We applied an operator to "),Ie=l("span"),mn=s(" qubits to obtain a quantum system that represents "),ve=l("span"),fn=s(" numbers at the same time and is capable of performing computations on all of those numbers in parallel! This parallelism is one of the main properties that make quantum computers so powerful compared to classical ones. Since both basis states are measured with a probability of "),Pn=l("span"),we=s(" for each qubit, any particular combination of the "),_t=l("span"),pe=s(" basis states is measured with a probability of "),pn=l("span"),Qt=s(". What differs across these combinations - and is an essential component of the QFT - is the phase, as we'll see in the next section."),cn=M(),_n=l("h2"),ba=s("QFT on the representation level"),dn=M(),tn=l("p"),va=s("Let's denote the state of the entire sequence of qubits with "),wt=l("span"),Ct=s(" and write it out as shown below:"),xn=M(),In=l("p"),sa=l("span"),wa=M(),Ze=l("p"),ut=s("We can factor out the "),Fn=l("span"),Rn=s(" term to get:"),Gn=M(),ia=l("p"),bn=l("span"),Ma=M(),ye=l("p"),nn=s("Let "),la=l("span"),Qn=s(" denote the binary number represented by the "),Kn=l("span"),ua=s(" qubits in a given basis state, and "),ma=l("span"),pa=s(" the "),Sa=l("span"),qa=s("-th digit of "),jn=l("span"),Ee=s(". In other words, "),he=l("span"),Yn=s("\xA0if the "),ga=l("span"),Zn=s("-th qubit is in the "),ya=l("span"),Jn=s(" state, and "),on=l("span"),Aa=s("\xA0if it's in the "),zn=l("span"),Ha=s(" state for all "),sr=l("span"),La=s(". Recalling our knowledge of binary numbers, we can write "),or=l("span"),xa=s(" as the weighted sum of its digits: "),ir=l("span"),Ia=s(". Notice that the "),lr=l("span"),an=s(" term within the sum does not depend on "),hr=l("span"),Sn=s(" and so we can factor it out: "),Kt=l("span"),xe=s(". Remember this step, as it is going to be important shortly!"),Kr=M(),Fa=l("p"),Qa=s("Using this new notation, we can write the state of the qubits in the form of a sum instead of a product:"),Yr=M(),za=l("p"),Xn=l("span"),ur=M(),vn=l("p"),Ms=s("In case you're wondering how the formula above can be derived from the definition we started with, note that for all "),Va=l("span"),Ba=s(", the term "),Ca=l("span"),Be=s(" equals"),Jr=M(),ea=l("ul"),mr=l("li"),fr=l("span"),co=s(" if "),pr=l("span"),_o=s(", and"),Ss=M(),ta=l("li"),ts=l("span"),cr=s(" if "),ns=l("span"),_r=s(","),Os=M(),dr=l("p"),br=s("which is exactly how we defined the QFT."),Gs=M(),Dn=l("p"),vr=s("The "),as=l("span"),wr=s(" embedded summations might seem confusing at first, but what they actually do is iterate over all possible combinations of basis states. In the final sum, these are included with "),qs=l("em"),As=s("equal weight"),gr=s(" (meaning they are measured with equal probability), but the composing basis states will have "),Hs=l("em"),Ls=s("different phases"),yr=s(" in each combination, as already mentioned at the end of the previous section."),Ks=M(),Ra=l("p"),$r=s("Let's now define the "),xs=l("em"),Is=s("phase of the combination"),Nr=s(" as the product of the phases of individual qubits within that combination, and factor it out as shown below:"),Ys=M(),kr=l("p"),$a=l("span"),rs=M(),Na=l("p"),ss=l("span"),Ga=M(),os=l("p"),Fs=s("After making use of the product rule for exponents..."),Or=M(),ka=l("p"),Er=l("span"),wn=M(),ca=l("p"),Tr=s("and factoring out the "),is=l("span"),Pr=s(" term that does not depend on "),ls=l("span"),Mr=s(", we arrive at the formula below:"),Js=M(),Sr=l("p"),Ea=l("span"),hs=M(),Yt=l("p"),qr=s("Recall what I asked you to keep in mind a few paragraphs ago, and notice that the sum in the exponential "),Ar=l("span"),Jt=s(" is actually equal to "),Hr=l("span"),No=s(". Thus, we can now replace the individual "),Lr=l("span"),ko=s(" digits with the number "),xr=l("span"),Eo=s(" itself and the multiple, embedded summations with a single one that iterates over all possible values of "),Ir=l("span"),Qs=s(". In addition, let's abbreviate the notation we used for the product of the basis states with "),Ta=l("span"),zs=s(", to finally obtain this way more elegant formula for the QFT:"),Ka=M(),ps=l("p"),Qr=l("span"),gn=M(),zr=l("p"),Vr=s("The elegance comes from the fact that it shows what the qubits represent on a symbolic level, as opposed to the expression we started with that is a direct insight into the bit-level implementation."),to=M(),ln=l("p"),Br=s("Now let's illustrate visually what the formula above actually means. To give a proper intuition, we'll look at multiple systems with increasing number of qubits. For a chosen value of "),cs=l("span"),Cr=s(", the plot below shows the "),_s=l("span"),Rr=s(" terms for all possible values of "),ds=l("span"),bs=s(" that these systems can represent. Because this term is a complex number, the geometric representation of which would require two dimensions, the real and imaginary components are shown separately. Notice that as the number of qubits increases, the plots gradually turn into sinusoidal wave patterns. Furthermore, the number of peaks of these waves - their frequency - equals "),jr=l("span"),E=s(", which you can verify by modifying "),fe=l("span"),vs=s(" with the help of the slider.")},l(y){n=h(y,"H2",{});var C=u(n);r=o(C,"Quantum Fourier transform (QFT)"),C.forEach(a),i=S(y),m=h(y,"H2",{});var Vs=u(m);d=o(Vs,"Representing numbers with qubits"),Vs.forEach(a),_=S(y),p=h(y,"P",{});var Vn=u(p);v=o(Vn,"Consider "),b=h(Vn,"SPAN",{});var _i=u(b);_i.forEach(a),w=o(Vn," qubits aranged in a row, each of which are in either of the two basis states "),N=h(Vn,"SPAN",{});var di=u(N);di.forEach(a),I=o(Vn," or "),X=h(Vn,"SPAN",{});var bi=u(X);bi.forEach(a),H=o(Vn,". With a little combinatorics, we can see that there are "),j=h(Vn,"SPAN",{});var vi=u(j);vi.forEach(a),A=o(Vn," such combinations. For ease of notation, let "),z=h(Vn,"SPAN",{});var wi=u(z);wi.forEach(a),te=o(Vn,"."),Vn.forEach(a),x=S(y),J=h(y,"P",{});var qn=u(J);ne=o(qn,"For our purposes, we'll interpret these combinations as the "),Pe(Q.$$.fragment,qn),P=o(qn," of the numbers from "),L=h(qn,"SPAN",{});var gi=u(L);gi.forEach(a),Y=o(qn," to "),F=h(qn,"SPAN",{});var Xt=u(F);Xt.forEach(a),$e=o(qn,". For example, let "),ae=h(qn,"SPAN",{});var yi=u(ae);yi.forEach(a),le=o(qn," and the qubits be in the following state: "),Z=h(qn,"SPAN",{});var $i=u(Z);$i.forEach(a),oe=o(qn,'. We can "read out" this state as the binary number '),ue=h(qn,"SPAN",{});var Ni=u(ue);Ni.forEach(a),He=o(qn,", which is equal to "),ze=h(qn,"SPAN",{});var ki=u(ze);ki.forEach(a),ge=o(qn,"."),qn.forEach(a),Fe=S(y),Re=h(y,"H2",{});var zo=u(Re);ot=o(zo,"QFT on the qubit level"),zo.forEach(a),Le=S(y),ce=h(y,"P",{});var hn=u(ce);qt=o(hn,"The "),Pe(qe.$$.fragment,hn),ie=o(hn," is an operation that modifies the states of qubits in a particular way. (How this is done in practice is another topic, for now we'll only look at the mathematics.) Namely, if "),me=h(hn,"SPAN",{});var Ei=u(me);Ei.forEach(a),At=o(hn," is the number represented by the qubits (in the example above, "),W=h(hn,"SPAN",{});var Ti=u(W);Ti.forEach(a),G=o(hn,"), the QFT sets the state of the "),gt=h(hn,"SPAN",{});var Pi=u(gt);Pi.forEach(a),bt=o(hn,"-th qubit to "),yt=h(hn,"SPAN",{});var ao=u(yt);ao.forEach(a),ft=o(hn,". In other words, it sets "),xt=h(hn,"SPAN",{});var Mi=u(xt);Mi.forEach(a),$t=o(hn," and "),It=h(hn,"SPAN",{});var Vo=u(It);Vo.forEach(a),lt=o(hn," for all "),jt=h(hn,"SPAN",{});var Bo=u(jt);Bo.forEach(a),be=o(hn,"."),hn.forEach(a),ct=S(y),Qe=h(y,"P",{});var $n=u(Qe);Pt=o($n,"Notice that even though "),je=h($n,"SPAN",{});var Si=u(je);Si.forEach(a),kt=o($n,", the associated measurement probabilities "),Dt=h($n,"SPAN",{});var qi=u(Dt);qi.forEach(a),Wt=o($n," for all "),Ft=h($n,"SPAN",{});var Ai=u(Ft);Ai.forEach(a),Ut=o($n,". This is because the "),at=h($n,"SPAN",{});var ja=u(at);ja.forEach(a),et=o($n," term - as we saw in the section about the Bloch-sphere - indicates the qubit's phase and does not affect measurement probabilities."),$n.forEach(a),vt=S(y),ke=h(y,"P",{});var zt=u(ke);Mt=o(zt,"Just like the state of a single qubit can be the linear combination of "),ht=h(zt,"SPAN",{});var Hi=u(ht);Hi.forEach(a),tt=o(zt," and "),Ot=h(zt,"SPAN",{});var Li=u(Ot);Li.forEach(a),St=o(zt,", the state of these "),sn=h(zt,"SPAN",{});var xi=u(sn);xi.forEach(a),un=o(zt," qubits is essentially the linear combination of all the possible combinations of the "),Ve=h(zt,"SPAN",{});var Co=u(Ve);Co.forEach(a),We=o(zt," basis states - which, as we saw in the previous section, represent the integers from "),nt=h(zt,"SPAN",{});var Da=u(nt);Da.forEach(a),rt=o(zt," to "),Bt=h(zt,"SPAN",{});var Ii=u(Bt);Ii.forEach(a),kn=o(zt,". Take a moment to appreciate this fact. We applied an operator to "),Ie=h(zt,"SPAN",{});var Fi=u(Ie);Fi.forEach(a),mn=o(zt," qubits to obtain a quantum system that represents "),ve=h(zt,"SPAN",{});var Qi=u(ve);Qi.forEach(a),fn=o(zt," numbers at the same time and is capable of performing computations on all of those numbers in parallel! This parallelism is one of the main properties that make quantum computers so powerful compared to classical ones. Since both basis states are measured with a probability of "),Pn=h(zt,"SPAN",{});var zi=u(Pn);zi.forEach(a),we=o(zt," for each qubit, any particular combination of the "),_t=h(zt,"SPAN",{});var An=u(_t);An.forEach(a),pe=o(zt," basis states is measured with a probability of "),pn=h(zt,"SPAN",{});var Vi=u(pn);Vi.forEach(a),Qt=o(zt,". What differs across these combinations - and is an essential component of the QFT - is the phase, as we'll see in the next section."),zt.forEach(a),cn=S(y),_n=h(y,"H2",{});var Ro=u(_n);ba=o(Ro,"QFT on the representation level"),Ro.forEach(a),dn=S(y),tn=h(y,"P",{});var ro=u(tn);va=o(ro,"Let's denote the state of the entire sequence of qubits with "),wt=h(ro,"SPAN",{});var Bi=u(wt);Bi.forEach(a),Ct=o(ro," and write it out as shown below:"),ro.forEach(a),xn=S(y),In=h(y,"P",{});var jo=u(In);sa=h(jo,"SPAN",{});var Ci=u(sa);Ci.forEach(a),jo.forEach(a),wa=S(y),Ze=h(y,"P",{});var so=u(Ze);ut=o(so,"We can factor out the "),Fn=h(so,"SPAN",{});var Do=u(Fn);Do.forEach(a),Rn=o(so," term to get:"),so.forEach(a),Gn=S(y),ia=h(y,"P",{});var Zt=u(ia);bn=h(Zt,"SPAN",{});var Ri=u(bn);Ri.forEach(a),Zt.forEach(a),Ma=S(y),ye=h(y,"P",{});var Je=u(ye);nn=o(Je,"Let "),la=h(Je,"SPAN",{});var ji=u(la);ji.forEach(a),Qn=o(Je," denote the binary number represented by the "),Kn=h(Je,"SPAN",{});var Di=u(Kn);Di.forEach(a),ua=o(Je," qubits in a given basis state, and "),ma=h(Je,"SPAN",{});var Wi=u(ma);Wi.forEach(a),pa=o(Je," the "),Sa=h(Je,"SPAN",{});var Ui=u(Sa);Ui.forEach(a),qa=o(Je,"-th digit of "),jn=h(Je,"SPAN",{});var Oi=u(jn);Oi.forEach(a),Ee=o(Je,". In other words, "),he=h(Je,"SPAN",{});var Gi=u(he);Gi.forEach(a),Yn=o(Je,"\xA0if the "),ga=h(Je,"SPAN",{});var Ki=u(ga);Ki.forEach(a),Zn=o(Je,"-th qubit is in the "),ya=h(Je,"SPAN",{});var Wa=u(ya);Wa.forEach(a),Jn=o(Je," state, and "),on=h(Je,"SPAN",{});var Yi=u(on);Yi.forEach(a),Aa=o(Je,"\xA0if it's in the "),zn=h(Je,"SPAN",{});var Zi=u(zn);Zi.forEach(a),Ha=o(Je," state for all "),sr=h(Je,"SPAN",{});var Ji=u(sr);Ji.forEach(a),La=o(Je,". Recalling our knowledge of binary numbers, we can write "),or=h(Je,"SPAN",{});var Xi=u(or);Xi.forEach(a),xa=o(Je," as the weighted sum of its digits: "),ir=h(Je,"SPAN",{});var Wo=u(ir);Wo.forEach(a),Ia=o(Je,". Notice that the "),lr=h(Je,"SPAN",{});var Xe=u(lr);Xe.forEach(a),an=o(Je," term within the sum does not depend on "),hr=h(Je,"SPAN",{});var el=u(hr);el.forEach(a),Sn=o(Je," and so we can factor it out: "),Kt=h(Je,"SPAN",{});var tl=u(Kt);tl.forEach(a),xe=o(Je,". Remember this step, as it is going to be important shortly!"),Je.forEach(a),Kr=S(y),Fa=h(y,"P",{});var Uo=u(Fa);Qa=o(Uo,"Using this new notation, we can write the state of the qubits in the form of a sum instead of a product:"),Uo.forEach(a),Yr=S(y),za=h(y,"P",{});var Oo=u(za);Xn=h(Oo,"SPAN",{});var nl=u(Xn);nl.forEach(a),Oo.forEach(a),ur=S(y),vn=h(y,"P",{});var ws=u(vn);Ms=o(ws,"In case you're wondering how the formula above can be derived from the definition we started with, note that for all "),Va=h(ws,"SPAN",{});var al=u(Va);al.forEach(a),Ba=o(ws,", the term "),Ca=h(ws,"SPAN",{});var rl=u(Ca);rl.forEach(a),Be=o(ws," equals"),ws.forEach(a),Jr=S(y),ea=h(y,"UL",{});var oo=u(ea);mr=h(oo,"LI",{});var Bs=u(mr);fr=h(Bs,"SPAN",{});var sl=u(fr);sl.forEach(a),co=o(Bs," if "),pr=h(Bs,"SPAN",{});var ol=u(pr);ol.forEach(a),_o=o(Bs,", and"),Bs.forEach(a),Ss=S(oo),ta=h(oo,"LI",{});var Cs=u(ta);ts=h(Cs,"SPAN",{});var il=u(ts);il.forEach(a),cr=o(Cs," if "),ns=h(Cs,"SPAN",{});var ll=u(ns);ll.forEach(a),_r=o(Cs,","),Cs.forEach(a),oo.forEach(a),Os=S(y),dr=h(y,"P",{});var Go=u(dr);br=o(Go,"which is exactly how we defined the QFT."),Go.forEach(a),Gs=S(y),Dn=h(y,"P",{});var Ya=u(Dn);vr=o(Ya,"The "),as=h(Ya,"SPAN",{});var Ua=u(as);Ua.forEach(a),wr=o(Ya," embedded summations might seem confusing at first, but what they actually do is iterate over all possible combinations of basis states. In the final sum, these are included with "),qs=h(Ya,"EM",{});var Ko=u(qs);As=o(Ko,"equal weight"),Ko.forEach(a),gr=o(Ya," (meaning they are measured with equal probability), but the composing basis states will have "),Hs=h(Ya,"EM",{});var Yo=u(Hs);Ls=o(Yo,"different phases"),Yo.forEach(a),yr=o(Ya," in each combination, as already mentioned at the end of the previous section."),Ya.forEach(a),Ks=S(y),Ra=h(y,"P",{});var io=u(Ra);$r=o(io,"Let's now define the "),xs=h(io,"EM",{});var Zo=u(xs);Is=o(Zo,"phase of the combination"),Zo.forEach(a),Nr=o(io," as the product of the phases of individual qubits within that combination, and factor it out as shown below:"),io.forEach(a),Ys=S(y),kr=h(y,"P",{});var qo=u(kr);$a=h(qo,"SPAN",{});var Wn=u($a);Wn.forEach(a),qo.forEach(a),rs=S(y),Na=h(y,"P",{});var Jo=u(Na);ss=h(Jo,"SPAN",{});var hl=u(ss);hl.forEach(a),Jo.forEach(a),Ga=S(y),os=h(y,"P",{});var Xo=u(os);Fs=o(Xo,"After making use of the product rule for exponents..."),Xo.forEach(a),Or=S(y),ka=h(y,"P",{});var ei=u(ka);Er=h(ei,"SPAN",{});var ul=u(Er);ul.forEach(a),ei.forEach(a),wn=S(y),ca=h(y,"P",{});var Bn=u(ca);Tr=o(Bn,"and factoring out the "),is=h(Bn,"SPAN",{});var ml=u(is);ml.forEach(a),Pr=o(Bn," term that does not depend on "),ls=h(Bn,"SPAN",{});var fl=u(ls);fl.forEach(a),Mr=o(Bn,", we arrive at the formula below:"),Bn.forEach(a),Js=S(y),Sr=h(y,"P",{});var ti=u(Sr);Ea=h(ti,"SPAN",{});var pl=u(Ea);pl.forEach(a),ti.forEach(a),hs=S(y),Yt=h(y,"P",{});var _a=u(Yt);qr=o(_a,"Recall what I asked you to keep in mind a few paragraphs ago, and notice that the sum in the exponential "),Ar=h(_a,"SPAN",{});var vh=u(Ar);vh.forEach(a),Jt=o(_a," is actually equal to "),Hr=h(_a,"SPAN",{});var wh=u(Hr);wh.forEach(a),No=o(_a,". Thus, we can now replace the individual "),Lr=h(_a,"SPAN",{});var gh=u(Lr);gh.forEach(a),ko=o(_a," digits with the number "),xr=h(_a,"SPAN",{});var yh=u(xr);yh.forEach(a),Eo=o(_a," itself and the multiple, embedded summations with a single one that iterates over all possible values of "),Ir=h(_a,"SPAN",{});var $h=u(Ir);$h.forEach(a),Qs=o(_a,". In addition, let's abbreviate the notation we used for the product of the basis states with "),Ta=h(_a,"SPAN",{});var Nh=u(Ta);Nh.forEach(a),zs=o(_a,", to finally obtain this way more elegant formula for the QFT:"),_a.forEach(a),Ka=S(y),ps=h(y,"P",{});var Hl=u(ps);Qr=h(Hl,"SPAN",{});var kh=u(Qr);kh.forEach(a),Hl.forEach(a),gn=S(y),zr=h(y,"P",{});var Ll=u(zr);Vr=o(Ll,"The elegance comes from the fact that it shows what the qubits represent on a symbolic level, as opposed to the expression we started with that is a direct insight into the bit-level implementation."),Ll.forEach(a),to=S(y),ln=h(y,"P",{});var Oa=u(ln);Br=o(Oa,"Now let's illustrate visually what the formula above actually means. To give a proper intuition, we'll look at multiple systems with increasing number of qubits. For a chosen value of "),cs=h(Oa,"SPAN",{});var Eh=u(cs);Eh.forEach(a),Cr=o(Oa,", the plot below shows the "),_s=h(Oa,"SPAN",{});var Th=u(_s);Th.forEach(a),Rr=o(Oa," terms for all possible values of "),ds=h(Oa,"SPAN",{});var Ph=u(ds);Ph.forEach(a),bs=o(Oa," that these systems can represent. Because this term is a complex number, the geometric representation of which would require two dimensions, the real and imaginary components are shown separately. Notice that as the number of qubits increases, the plots gradually turn into sinusoidal wave patterns. Furthermore, the number of peaks of these waves - their frequency - equals "),jr=h(Oa,"SPAN",{});var Mh=u(jr);Mh.forEach(a),E=o(Oa,", which you can verify by modifying "),fe=h(Oa,"SPAN",{});var Sh=u(fe);Sh.forEach(a),vs=o(Oa," with the help of the slider."),Oa.forEach(a)},m(y,C){g(y,n,C),t(n,r),g(y,i,C),g(y,m,C),t(m,d),g(y,_,C),g(y,p,C),t(p,v),t(p,b),b.innerHTML=k,t(p,w),t(p,N),N.innerHTML=$,t(p,I),t(p,X),X.innerHTML=O,t(p,H),t(p,j),j.innerHTML=V,t(p,A),t(p,z),z.innerHTML=q,t(p,te),g(y,x,C),g(y,J,C),t(J,ne),Me(Q,J,null),t(J,P),t(J,L),L.innerHTML=re,t(J,Y),t(J,F),F.innerHTML=U,t(J,$e),t(J,ae),ae.innerHTML=Ae,t(J,le),t(J,Z),Z.innerHTML=T,t(J,oe),t(J,ue),ue.innerHTML=st,t(J,He),t(J,ze),ze.innerHTML=dt,t(J,ge),g(y,Fe,C),g(y,Re,C),t(Re,ot),g(y,Le,C),g(y,ce,C),t(ce,qt),Me(qe,ce,null),t(ce,ie),t(ce,me),me.innerHTML=Ke,t(ce,At),t(ce,W),W.innerHTML=de,t(ce,G),t(ce,gt),gt.innerHTML=Oe,t(ce,bt),t(ce,yt),yt.innerHTML=Ye,t(ce,ft),t(ce,xt),xt.innerHTML=it,t(ce,$t),t(ce,It),It.innerHTML=pt,t(ce,lt),t(ce,jt),jt.innerHTML=D,t(ce,be),g(y,ct,C),g(y,Qe,C),t(Qe,Pt),t(Qe,je),je.innerHTML=Nt,t(Qe,kt),t(Qe,Dt),Dt.innerHTML=Ht,t(Qe,Wt),t(Qe,Ft),Ft.innerHTML=Ge,t(Qe,Ut),t(Qe,at),at.innerHTML=Ce,t(Qe,et),g(y,vt,C),g(y,ke,C),t(ke,Mt),t(ke,ht),ht.innerHTML=Nn,t(ke,tt),t(ke,Ot),Ot.innerHTML=rn,t(ke,St),t(ke,sn),sn.innerHTML=en,t(ke,un),t(ke,Ve),Ve.innerHTML=se,t(ke,We),t(ke,nt),nt.innerHTML=Hn,t(ke,rt),t(ke,Bt),Bt.innerHTML=Cn,t(ke,kn),t(ke,Ie),Ie.innerHTML=En,t(ke,mn),t(ke,ve),ve.innerHTML=Tn,t(ke,fn),t(ke,Pn),Pn.innerHTML=Ln,t(ke,we),t(ke,_t),_t.innerHTML=Mn,t(ke,pe),t(ke,pn),pn.innerHTML=Ue,t(ke,Qt),g(y,cn,C),g(y,_n,C),t(_n,ba),g(y,dn,C),g(y,tn,C),t(tn,va),t(tn,wt),wt.innerHTML=On,t(tn,Ct),g(y,xn,C),g(y,In,C),t(In,sa),sa.innerHTML=oa,g(y,wa,C),g(y,Ze,C),t(Ze,ut),t(Ze,Fn),Fn.innerHTML=Ur,t(Ze,Rn),g(y,Gn,C),g(y,ia,C),t(ia,bn),bn.innerHTML=Pa,g(y,Ma,C),g(y,ye,C),t(ye,nn),t(ye,la),la.innerHTML=ha,t(ye,Qn),t(ye,Kn),Kn.innerHTML=Gt,t(ye,ua),t(ye,ma),ma.innerHTML=fa,t(ye,pa),t(ye,Sa),Sa.innerHTML=tr,t(ye,qa),t(ye,jn),jn.innerHTML=B,t(ye,Ee),t(ye,he),he.innerHTML=nr,t(ye,Yn),t(ye,ga),ga.innerHTML=ar,t(ye,Zn),t(ye,ya),ya.innerHTML=rr,t(ye,Jn),t(ye,on),on.innerHTML=$s,t(ye,Aa),t(ye,zn),zn.innerHTML=Ns,t(ye,Ha),t(ye,sr),sr.innerHTML=Rt,t(ye,La),t(ye,or),or.innerHTML=ks,t(ye,xa),t(ye,ir),ir.innerHTML=Es,t(ye,Ia),t(ye,lr),lr.innerHTML=Gr,t(ye,an),t(ye,hr),hr.innerHTML=Ts,t(ye,Sn),t(ye,Kt),Kt.innerHTML=Ps,t(ye,xe),g(y,Kr,C),g(y,Fa,C),t(Fa,Qa),g(y,Yr,C),g(y,za,C),t(za,Xn),Xn.innerHTML=po,g(y,ur,C),g(y,vn,C),t(vn,Ms),t(vn,Va),Va.innerHTML=Zr,t(vn,Ba),t(vn,Ca),Ca.innerHTML=Us,t(vn,Be),g(y,Jr,C),g(y,ea,C),t(ea,mr),t(mr,fr),fr.innerHTML=Xr,t(mr,co),t(mr,pr),pr.innerHTML=es,t(mr,_o),t(ea,Ss),t(ea,ta),t(ta,ts),ts.innerHTML=bo,t(ta,cr),t(ta,ns),ns.innerHTML=vo,t(ta,_r),g(y,Os,C),g(y,dr,C),t(dr,br),g(y,Gs,C),g(y,Dn,C),t(Dn,vr),t(Dn,as),as.innerHTML=wo,t(Dn,wr),t(Dn,qs),t(qs,As),t(Dn,gr),t(Dn,Hs),t(Hs,Ls),t(Dn,yr),g(y,Ks,C),g(y,Ra,C),t(Ra,$r),t(Ra,xs),t(xs,Is),t(Ra,Nr),g(y,Ys,C),g(y,kr,C),t(kr,$a),$a.innerHTML=fi,g(y,rs,C),g(y,Na,C),t(Na,ss),ss.innerHTML=go,g(y,Ga,C),g(y,os,C),t(os,Fs),g(y,Or,C),g(y,ka,C),t(ka,Er),Er.innerHTML=Zs,g(y,wn,C),g(y,ca,C),t(ca,Tr),t(ca,is),is.innerHTML=yo,t(ca,Pr),t(ca,ls),ls.innerHTML=$o,t(ca,Mr),g(y,Js,C),g(y,Sr,C),t(Sr,Ea),Ea.innerHTML=pi,g(y,hs,C),g(y,Yt,C),t(Yt,qr),t(Yt,Ar),Ar.innerHTML=Xs,t(Yt,Jt),t(Yt,Hr),Hr.innerHTML=us,t(Yt,No),t(Yt,Lr),Lr.innerHTML=ms,t(Yt,ko),t(Yt,xr),xr.innerHTML=fs,t(Yt,Eo),t(Yt,Ir),Ir.innerHTML=Fr,t(Yt,Qs),t(Yt,Ta),Ta.innerHTML=ci,t(Yt,zs),g(y,Ka,C),g(y,ps,C),t(ps,Qr),Qr.innerHTML=eo,g(y,gn,C),g(y,zr,C),t(zr,Vr),g(y,to,C),g(y,ln,C),t(ln,Br),t(ln,cs),cs.innerHTML=To,t(ln,Cr),t(ln,_s),_s.innerHTML=Po,t(ln,Rr),t(ln,ds),ds.innerHTML=Mo,t(ln,bs),t(ln,jr),jr.innerHTML=Fo,t(ln,E),t(ln,fe),fe.innerHTML=yn,t(ln,vs),no=!0,So||(Qo=[c(b,"mouseenter",e[0]),c(N,"mouseenter",e[1]),c(X,"mouseenter",e[2]),c(j,"mouseenter",e[3]),c(z,"mouseenter",e[4]),c(L,"mouseenter",e[5]),c(F,"mouseenter",e[6]),c(ae,"mouseenter",e[7]),c(Z,"mouseenter",e[8]),c(ue,"mouseenter",e[9]),c(ze,"mouseenter",e[10]),c(me,"mouseenter",e[11]),c(W,"mouseenter",e[12]),c(gt,"mouseenter",e[13]),c(yt,"mouseenter",e[14]),c(xt,"mouseenter",e[15]),c(It,"mouseenter",e[16]),c(jt,"mouseenter",e[17]),c(je,"mouseenter",e[18]),c(Dt,"mouseenter",e[19]),c(Ft,"mouseenter",e[20]),c(at,"mouseenter",e[21]),c(ht,"mouseenter",e[22]),c(Ot,"mouseenter",e[23]),c(sn,"mouseenter",e[24]),c(Ve,"mouseenter",e[25]),c(nt,"mouseenter",e[26]),c(Bt,"mouseenter",e[27]),c(Ie,"mouseenter",e[28]),c(ve,"mouseenter",e[29]),c(Pn,"mouseenter",e[30]),c(_t,"mouseenter",e[31]),c(pn,"mouseenter",e[32]),c(wt,"mouseenter",e[33]),c(sa,"mouseenter",e[34]),c(Fn,"mouseenter",e[35]),c(bn,"mouseenter",e[36]),c(la,"mouseenter",e[37]),c(Kn,"mouseenter",e[38]),c(ma,"mouseenter",e[39]),c(Sa,"mouseenter",e[40]),c(jn,"mouseenter",e[41]),c(he,"mouseenter",e[42]),c(ga,"mouseenter",e[43]),c(ya,"mouseenter",e[44]),c(on,"mouseenter",e[45]),c(zn,"mouseenter",e[46]),c(sr,"mouseenter",e[47]),c(or,"mouseenter",e[48]),c(ir,"mouseenter",e[49]),c(lr,"mouseenter",e[50]),c(hr,"mouseenter",e[51]),c(Kt,"mouseenter",e[52]),c(Xn,"mouseenter",e[53]),c(Va,"mouseenter",e[54]),c(Ca,"mouseenter",e[55]),c(fr,"mouseenter",e[56]),c(pr,"mouseenter",e[57]),c(ts,"mouseenter",e[58]),c(ns,"mouseenter",e[59]),c(as,"mouseenter",e[60]),c($a,"mouseenter",e[61]),c(ss,"mouseenter",e[62]),c(Er,"mouseenter",e[63]),c(is,"mouseenter",e[64]),c(ls,"mouseenter",e[65]),c(Ea,"mouseenter",e[66]),c(Ar,"mouseenter",e[67]),c(Hr,"mouseenter",e[68]),c(Lr,"mouseenter",e[69]),c(xr,"mouseenter",e[70]),c(Ir,"mouseenter",e[71]),c(Ta,"mouseenter",e[72]),c(Qr,"mouseenter",e[73]),c(cs,"mouseenter",e[74]),c(_s,"mouseenter",e[75]),c(ds,"mouseenter",e[76]),c(jr,"mouseenter",e[77]),c(fe,"mouseenter",e[78])],So=!0)},p(y,C){const Vs={};C[2]&131072&&(Vs.$$scope={dirty:C,ctx:y}),Q.$set(Vs);const Vn={};C[2]&131072&&(Vn.$$scope={dirty:C,ctx:y}),qe.$set(Vn)},i(y){no||(_e(Q.$$.fragment,y),_e(qe.$$.fragment,y),no=!0)},o(y){Ne(Q.$$.fragment,y),Ne(qe.$$.fragment,y),no=!1},d(y){y&&a(n),y&&a(i),y&&a(m),y&&a(_),y&&a(p),y&&a(x),y&&a(J),Se(Q),y&&a(Fe),y&&a(Re),y&&a(Le),y&&a(ce),Se(qe),y&&a(ct),y&&a(Qe),y&&a(vt),y&&a(ke),y&&a(cn),y&&a(_n),y&&a(dn),y&&a(tn),y&&a(xn),y&&a(In),y&&a(wa),y&&a(Ze),y&&a(Gn),y&&a(ia),y&&a(Ma),y&&a(ye),y&&a(Kr),y&&a(Fa),y&&a(Yr),y&&a(za),y&&a(ur),y&&a(vn),y&&a(Jr),y&&a(ea),y&&a(Os),y&&a(dr),y&&a(Gs),y&&a(Dn),y&&a(Ks),y&&a(Ra),y&&a(Ys),y&&a(kr),y&&a(rs),y&&a(Na),y&&a(Ga),y&&a(os),y&&a(Or),y&&a(ka),y&&a(wn),y&&a(ca),y&&a(Js),y&&a(Sr),y&&a(hs),y&&a(Yt),y&&a(Ka),y&&a(ps),y&&a(gn),y&&a(zr),y&&a(to),y&&a(ln),So=!1,er(Qo)}}}function ee(e){console.log(e)}function Iu(e){return[()=>ee(["n"]),()=>ee([]),()=>ee([]),()=>ee(["t","s","m","n"]),()=>ee(["N","n"]),()=>ee([]),()=>ee(["N"]),()=>ee(["n"]),()=>ee([]),()=>ee([]),()=>ee([]),()=>ee(["x"]),()=>ee(["x"]),()=>ee(["k"]),()=>ee(["k","x"]),()=>ee(["k","\\alpha"]),()=>ee(["\\beta","k","x"]),()=>ee(["k","n"]),()=>ee(["\\beta","k","\\alpha"]),()=>ee(["\\beta","k","\\alpha"]),()=>ee(["k","n"]),()=>ee(["k","x"]),()=>ee([]),()=>ee([]),()=>ee(["n"]),()=>ee(["n"]),()=>ee([]),()=>ee(["N"]),()=>ee(["n"]),()=>ee(["n"]),()=>ee([]),()=>ee(["n"]),()=>ee(["t","s","m","N","r","n"]),()=>ee(["\\psi"]),()=>ee(["t","s","m","x","r","n","\\psi"]),()=>ee([]),()=>ee(["x","N","n","\\psi"]),()=>ee(["y"]),()=>ee(["n"]),()=>ee(["y","k"]),()=>ee(["k"]),()=>ee(["y"]),()=>ee(["y","k"]),()=>ee(["k"]),()=>ee([]),()=>ee(["y","k"]),()=>ee([]),()=>ee(["k","n"]),()=>ee(["y"]),()=>ee(["y","k","n"]),()=>ee(["n"]),()=>ee(["k"]),()=>ee(["y","N","k","n"]),()=>ee(["t","s","N","m","x","r","n","\\psi","y"]),()=>ee(["k"]),()=>ee(["y","k","x"]),()=>ee(["k","x"]),()=>ee(["y","k"]),()=>ee(["k","x"]),()=>ee(["y","k"]),()=>ee(["n"]),()=>ee(["N","x","n","\\psi","y"]),()=>ee(["N","x","k","n","\\psi","y"]),()=>ee(["N","x","k","n","\\psi","y"]),()=>ee(["x"]),()=>ee(["k"]),()=>ee(["N","x","k","n","\\psi","y"]),()=>ee(["y","k","n"]),()=>ee(["y","N"]),()=>ee(["y","k"]),()=>ee(["y"]),()=>ee(["y"]),()=>ee(["y","n"]),()=>ee(["y","x","N","\\psi"]),()=>ee(["x"]),()=>ee(["y","N","x"]),()=>ee(["y"]),()=>ee(["x"]),()=>ee(["x"])]}class Fu extends na{constructor(n){super(),aa(this,n,Iu,xu,ra,{},null,[-1,-1,-1])}}function oi(e,n){return e==null||n==null?NaN:e<n?-1:e>n?1:e>=n?0:NaN}function Qu(e,n){return e==null||n==null?NaN:n<e?-1:n>e?1:n>=e?0:NaN}function lh(e){let n,r,i;e.length!==2?(n=oi,r=(p,v)=>oi(e(p),v),i=(p,v)=>e(p)-v):(n=e===oi||e===Qu?e:zu,r=e,i=e);function m(p,v,b=0,k=p.length){if(b<k){if(n(v,v)!==0)return k;do{const w=b+k>>>1;r(p[w],v)<0?b=w+1:k=w}while(b<k)}return b}function d(p,v,b=0,k=p.length){if(b<k){if(n(v,v)!==0)return k;do{const w=b+k>>>1;r(p[w],v)<=0?b=w+1:k=w}while(b<k)}return b}function _(p,v,b=0,k=p.length){const w=m(p,v,b,k-1);return w>b&&i(p[w-1],v)>-i(p[w],v)?w-1:w}return{left:m,center:_,right:d}}function zu(){return 0}function Vu(e){return e===null?NaN:+e}const Bu=lh(oi),Cu=Bu.right;lh(Vu).center;const Ru=Cu;function Vl(e,n){let r,i;if(n===void 0)for(const m of e)m!=null&&(r===void 0?m>=m&&(r=i=m):(r>m&&(r=m),i<m&&(i=m)));else{let m=-1;for(let d of e)(d=n(d,++m,e))!=null&&(r===void 0?d>=d&&(r=i=d):(r>d&&(r=d),i<d&&(i=d)))}return[r,i]}var bl=Math.sqrt(50),vl=Math.sqrt(10),wl=Math.sqrt(2);function ju(e,n,r){var i,m=-1,d,_,p;if(n=+n,e=+e,r=+r,e===n&&r>0)return[e];if((i=n<e)&&(d=e,e=n,n=d),(p=hh(e,n,r))===0||!isFinite(p))return[];if(p>0){let v=Math.round(e/p),b=Math.round(n/p);for(v*p<e&&++v,b*p>n&&--b,_=new Array(d=b-v+1);++m<d;)_[m]=(v+m)*p}else{p=-p;let v=Math.round(e*p),b=Math.round(n*p);for(v/p<e&&++v,b/p>n&&--b,_=new Array(d=b-v+1);++m<d;)_[m]=(v+m)/p}return i&&_.reverse(),_}function hh(e,n,r){var i=(n-e)/Math.max(0,r),m=Math.floor(Math.log(i)/Math.LN10),d=i/Math.pow(10,m);return m>=0?(d>=bl?10:d>=vl?5:d>=wl?2:1)*Math.pow(10,m):-Math.pow(10,-m)/(d>=bl?10:d>=vl?5:d>=wl?2:1)}function Du(e,n,r){var i=Math.abs(n-e)/Math.max(0,r),m=Math.pow(10,Math.floor(Math.log(i)/Math.LN10)),d=i/m;return d>=bl?m*=10:d>=vl?m*=5:d>=wl&&(m*=2),n<e?-m:m}function Wu(e,n){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(n).domain(e);break}return this}function Ml(e,n,r){e.prototype=n.prototype=r,r.constructor=e}function uh(e,n){var r=Object.create(e.prototype);for(var i in n)r[i]=n[i];return r}function Io(){}var Ho=.7,ii=1/Ho,mo="\\s*([+-]?\\d+)\\s*",Lo="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",Wr="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Uu=/^#([0-9a-f]{3,8})$/,Ou=new RegExp(`^rgb\\(${mo},${mo},${mo}\\)$`),Gu=new RegExp(`^rgb\\(${Wr},${Wr},${Wr}\\)$`),Ku=new RegExp(`^rgba\\(${mo},${mo},${mo},${Lo}\\)$`),Yu=new RegExp(`^rgba\\(${Wr},${Wr},${Wr},${Lo}\\)$`),Zu=new RegExp(`^hsl\\(${Lo},${Wr},${Wr}\\)$`),Ju=new RegExp(`^hsla\\(${Lo},${Wr},${Wr},${Lo}\\)$`),Bl={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Ml(Io,xo,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:Cl,formatHex:Cl,formatHex8:Xu,formatHsl:em,formatRgb:Rl,toString:Rl});function Cl(){return this.rgb().formatHex()}function Xu(){return this.rgb().formatHex8()}function em(){return mh(this).formatHsl()}function Rl(){return this.rgb().formatRgb()}function xo(e){var n,r;return e=(e+"").trim().toLowerCase(),(n=Uu.exec(e))?(r=n[1].length,n=parseInt(n[1],16),r===6?jl(n):r===3?new da(n>>8&15|n>>4&240,n>>4&15|n&240,(n&15)<<4|n&15,1):r===8?ai(n>>24&255,n>>16&255,n>>8&255,(n&255)/255):r===4?ai(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|n&240,((n&15)<<4|n&15)/255):null):(n=Ou.exec(e))?new da(n[1],n[2],n[3],1):(n=Gu.exec(e))?new da(n[1]*255/100,n[2]*255/100,n[3]*255/100,1):(n=Ku.exec(e))?ai(n[1],n[2],n[3],n[4]):(n=Yu.exec(e))?ai(n[1]*255/100,n[2]*255/100,n[3]*255/100,n[4]):(n=Zu.exec(e))?Ul(n[1],n[2]/100,n[3]/100,1):(n=Ju.exec(e))?Ul(n[1],n[2]/100,n[3]/100,n[4]):Bl.hasOwnProperty(e)?jl(Bl[e]):e==="transparent"?new da(NaN,NaN,NaN,0):null}function jl(e){return new da(e>>16&255,e>>8&255,e&255,1)}function ai(e,n,r,i){return i<=0&&(e=n=r=NaN),new da(e,n,r,i)}function tm(e){return e instanceof Io||(e=xo(e)),e?(e=e.rgb(),new da(e.r,e.g,e.b,e.opacity)):new da}function gl(e,n,r,i){return arguments.length===1?tm(e):new da(e,n,r,i==null?1:i)}function da(e,n,r,i){this.r=+e,this.g=+n,this.b=+r,this.opacity=+i}Ml(da,gl,uh(Io,{brighter(e){return e=e==null?ii:Math.pow(ii,e),new da(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=e==null?Ho:Math.pow(Ho,e),new da(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new da(Ds(this.r),Ds(this.g),Ds(this.b),li(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Dl,formatHex:Dl,formatHex8:nm,formatRgb:Wl,toString:Wl}));function Dl(){return`#${js(this.r)}${js(this.g)}${js(this.b)}`}function nm(){return`#${js(this.r)}${js(this.g)}${js(this.b)}${js((isNaN(this.opacity)?1:this.opacity)*255)}`}function Wl(){const e=li(this.opacity);return`${e===1?"rgb(":"rgba("}${Ds(this.r)}, ${Ds(this.g)}, ${Ds(this.b)}${e===1?")":`, ${e})`}`}function li(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function Ds(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function js(e){return e=Ds(e),(e<16?"0":"")+e.toString(16)}function Ul(e,n,r,i){return i<=0?e=n=r=NaN:r<=0||r>=1?e=n=NaN:n<=0&&(e=NaN),new Xa(e,n,r,i)}function mh(e){if(e instanceof Xa)return new Xa(e.h,e.s,e.l,e.opacity);if(e instanceof Io||(e=xo(e)),!e)return new Xa;if(e instanceof Xa)return e;e=e.rgb();var n=e.r/255,r=e.g/255,i=e.b/255,m=Math.min(n,r,i),d=Math.max(n,r,i),_=NaN,p=d-m,v=(d+m)/2;return p?(n===d?_=(r-i)/p+(r<i)*6:r===d?_=(i-n)/p+2:_=(n-r)/p+4,p/=v<.5?d+m:2-d-m,_*=60):p=v>0&&v<1?0:_,new Xa(_,p,v,e.opacity)}function am(e,n,r,i){return arguments.length===1?mh(e):new Xa(e,n,r,i==null?1:i)}function Xa(e,n,r,i){this.h=+e,this.s=+n,this.l=+r,this.opacity=+i}Ml(Xa,am,uh(Io,{brighter(e){return e=e==null?ii:Math.pow(ii,e),new Xa(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=e==null?Ho:Math.pow(Ho,e),new Xa(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+(this.h<0)*360,n=isNaN(e)||isNaN(this.s)?0:this.s,r=this.l,i=r+(r<.5?r:1-r)*n,m=2*r-i;return new da(cl(e>=240?e-240:e+120,m,i),cl(e,m,i),cl(e<120?e+240:e-120,m,i),this.opacity)},clamp(){return new Xa(Ol(this.h),ri(this.s),ri(this.l),li(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const e=li(this.opacity);return`${e===1?"hsl(":"hsla("}${Ol(this.h)}, ${ri(this.s)*100}%, ${ri(this.l)*100}%${e===1?")":`, ${e})`}`}}));function Ol(e){return e=(e||0)%360,e<0?e+360:e}function ri(e){return Math.max(0,Math.min(1,e||0))}function cl(e,n,r){return(e<60?n+(r-n)*e/60:e<180?r:e<240?n+(r-n)*(240-e)/60:n)*255}const Sl=e=>()=>e;function rm(e,n){return function(r){return e+r*n}}function sm(e,n,r){return e=Math.pow(e,r),n=Math.pow(n,r)-e,r=1/r,function(i){return Math.pow(e+i*n,r)}}function om(e){return(e=+e)==1?fh:function(n,r){return r-n?sm(n,r,e):Sl(isNaN(n)?r:n)}}function fh(e,n){var r=n-e;return r?rm(e,r):Sl(isNaN(e)?n:e)}const Gl=function e(n){var r=om(n);function i(m,d){var _=r((m=gl(m)).r,(d=gl(d)).r),p=r(m.g,d.g),v=r(m.b,d.b),b=fh(m.opacity,d.opacity);return function(k){return m.r=_(k),m.g=p(k),m.b=v(k),m.opacity=b(k),m+""}}return i.gamma=e,i}(1);function im(e,n){n||(n=[]);var r=e?Math.min(n.length,e.length):0,i=n.slice(),m;return function(d){for(m=0;m<r;++m)i[m]=e[m]*(1-d)+n[m]*d;return i}}function lm(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function hm(e,n){var r=n?n.length:0,i=e?Math.min(r,e.length):0,m=new Array(i),d=new Array(r),_;for(_=0;_<i;++_)m[_]=ql(e[_],n[_]);for(;_<r;++_)d[_]=n[_];return function(p){for(_=0;_<i;++_)d[_]=m[_](p);return d}}function um(e,n){var r=new Date;return e=+e,n=+n,function(i){return r.setTime(e*(1-i)+n*i),r}}function hi(e,n){return e=+e,n=+n,function(r){return e*(1-r)+n*r}}function mm(e,n){var r={},i={},m;(e===null||typeof e!="object")&&(e={}),(n===null||typeof n!="object")&&(n={});for(m in n)m in e?r[m]=ql(e[m],n[m]):i[m]=n[m];return function(d){for(m in r)i[m]=r[m](d);return i}}var yl=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,_l=new RegExp(yl.source,"g");function fm(e){return function(){return e}}function pm(e){return function(n){return e(n)+""}}function cm(e,n){var r=yl.lastIndex=_l.lastIndex=0,i,m,d,_=-1,p=[],v=[];for(e=e+"",n=n+"";(i=yl.exec(e))&&(m=_l.exec(n));)(d=m.index)>r&&(d=n.slice(r,d),p[_]?p[_]+=d:p[++_]=d),(i=i[0])===(m=m[0])?p[_]?p[_]+=m:p[++_]=m:(p[++_]=null,v.push({i:_,x:hi(i,m)})),r=_l.lastIndex;return r<n.length&&(d=n.slice(r),p[_]?p[_]+=d:p[++_]=d),p.length<2?v[0]?pm(v[0].x):fm(n):(n=v.length,function(b){for(var k=0,w;k<n;++k)p[(w=v[k]).i]=w.x(b);return p.join("")})}function ql(e,n){var r=typeof n,i;return n==null||r==="boolean"?Sl(n):(r==="number"?hi:r==="string"?(i=xo(n))?(n=i,Gl):cm:n instanceof xo?Gl:n instanceof Date?um:lm(n)?im:Array.isArray(n)?hm:typeof n.valueOf!="function"&&typeof n.toString!="function"||isNaN(n)?mm:hi)(e,n)}function _m(e,n){return e=+e,n=+n,function(r){return Math.round(e*(1-r)+n*r)}}function dm(e){return function(){return e}}function bm(e){return+e}var Kl=[0,1];function uo(e){return e}function $l(e,n){return(n-=e=+e)?function(r){return(r-e)/n}:dm(isNaN(n)?NaN:.5)}function vm(e,n){var r;return e>n&&(r=e,e=n,n=r),function(i){return Math.max(e,Math.min(n,i))}}function wm(e,n,r){var i=e[0],m=e[1],d=n[0],_=n[1];return m<i?(i=$l(m,i),d=r(_,d)):(i=$l(i,m),d=r(d,_)),function(p){return d(i(p))}}function gm(e,n,r){var i=Math.min(e.length,n.length)-1,m=new Array(i),d=new Array(i),_=-1;for(e[i]<e[0]&&(e=e.slice().reverse(),n=n.slice().reverse());++_<i;)m[_]=$l(e[_],e[_+1]),d[_]=r(n[_],n[_+1]);return function(p){var v=Ru(e,p,1,i)-1;return d[v](m[v](p))}}function ym(e,n){return n.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function $m(){var e=Kl,n=Kl,r=ql,i,m,d,_=uo,p,v,b;function k(){var N=Math.min(e.length,n.length);return _!==uo&&(_=vm(e[0],e[N-1])),p=N>2?gm:wm,v=b=null,w}function w(N){return N==null||isNaN(N=+N)?d:(v||(v=p(e.map(i),n,r)))(i(_(N)))}return w.invert=function(N){return _(m((b||(b=p(n,e.map(i),hi)))(N)))},w.domain=function(N){return arguments.length?(e=Array.from(N,bm),k()):e.slice()},w.range=function(N){return arguments.length?(n=Array.from(N),k()):n.slice()},w.rangeRound=function(N){return n=Array.from(N),r=_m,k()},w.clamp=function(N){return arguments.length?(_=N?!0:uo,k()):_!==uo},w.interpolate=function(N){return arguments.length?(r=N,k()):r},w.unknown=function(N){return arguments.length?(d=N,w):d},function(N,$){return i=N,m=$,k()}}function Nm(){return $m()(uo,uo)}function km(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)}function ui(e,n){if((r=(e=n?e.toExponential(n-1):e.toExponential()).indexOf("e"))<0)return null;var r,i=e.slice(0,r);return[i.length>1?i[0]+i.slice(2):i,+e.slice(r+1)]}function fo(e){return e=ui(Math.abs(e)),e?e[1]:NaN}function Em(e,n){return function(r,i){for(var m=r.length,d=[],_=0,p=e[0],v=0;m>0&&p>0&&(v+p+1>i&&(p=Math.max(1,i-v)),d.push(r.substring(m-=p,m+p)),!((v+=p+1)>i));)p=e[_=(_+1)%e.length];return d.reverse().join(n)}}function Tm(e){return function(n){return n.replace(/[0-9]/g,function(r){return e[+r]})}}var Pm=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function mi(e){if(!(n=Pm.exec(e)))throw new Error("invalid format: "+e);var n;return new Al({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}mi.prototype=Al.prototype;function Al(e){this.fill=e.fill===void 0?" ":e.fill+"",this.align=e.align===void 0?">":e.align+"",this.sign=e.sign===void 0?"-":e.sign+"",this.symbol=e.symbol===void 0?"":e.symbol+"",this.zero=!!e.zero,this.width=e.width===void 0?void 0:+e.width,this.comma=!!e.comma,this.precision=e.precision===void 0?void 0:+e.precision,this.trim=!!e.trim,this.type=e.type===void 0?"":e.type+""}Al.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function Mm(e){e:for(var n=e.length,r=1,i=-1,m;r<n;++r)switch(e[r]){case".":i=m=r;break;case"0":i===0&&(i=r),m=r;break;default:if(!+e[r])break e;i>0&&(i=0);break}return i>0?e.slice(0,i)+e.slice(m+1):e}var ph;function Sm(e,n){var r=ui(e,n);if(!r)return e+"";var i=r[0],m=r[1],d=m-(ph=Math.max(-8,Math.min(8,Math.floor(m/3)))*3)+1,_=i.length;return d===_?i:d>_?i+new Array(d-_+1).join("0"):d>0?i.slice(0,d)+"."+i.slice(d):"0."+new Array(1-d).join("0")+ui(e,Math.max(0,n+d-1))[0]}function Yl(e,n){var r=ui(e,n);if(!r)return e+"";var i=r[0],m=r[1];return m<0?"0."+new Array(-m).join("0")+i:i.length>m+1?i.slice(0,m+1)+"."+i.slice(m+1):i+new Array(m-i.length+2).join("0")}const Zl={"%":(e,n)=>(e*100).toFixed(n),b:e=>Math.round(e).toString(2),c:e=>e+"",d:km,e:(e,n)=>e.toExponential(n),f:(e,n)=>e.toFixed(n),g:(e,n)=>e.toPrecision(n),o:e=>Math.round(e).toString(8),p:(e,n)=>Yl(e*100,n),r:Yl,s:Sm,X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function Jl(e){return e}var Xl=Array.prototype.map,eh=["y","z","a","f","p","n","\xB5","m","","k","M","G","T","P","E","Z","Y"];function qm(e){var n=e.grouping===void 0||e.thousands===void 0?Jl:Em(Xl.call(e.grouping,Number),e.thousands+""),r=e.currency===void 0?"":e.currency[0]+"",i=e.currency===void 0?"":e.currency[1]+"",m=e.decimal===void 0?".":e.decimal+"",d=e.numerals===void 0?Jl:Tm(Xl.call(e.numerals,String)),_=e.percent===void 0?"%":e.percent+"",p=e.minus===void 0?"\u2212":e.minus+"",v=e.nan===void 0?"NaN":e.nan+"";function b(w){w=mi(w);var N=w.fill,$=w.align,I=w.sign,X=w.symbol,O=w.zero,H=w.width,j=w.comma,V=w.precision,A=w.trim,z=w.type;z==="n"?(j=!0,z="g"):Zl[z]||(V===void 0&&(V=12),A=!0,z="g"),(O||N==="0"&&$==="=")&&(O=!0,N="0",$="=");var q=X==="$"?r:X==="#"&&/[boxX]/.test(z)?"0"+z.toLowerCase():"",te=X==="$"?i:/[%p]/.test(z)?_:"",x=Zl[z],J=/[defgprs%]/.test(z);V=V===void 0?6:/[gprs]/.test(z)?Math.max(1,Math.min(21,V)):Math.max(0,Math.min(20,V));function ne(Q){var P=q,L=te,re,Y,F;if(z==="c")L=x(Q)+L,Q="";else{Q=+Q;var U=Q<0||1/Q<0;if(Q=isNaN(Q)?v:x(Math.abs(Q),V),A&&(Q=Mm(Q)),U&&+Q==0&&I!=="+"&&(U=!1),P=(U?I==="("?I:p:I==="-"||I==="("?"":I)+P,L=(z==="s"?eh[8+ph/3]:"")+L+(U&&I==="("?")":""),J){for(re=-1,Y=Q.length;++re<Y;)if(F=Q.charCodeAt(re),48>F||F>57){L=(F===46?m+Q.slice(re+1):Q.slice(re))+L,Q=Q.slice(0,re);break}}}j&&!O&&(Q=n(Q,1/0));var $e=P.length+Q.length+L.length,ae=$e<H?new Array(H-$e+1).join(N):"";switch(j&&O&&(Q=n(ae+Q,ae.length?H-L.length:1/0),ae=""),$){case"<":Q=P+Q+L+ae;break;case"=":Q=P+ae+Q+L;break;case"^":Q=ae.slice(0,$e=ae.length>>1)+P+Q+L+ae.slice($e);break;default:Q=ae+P+Q+L;break}return d(Q)}return ne.toString=function(){return w+""},ne}function k(w,N){var $=b((w=mi(w),w.type="f",w)),I=Math.max(-8,Math.min(8,Math.floor(fo(N)/3)))*3,X=Math.pow(10,-I),O=eh[8+I/3];return function(H){return $(X*H)+O}}return{format:b,formatPrefix:k}}var si,ch,_h;Am({thousands:",",grouping:[3],currency:["$",""]});function Am(e){return si=qm(e),ch=si.format,_h=si.formatPrefix,si}function Hm(e){return Math.max(0,-fo(Math.abs(e)))}function Lm(e,n){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(fo(n)/3)))*3-fo(Math.abs(e)))}function xm(e,n){return e=Math.abs(e),n=Math.abs(n)-e,Math.max(0,fo(n)-fo(e))+1}function Im(e,n,r,i){var m=Du(e,n,r),d;switch(i=mi(i==null?",f":i),i.type){case"s":{var _=Math.max(Math.abs(e),Math.abs(n));return i.precision==null&&!isNaN(d=Lm(m,_))&&(i.precision=d),_h(i,_)}case"":case"e":case"g":case"p":case"r":{i.precision==null&&!isNaN(d=xm(m,Math.max(Math.abs(e),Math.abs(n))))&&(i.precision=d-(i.type==="e"));break}case"f":case"%":{i.precision==null&&!isNaN(d=Hm(m))&&(i.precision=d-(i.type==="%")*2);break}}return ch(i)}function Fm(e){var n=e.domain;return e.ticks=function(r){var i=n();return ju(i[0],i[i.length-1],r==null?10:r)},e.tickFormat=function(r,i){var m=n();return Im(m[0],m[m.length-1],r==null?10:r,i)},e.nice=function(r){r==null&&(r=10);var i=n(),m=0,d=i.length-1,_=i[m],p=i[d],v,b,k=10;for(p<_&&(b=_,_=p,p=b,b=m,m=d,d=b);k-- >0;){if(b=hh(_,p,r),b===v)return i[m]=_,i[d]=p,n(i);if(b>0)_=Math.floor(_/b)*b,p=Math.ceil(p/b)*b;else if(b<0)_=Math.ceil(_*b)/b,p=Math.floor(p*b)/b;else break;v=b}return e},e}function Nl(){var e=Nm();return e.copy=function(){return ym(e,Nl())},Wu.apply(e,arguments),Fm(e)}const kl=Math.PI,El=2*kl,Rs=1e-6,Qm=El-Rs;function Tl(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function dh(){return new Tl}Tl.prototype=dh.prototype={constructor:Tl,moveTo:function(e,n){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+n)},closePath:function(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(e,n){this._+="L"+(this._x1=+e)+","+(this._y1=+n)},quadraticCurveTo:function(e,n,r,i){this._+="Q"+ +e+","+ +n+","+(this._x1=+r)+","+(this._y1=+i)},bezierCurveTo:function(e,n,r,i,m,d){this._+="C"+ +e+","+ +n+","+ +r+","+ +i+","+(this._x1=+m)+","+(this._y1=+d)},arcTo:function(e,n,r,i,m){e=+e,n=+n,r=+r,i=+i,m=+m;var d=this._x1,_=this._y1,p=r-e,v=i-n,b=d-e,k=_-n,w=b*b+k*k;if(m<0)throw new Error("negative radius: "+m);if(this._x1===null)this._+="M"+(this._x1=e)+","+(this._y1=n);else if(w>Rs)if(!(Math.abs(k*p-v*b)>Rs)||!m)this._+="L"+(this._x1=e)+","+(this._y1=n);else{var N=r-d,$=i-_,I=p*p+v*v,X=N*N+$*$,O=Math.sqrt(I),H=Math.sqrt(w),j=m*Math.tan((kl-Math.acos((I+w-X)/(2*O*H)))/2),V=j/H,A=j/O;Math.abs(V-1)>Rs&&(this._+="L"+(e+V*b)+","+(n+V*k)),this._+="A"+m+","+m+",0,0,"+ +(k*N>b*$)+","+(this._x1=e+A*p)+","+(this._y1=n+A*v)}},arc:function(e,n,r,i,m,d){e=+e,n=+n,r=+r,d=!!d;var _=r*Math.cos(i),p=r*Math.sin(i),v=e+_,b=n+p,k=1^d,w=d?i-m:m-i;if(r<0)throw new Error("negative radius: "+r);this._x1===null?this._+="M"+v+","+b:(Math.abs(this._x1-v)>Rs||Math.abs(this._y1-b)>Rs)&&(this._+="L"+v+","+b),r&&(w<0&&(w=w%El+El),w>Qm?this._+="A"+r+","+r+",0,1,"+k+","+(e-_)+","+(n-p)+"A"+r+","+r+",0,1,"+k+","+(this._x1=v)+","+(this._y1=b):w>Rs&&(this._+="A"+r+","+r+",0,"+ +(w>=kl)+","+k+","+(this._x1=e+r*Math.cos(m))+","+(this._y1=n+r*Math.sin(m))))},rect:function(e,n,r,i){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+n)+"h"+ +r+"v"+ +i+"h"+-r+"Z"},toString:function(){return this._}};function lo(e){return function(){return e}}function zm(e){return typeof e=="object"&&"length"in e?e:Array.from(e)}function bh(e){this._context=e}bh.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(e,n){switch(e=+e,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,n):this._context.moveTo(e,n);break;case 1:this._point=2;default:this._context.lineTo(e,n);break}}};function Vm(e){return new bh(e)}function Bm(e){return e[0]}function Cm(e){return e[1]}function Rm(e,n){var r=lo(!0),i=null,m=Vm,d=null;e=typeof e=="function"?e:e===void 0?Bm:lo(e),n=typeof n=="function"?n:n===void 0?Cm:lo(n);function _(p){var v,b=(p=zm(p)).length,k,w=!1,N;for(i==null&&(d=m(N=dh())),v=0;v<=b;++v)!(v<b&&r(k=p[v],v,p))===w&&((w=!w)?d.lineStart():d.lineEnd()),w&&d.point(+e(k,v,p),+n(k,v,p));if(N)return d=null,N+""||null}return _.x=function(p){return arguments.length?(e=typeof p=="function"?p:lo(+p),_):e},_.y=function(p){return arguments.length?(n=typeof p=="function"?p:lo(+p),_):n},_.defined=function(p){return arguments.length?(r=typeof p=="function"?p:lo(!!p),_):r},_.curve=function(p){return arguments.length?(m=p,i!=null&&(d=m(i)),_):m},_.context=function(p){return arguments.length?(p==null?i=d=null:d=m(i=p),_):i},_}function th(e,n,r){const i=e.slice();return i[10]=n[r],i}function nh(e,n,r){const i=e.slice();return i[10]=n[r],i}function ah(e){let n,r,i,m=e[10]+"",d,_;return{c(){n=gs("g"),r=gs("line"),i=gs("text"),d=s(m),this.h()},l(p){n=ys(p,"g",{transform:!0});var v=u(n);r=ys(v,"line",{y2:!0,stroke:!0,class:!0}),u(r).forEach(a),i=ys(v,"text",{"font-size":!0,"text-anchor":!0,y:!0});var b=u(i);d=o(b,m),b.forEach(a),v.forEach(a),this.h()},h(){R(r,"y2","3"),R(r,"stroke","black"),R(r,"class","svelte-e941bf"),R(i,"font-size","5"),R(i,"text-anchor","middle"),R(i,"y","8"),R(n,"transform",_=`translate(${e[5](e[10]).toPrecision(3)}, 102)`)},m(p,v){g(p,n,v),t(n,r),t(n,i),t(i,d)},p(p,v){v&288&&m!==(m=p[10]+"")&&Pl(d,m),v&288&&_!==(_=`translate(${p[5](p[10]).toPrecision(3)}, 102)`)&&R(n,"transform",_)},d(p){p&&a(n)}}}function rh(e){let n,r,i,m=e[10]+"",d,_;return{c(){n=gs("g"),r=gs("line"),i=gs("text"),d=s(m),this.h()},l(p){n=ys(p,"g",{transform:!0});var v=u(n);r=ys(v,"line",{x2:!0,stroke:!0,class:!0}),u(r).forEach(a),i=ys(v,"text",{"font-size":!0,"text-anchor":!0,x:!0,y:!0});var b=u(i);d=o(b,m),b.forEach(a),v.forEach(a),this.h()},h(){R(r,"x2","-3"),R(r,"stroke","black"),R(r,"class","svelte-e941bf"),R(i,"font-size","5"),R(i,"text-anchor","end"),R(i,"x","-6"),R(i,"y","1.5"),R(n,"transform",_=`translate(-2, ${e[4](e[10]).toPrecision(3)})`)},m(p,v){g(p,n,v),t(n,r),t(n,i),t(i,d)},p(p,v){v&272&&m!==(m=p[10]+"")&&Pl(d,m),v&272&&_!==(_=`translate(-2, ${p[4](p[10]).toPrecision(3)})`)&&R(n,"transform",_)},d(p){p&&a(n)}}}function sh(e){let n,r,i,m;return{c(){n=gs("path"),this.h()},l(d){n=ys(d,"path",{d:!0,stroke:!0,class:!0}),u(n).forEach(a),this.h()},h(){R(n,"d",r=e[7](e[0])),R(n,"stroke",e[2]),R(n,"class","svelte-e941bf")},m(d,_){g(d,n,_),m=!0},p(d,_){(!m||_&129&&r!==(r=d[7](d[0])))&&R(n,"d",r),(!m||_&4)&&R(n,"stroke",d[2])},i(d){m||(ih(()=>{i||(i=Il(n,Ql,{duration:2e3},!0)),i.run(1)}),m=!0)},o(d){i||(i=Il(n,Ql,{duration:2e3},!1)),i.run(0),m=!1},d(d){d&&a(n),d&&i&&i.end()}}}function jm(e){let n,r,i,m,d,_=e[5].ticks(ni(e[8],10)),p=[];for(let w=0;w<_.length;w+=1)p[w]=ah(nh(e,_,w));let v=e[4].ticks(ni(e[8],7)),b=[];for(let w=0;w<v.length;w+=1)b[w]=rh(th(e,v,w));let k=e[1]&&sh(e);return{c(){n=gs("svg");for(let w=0;w<p.length;w+=1)p[w].c();r=ho();for(let w=0;w<b.length;w+=1)b[w].c();i=ho(),k&&k.c(),this.h()},l(w){n=ys(w,"svg",{width:!0,height:!0,viewBox:!0});var N=u(n);for(let $=0;$<p.length;$+=1)p[$].l(N);r=ho();for(let $=0;$<b.length;$+=1)b[$].l(N);i=ho(),k&&k.l(N),N.forEach(a),this.h()},h(){R(n,"width","100%"),R(n,"height",e[3]),R(n,"viewBox",m="-15 -10 "+(e[6]+15)+" 120")},m(w,N){g(w,n,N);for(let $=0;$<p.length;$+=1)p[$].m(n,null);t(n,r);for(let $=0;$<b.length;$+=1)b[$].m(n,null);t(n,i),k&&k.m(n,null),d=!0},p(w,[N]){if(N&288){_=w[5].ticks(ni(w[8],10));let $;for($=0;$<_.length;$+=1){const I=nh(w,_,$);p[$]?p[$].p(I,N):(p[$]=ah(I),p[$].c(),p[$].m(n,r))}for(;$<p.length;$+=1)p[$].d(1);p.length=_.length}if(N&272){v=w[4].ticks(ni(w[8],7));let $;for($=0;$<v.length;$+=1){const I=th(w,v,$);b[$]?b[$].p(I,N):(b[$]=rh(I),b[$].c(),b[$].m(n,i))}for(;$<b.length;$+=1)b[$].d(1);b.length=v.length}w[1]?k?(k.p(w,N),N&2&&_e(k,1)):(k=sh(w),k.c(),_e(k,1),k.m(n,null)):k&&(Qh(),Ne(k,1,1,()=>{k=null}),zh()),(!d||N&8)&&R(n,"height",w[3]),(!d||N&64&&m!==(m="-15 -10 "+(w[6]+15)+" 120"))&&R(n,"viewBox",m)},i(w){d||(_e(k),d=!0)},o(w){Ne(k),d=!1},d(w){w&&a(n),xl(p,w),xl(b,w),k&&k.d()}}}function Dm(e,n,r){let i,m,d,_,p,{data:v}=n,{show:b}=n,{strokeColor:k="#8A2BE2"}=n,{height:w=300}=n,{aspectRatio:N=2}=n;return e.$$set=$=>{"data"in $&&r(0,v=$.data),"show"in $&&r(1,b=$.show),"strokeColor"in $&&r(2,k=$.strokeColor),"height"in $&&r(3,w=$.height),"aspectRatio"in $&&r(9,N=$.aspectRatio)},e.$$.update=()=>{e.$$.dirty&1&&r(8,i=v.length),e.$$.dirty&512&&r(6,m=N*100),e.$$.dirty&65&&r(5,d=Nl().domain(Vl(v.map($=>$.x))).range([0,m])),e.$$.dirty&1&&r(4,_=Nl().domain(Vl(v.map($=>$.y))).range([0,100])),e.$$.dirty&48&&r(7,p=Rm().x($=>d($.x)).y($=>_($.y)))},[v,b,k,w,_,d,m,p,i,N]}class oh extends na{constructor(n){super(),aa(this,n,Dm,jm,ra,{data:0,show:1,strokeColor:2,height:3,aspectRatio:9})}}function Wm(e){let n,r,i,m,d,_,p=f(`x = ${e[0]}`)+"",v,b,k,w,N,$,I,X,O,H,j,V,A,z,q,te,x,J,ne,Q,P,L,re,Y;return n=new Fu({}),q=new oh({props:{data:e[3],show:!0,aspectRatio:3}}),P=new oh({props:{data:e[2],show:!0,aspectRatio:3,strokeColor:"#A0522D"}}),{c(){Te(n.$$.fragment),r=M(),i=l("div"),m=l("div"),d=l("div"),_=l("span"),v=M(),b=l("input"),k=M(),w=l("div"),N=l("span"),$=s(e[1]),I=s(" qubits"),X=M(),O=l("input"),H=M(),j=l("div"),V=l("p"),A=s("Real part"),z=M(),Te(q.$$.fragment),te=M(),x=l("div"),J=l("p"),ne=s("Imaginary part"),Q=M(),Te(P.$$.fragment),this.h()},l(F){Pe(n.$$.fragment,F),r=S(F),i=h(F,"DIV",{class:!0});var U=u(i);m=h(U,"DIV",{class:!0});var $e=u(m);d=h($e,"DIV",{class:!0});var ae=u(d);_=h(ae,"SPAN",{class:!0});var Ae=u(_);Ae.forEach(a),v=S(ae),b=h(ae,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),ae.forEach(a),k=S($e),w=h($e,"DIV",{class:!0});var le=u(w);N=h(le,"SPAN",{class:!0});var Z=u(N);$=o(Z,e[1]),I=o(Z," qubits"),Z.forEach(a),X=S(le),O=h(le,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),le.forEach(a),$e.forEach(a),H=S(U),j=h(U,"DIV",{class:!0});var T=u(j);V=h(T,"P",{});var oe=u(V);A=o(oe,"Real part"),oe.forEach(a),z=S(T),Pe(q.$$.fragment,T),T.forEach(a),te=S(U),x=h(U,"DIV",{});var ue=u(x);J=h(ue,"P",{});var st=u(J);ne=o(st,"Imaginary part"),st.forEach(a),Q=S(ue),Pe(P.$$.fragment,ue),ue.forEach(a),U.forEach(a),this.h()},h(){R(_,"class","label svelte-1k89lhb"),R(b,"type","range"),R(b,"min",0),R(b,"max",10),R(b,"step",1),R(b,"class","svelte-1k89lhb"),R(d,"class","col-lg-6 col-sm-12"),R(N,"class","label svelte-1k89lhb"),R(O,"type","range"),R(O,"min",3),R(O,"max",10),R(O,"step",1),R(O,"class","svelte-1k89lhb"),R(w,"class","col-lg-6 col-sm-12"),R(m,"class","row"),R(j,"class","mb-3"),R(i,"class","interaction container")},m(F,U){Me(n,F,U),g(F,r,U),g(F,i,U),t(i,m),t(m,d),t(d,_),_.innerHTML=p,t(d,v),t(d,b),Un(b,e[0]),t(m,k),t(m,w),t(w,N),t(N,$),t(N,I),t(w,X),t(w,O),Un(O,e[1]),t(i,H),t(i,j),t(j,V),t(V,A),t(j,z),Me(q,j,null),t(i,te),t(i,x),t(x,J),t(J,ne),t(x,Q),Me(P,x,null),L=!0,re||(Y=[c(b,"change",e[6]),c(b,"input",e[6]),c(O,"change",e[7]),c(O,"input",e[7])],re=!0)},p(F,[U]){(!L||U&1)&&p!==(p=f(`x = ${F[0]}`)+"")&&(_.innerHTML=p),U&1&&Un(b,F[0]),(!L||U&2)&&Pl($,F[1]),U&2&&Un(O,F[1]);const $e={};U&8&&($e.data=F[3]),q.$set($e);const ae={};U&4&&(ae.data=F[2]),P.$set(ae)},i(F){L||(_e(n.$$.fragment,F),_e(q.$$.fragment,F),_e(P.$$.fragment,F),L=!0)},o(F){Ne(n.$$.fragment,F),Ne(q.$$.fragment,F),Ne(P.$$.fragment,F),L=!1},d(F){Se(n,F),F&&a(r),F&&a(i),Se(q),Se(P),re=!1,er(Y)}}}function Um(e,n,r){let i,m,d,_,p,v;function b(){m=Dr(this.value),r(0,m)}function k(){i=Dr(this.value),r(1,i)}return e.$$.update=()=>{e.$$.dirty&2&&r(5,d=Fl(2,i)),e.$$.dirty&33&&r(4,v=[...Array(d).keys()].map(w=>Fl(Bh,Ch(2*dl*m*w/d,Rh)))),e.$$.dirty&16&&r(3,_=v.map((w,N)=>({x:N,y:w.im}))),e.$$.dirty&16&&r(2,p=v.map((w,N)=>({x:N,y:w.re})))},r(1,i=3),r(0,m=9),[m,i,p,_,v,d,b,k]}class Om extends na{constructor(n){super(),aa(this,n,Um,Wm,ra,{})}}const Gm='<a href="https://en.wikipedia.org/wiki/Projection_(linear_algebra)"><h3>Projection (linear algebra)</h3></a><p>In linear algebra and functional analysis, a <b>projection</b> is a linear transformation <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b4dc73bf40314945ff376bd363916a738548d40a" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:1.745ex;height:2.176ex" /></span> from a vector space to itself such that <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/5369d895625034bc50c9f28975e3293ef6f2105b" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:10.529ex;height:2.176ex" /></span>. That is, whenever <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b4dc73bf40314945ff376bd363916a738548d40a" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:1.745ex;height:2.176ex" /></span> is applied twice to any vector, it gives the same result as if it were applied once. It leaves its image unchanged. This definition of "projection" formalizes and generalizes the idea of graphical projection. One can also consider the effect of a projection on a geometrical object by examining the effect of the projection on points in the object.</p>',Km='<a href="https://en.wikipedia.org/wiki/Bloch_sphere"><h3>Bloch sphere</h3></a><p>In quantum mechanics and computing, the <b>Bloch sphere</b> is a geometrical representation of the pure state space of a two-level quantum mechanical system (qubit), named after the physicist Felix Bloch.</p>',Ym='<a href="https://en.wikipedia.org/wiki/Degrees_of_freedom"><h3>Degrees of freedom</h3></a><p><b>Degrees of freedom</b> refers to the number of independent variables or parameters of a system. In various scientific fields, the word "freedom" is used to describe the limits to which physical movement or other physical processes are possible. This relates to the philosophical concept to the extent that people may be considered to have as much freedom as they are physically able to exercise.</p>',Zm='<a href="https://en.wikipedia.org/wiki/Phase_factor"><h3>Phase factor</h3></a><p>For any complex number written in polar form, the <b>phase factor</b> is the complex exponential factor. As such, the term "phase factor" is related to the more general term phasor, which may have any magnitude. The phase factor is a unit complex number, i.e. a complex number of absolute value 1. It is commonly used in quantum mechanics.</p>';function Jm(e){let n;return{c(){n=s("projection")},l(r){n=o(r,"projection")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Xm(e){let n;return{c(){n=s("Bloch sphere")},l(r){n=o(r,"Bloch sphere")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function ef(e){let n;return{c(){n=s("degrees of freedom")},l(r){n=o(r,"degrees of freedom")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function tf(e){let n;return{c(){n=s("phase")},l(r){n=o(r,"phase")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function nf(e){let n,r,i,m,d,_,p=f("\\alpha")+"",v,b,k=f("\\beta")+"",w,N,$=f("\\alpha = \\Vert{\\alpha}\\Vert \\cdot e^{i \\phi_{\\alpha}}")+"",I,X,O=f("\\beta = \\Vert{\\beta}\\Vert \\cdot e^{i \\phi_{\\beta}}")+"",H,j,V=f("\\Vert{\\alpha}\\Vert \\cdot e^{i \\phi_{\\alpha}} |0\\rangle + \\Vert{\\beta}\\Vert \\cdot e^{i \\phi_{\\beta}} |1\\rangle")+"",A,z,q,te,x,J=f("e^{i \\phi_{\\alpha}}")+"",ne,Q,P=f("\\Vert{e^{i \\phi_{\\alpha}}}\\Vert^2")+"",L,re,Y=f("1")+"",F,U,$e=f("\\phi_{\\alpha}")+"",ae,Ae,le=f("\\phi_{\\beta}")+"",Z,T,oe=f("e^{i \\phi_{\\alpha}}")+"",ue,st,He=f("\\Vert{\\alpha}\\Vert \\cdot |0\\rangle + \\Vert{\\beta}\\Vert \\cdot \\frac{e^{i \\phi_{\\beta}}}{e^{i \\phi_{\\alpha}}} |1\\rangle")+"",ze,dt,ge=f("\\frac{e^{i \\phi_{\\beta}}}{e^{i \\phi_{\\alpha}}} = e^{i (\\phi_{\\beta} - \\phi_{\\alpha})}")+"",Fe,Re,ot=f("\\phi = \\phi_{\\beta} - \\phi_{\\alpha}")+"",Le,ce,qt=f("\\Vert{\\alpha}\\Vert \\cdot |0\\rangle + \\Vert{\\beta}\\Vert \\cdot e^{i \\phi} |1\\rangle")+"",qe,ie,me,Ke,At,W=f("\\Vert{\\alpha}\\Vert^2 + \\Vert{\\beta}\\Vert^2 = 1")+"",de,G,gt=f("\\theta")+"",Oe,bt,yt=f("\\cos{(\\frac{\\theta}{2})} \\cdot |0 \\rangle + \\sin{(\\frac{\\theta}{2})} \\cdot e^{i \\phi} |1 \\rangle")+"",Ye,ft,xt=f("\\theta")+"",it,$t,It=f("\\phi")+"",pt,lt,jt=f("\\theta")+"",D,be,ct=f("z")+"",Qe,Pt,je=f("\\phi")+"",Nt,kt,Dt,Ht,Wt=f("x-y")+"",Ft,Ge,Ut,at,Ce,et,vt,ke,Mt,ht=f("\\theta")+"",Nn,tt,Ot=f("\\phi")+"",rn,St,sn,en,un,Ve;return kt=new mt({props:{hovertext:Gm,$$slots:{default:[Jm]},$$scope:{ctx:e}}}),Ge=new mt({props:{hovertext:Km,$$slots:{default:[Xm]},$$scope:{ctx:e}}}),vt=new mt({props:{hovertext:Ym,$$slots:{default:[ef]},$$scope:{ctx:e}}}),St=new mt({props:{hovertext:Zm,$$slots:{default:[tf]},$$scope:{ctx:e}}}),{c(){n=l("h2"),r=s("The Bloch-sphere"),i=M(),m=l("p"),d=s("As the coefficients "),_=l("span"),v=s(" and "),b=l("span"),w=s(" are complex numbers, they can be expressed in the form "),N=l("span"),I=s(" and "),X=l("span"),H=s(". Thus, the state of the qubit can be rewritten as "),j=l("span"),A=s("."),z=M(),q=l("p"),te=s("Remember that "),x=l("span"),ne=s(" is a unit vector rotated around the origin, and therefore the square of its norm "),Q=l("span"),L=s(" also equals to "),re=l("span"),F=s(". This means that we can modify the angles "),U=l("span"),ae=s(" and "),Ae=l("span"),Z=s(" freely without affecting the measurement probabilities. Therefore, we can do an algebraic trick to simplify the expression above. Namely, let's divide the state by "),T=l("span"),ue=s(" to obtain "),st=l("span"),ze=s(". By the rules of exponentiation, "),dt=l("span"),Fe=s(". Next, let's introduce a new variable "),Re=l("span"),Le=s(", with the help of which the state can be further simplified to "),ce=l("span"),qe=s("."),ie=M(),me=l("p"),Ke=s("We know that "),At=l("span"),de=s(". Consequently, these two numbers can also be represented geometrically as vector of unit length rotated around the origin by some angle, the double of which we'll denote as "),G=l("span"),Oe=s(". Using trigonometry, we can now rewrite the state as "),bt=l("span"),Ye=s(". Notice that we now only need two variables to express the state of the qubit: the angles "),ft=l("span"),it=s(" and "),$t=l("span"),pt=s(". Geometrically, this can be represented as a vector pointing to the surface of 3-dimensional sphere with unit radius, where "),lt=l("span"),D=s(" is the angle of the vector and the "),be=l("span"),Qe=s(" axis, and "),Pt=l("span"),Nt=s(" is the angle of the vertical "),Te(kt.$$.fragment),Dt=s(" of the vector on the "),Ht=l("span"),Ft=s(" plane. This representation of qubit states is called the "),Te(Ge.$$.fragment),Ut=s("."),at=M(),Ce=l("p"),et=s("It's important to note that of the two "),Te(vt.$$.fragment),ke=s(" on the Bloch sphere, only the angle "),Mt=l("span"),Nn=s(" is related to measurement probabilities. "),tt=l("span"),rn=s(" is an inherently quantum property called the "),Te(St.$$.fragment),sn=s(" that does not have physical manifestation directly observable to us. Because of this, it's hard to find any intuitive analogy from everyday life that could help us understand what exactly the phase is. The most useful approach in this context is to look at the phase as a matematical property of quantum objects that we can leverage to design clever algorithms.")},l(se){n=h(se,"H2",{});var We=u(n);r=o(We,"The Bloch-sphere"),We.forEach(a),i=S(se),m=h(se,"P",{});var nt=u(m);d=o(nt,"As the coefficients "),_=h(nt,"SPAN",{});var Hn=u(_);Hn.forEach(a),v=o(nt," and "),b=h(nt,"SPAN",{});var rt=u(b);rt.forEach(a),w=o(nt," are complex numbers, they can be expressed in the form "),N=h(nt,"SPAN",{});var Bt=u(N);Bt.forEach(a),I=o(nt," and "),X=h(nt,"SPAN",{});var Cn=u(X);Cn.forEach(a),H=o(nt,". Thus, the state of the qubit can be rewritten as "),j=h(nt,"SPAN",{});var kn=u(j);kn.forEach(a),A=o(nt,"."),nt.forEach(a),z=S(se),q=h(se,"P",{});var Ie=u(q);te=o(Ie,"Remember that "),x=h(Ie,"SPAN",{});var En=u(x);En.forEach(a),ne=o(Ie," is a unit vector rotated around the origin, and therefore the square of its norm "),Q=h(Ie,"SPAN",{});var mn=u(Q);mn.forEach(a),L=o(Ie," also equals to "),re=h(Ie,"SPAN",{});var ve=u(re);ve.forEach(a),F=o(Ie,". This means that we can modify the angles "),U=h(Ie,"SPAN",{});var Tn=u(U);Tn.forEach(a),ae=o(Ie," and "),Ae=h(Ie,"SPAN",{});var fn=u(Ae);fn.forEach(a),Z=o(Ie," freely without affecting the measurement probabilities. Therefore, we can do an algebraic trick to simplify the expression above. Namely, let's divide the state by "),T=h(Ie,"SPAN",{});var Pn=u(T);Pn.forEach(a),ue=o(Ie," to obtain "),st=h(Ie,"SPAN",{});var Ln=u(st);Ln.forEach(a),ze=o(Ie,". By the rules of exponentiation, "),dt=h(Ie,"SPAN",{});var we=u(dt);we.forEach(a),Fe=o(Ie,". Next, let's introduce a new variable "),Re=h(Ie,"SPAN",{});var _t=u(Re);_t.forEach(a),Le=o(Ie,", with the help of which the state can be further simplified to "),ce=h(Ie,"SPAN",{});var Mn=u(ce);Mn.forEach(a),qe=o(Ie,"."),Ie.forEach(a),ie=S(se),me=h(se,"P",{});var pe=u(me);Ke=o(pe,"We know that "),At=h(pe,"SPAN",{});var pn=u(At);pn.forEach(a),de=o(pe,". Consequently, these two numbers can also be represented geometrically as vector of unit length rotated around the origin by some angle, the double of which we'll denote as "),G=h(pe,"SPAN",{});var Ue=u(G);Ue.forEach(a),Oe=o(pe,". Using trigonometry, we can now rewrite the state as "),bt=h(pe,"SPAN",{});var Qt=u(bt);Qt.forEach(a),Ye=o(pe,". Notice that we now only need two variables to express the state of the qubit: the angles "),ft=h(pe,"SPAN",{});var cn=u(ft);cn.forEach(a),it=o(pe," and "),$t=h(pe,"SPAN",{});var _n=u($t);_n.forEach(a),pt=o(pe,". Geometrically, this can be represented as a vector pointing to the surface of 3-dimensional sphere with unit radius, where "),lt=h(pe,"SPAN",{});var ba=u(lt);ba.forEach(a),D=o(pe," is the angle of the vector and the "),be=h(pe,"SPAN",{});var dn=u(be);dn.forEach(a),Qe=o(pe," axis, and "),Pt=h(pe,"SPAN",{});var tn=u(Pt);tn.forEach(a),Nt=o(pe," is the angle of the vertical "),Pe(kt.$$.fragment,pe),Dt=o(pe," of the vector on the "),Ht=h(pe,"SPAN",{});var va=u(Ht);va.forEach(a),Ft=o(pe," plane. This representation of qubit states is called the "),Pe(Ge.$$.fragment,pe),Ut=o(pe,"."),pe.forEach(a),at=S(se),Ce=h(se,"P",{});var wt=u(Ce);et=o(wt,"It's important to note that of the two "),Pe(vt.$$.fragment,wt),ke=o(wt," on the Bloch sphere, only the angle "),Mt=h(wt,"SPAN",{});var On=u(Mt);On.forEach(a),Nn=o(wt," is related to measurement probabilities. "),tt=h(wt,"SPAN",{});var Ct=u(tt);Ct.forEach(a),rn=o(wt," is an inherently quantum property called the "),Pe(St.$$.fragment,wt),sn=o(wt," that does not have physical manifestation directly observable to us. Because of this, it's hard to find any intuitive analogy from everyday life that could help us understand what exactly the phase is. The most useful approach in this context is to look at the phase as a matematical property of quantum objects that we can leverage to design clever algorithms."),wt.forEach(a)},m(se,We){g(se,n,We),t(n,r),g(se,i,We),g(se,m,We),t(m,d),t(m,_),_.innerHTML=p,t(m,v),t(m,b),b.innerHTML=k,t(m,w),t(m,N),N.innerHTML=$,t(m,I),t(m,X),X.innerHTML=O,t(m,H),t(m,j),j.innerHTML=V,t(m,A),g(se,z,We),g(se,q,We),t(q,te),t(q,x),x.innerHTML=J,t(q,ne),t(q,Q),Q.innerHTML=P,t(q,L),t(q,re),re.innerHTML=Y,t(q,F),t(q,U),U.innerHTML=$e,t(q,ae),t(q,Ae),Ae.innerHTML=le,t(q,Z),t(q,T),T.innerHTML=oe,t(q,ue),t(q,st),st.innerHTML=He,t(q,ze),t(q,dt),dt.innerHTML=ge,t(q,Fe),t(q,Re),Re.innerHTML=ot,t(q,Le),t(q,ce),ce.innerHTML=qt,t(q,qe),g(se,ie,We),g(se,me,We),t(me,Ke),t(me,At),At.innerHTML=W,t(me,de),t(me,G),G.innerHTML=gt,t(me,Oe),t(me,bt),bt.innerHTML=yt,t(me,Ye),t(me,ft),ft.innerHTML=xt,t(me,it),t(me,$t),$t.innerHTML=It,t(me,pt),t(me,lt),lt.innerHTML=jt,t(me,D),t(me,be),be.innerHTML=ct,t(me,Qe),t(me,Pt),Pt.innerHTML=je,t(me,Nt),Me(kt,me,null),t(me,Dt),t(me,Ht),Ht.innerHTML=Wt,t(me,Ft),Me(Ge,me,null),t(me,Ut),g(se,at,We),g(se,Ce,We),t(Ce,et),Me(vt,Ce,null),t(Ce,ke),t(Ce,Mt),Mt.innerHTML=ht,t(Ce,Nn),t(Ce,tt),tt.innerHTML=Ot,t(Ce,rn),Me(St,Ce,null),t(Ce,sn),en=!0,un||(Ve=[c(_,"mouseenter",e[0]),c(b,"mouseenter",e[1]),c(N,"mouseenter",e[2]),c(X,"mouseenter",e[3]),c(j,"mouseenter",e[4]),c(x,"mouseenter",e[5]),c(Q,"mouseenter",e[6]),c(re,"mouseenter",e[7]),c(U,"mouseenter",e[8]),c(Ae,"mouseenter",e[9]),c(T,"mouseenter",e[10]),c(st,"mouseenter",e[11]),c(dt,"mouseenter",e[12]),c(Re,"mouseenter",e[13]),c(ce,"mouseenter",e[14]),c(At,"mouseenter",e[15]),c(G,"mouseenter",e[16]),c(bt,"mouseenter",e[17]),c(ft,"mouseenter",e[18]),c($t,"mouseenter",e[19]),c(lt,"mouseenter",e[20]),c(be,"mouseenter",e[21]),c(Pt,"mouseenter",e[22]),c(Ht,"mouseenter",e[23]),c(Mt,"mouseenter",e[24]),c(tt,"mouseenter",e[25])],un=!0)},p(se,[We]){const nt={};We&67108864&&(nt.$$scope={dirty:We,ctx:se}),kt.$set(nt);const Hn={};We&67108864&&(Hn.$$scope={dirty:We,ctx:se}),Ge.$set(Hn);const rt={};We&67108864&&(rt.$$scope={dirty:We,ctx:se}),vt.$set(rt);const Bt={};We&67108864&&(Bt.$$scope={dirty:We,ctx:se}),St.$set(Bt)},i(se){en||(_e(kt.$$.fragment,se),_e(Ge.$$.fragment,se),_e(vt.$$.fragment,se),_e(St.$$.fragment,se),en=!0)},o(se){Ne(kt.$$.fragment,se),Ne(Ge.$$.fragment,se),Ne(vt.$$.fragment,se),Ne(St.$$.fragment,se),en=!1},d(se){se&&a(n),se&&a(i),se&&a(m),se&&a(z),se&&a(q),se&&a(ie),se&&a(me),Se(kt),Se(Ge),se&&a(at),se&&a(Ce),Se(vt),Se(St),un=!1,er(Ve)}}}function Vt(e){console.log(e)}function af(e){return[()=>Vt(["\\alpha"]),()=>Vt(["\\beta"]),()=>Vt(["\\phi","\\alpha"]),()=>Vt(["\\beta","\\phi"]),()=>Vt(["\\beta","\\phi","\\alpha"]),()=>Vt(["\\phi","\\alpha"]),()=>Vt(["\\phi","\\alpha"]),()=>Vt([]),()=>Vt(["\\phi","\\alpha"]),()=>Vt(["\\beta","\\phi"]),()=>Vt(["\\phi","\\alpha"]),()=>Vt(["\\beta","\\phi","\\alpha"]),()=>Vt(["\\beta","\\phi","\\alpha"]),()=>Vt(["\\beta","\\phi","\\alpha"]),()=>Vt(["\\beta","\\phi","\\alpha"]),()=>Vt(["\\beta","\\alpha"]),()=>Vt(["\\theta"]),()=>Vt(["\\theta","\\phi"]),()=>Vt(["\\theta"]),()=>Vt(["\\phi"]),()=>Vt(["\\theta"]),()=>Vt(["z"]),()=>Vt(["\\phi"]),()=>Vt(["y","x"]),()=>Vt(["\\theta"]),()=>Vt(["\\phi"])]}class rf extends na{constructor(n){super(),aa(this,n,af,nf,ra,{})}}const sf='<a href="https://en.wikipedia.org/wiki/Complex_number"><h3 class="text-lg font-semibold">Complex number</h3></a><p>In mathematics, a <b>complex number</b> is an element of a number system that extends the real numbers with a specific element denoted <span class="texhtml mvar" style="font-style:italic">i</span>, called the imaginary unit and satisfying the equation <span class="texhtml "><i>i</i><sup>2</sup> = \u22121</span>; every complex number can be expressed in the form <span class="texhtml "><i>a</i> + <i>bi</i></span>, where <span class="texhtml mvar" style="font-style:italic">a</span> and <span class="texhtml mvar" style="font-style:italic">b</span> are real numbers. Because no real number satisfies the above equation, <span class="texhtml mvar" style="font-style:italic">i</span> was called an imaginary number by Ren\xE9 Descartes. For the complex number <span class="texhtml "><i>a</i> + <i>bi</i></span>, <span class="texhtml mvar" style="font-style:italic">a</span> is called the <b><span class="vanchor"><span class="vanchor-text">real part</span></span></b> and <span class="texhtml mvar" style="font-style:italic">b</span> is called the <b><span class="vanchor"><span class="vanchor-text">imaginary part</span></span></b>. The set of complex numbers is denoted by either of the symbols <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f9add4085095b9b6d28d045fd9c92c2c09f549a7" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:1.678ex;height:2.176ex" /></span> or <span class="texhtml "><b>C</b></span>. Despite the historical nomenclature "imaginary", complex numbers are regarded in the mathematical sciences as just as "real" as the real numbers and are fundamental in many aspects of the scientific description of the natural world.</p>',of='<a href="https://en.wikipedia.org/wiki/Imaginary_number"><h3>Imaginary number</h3></a><p>An <b>imaginary number</b> is a real number multiplied by the imaginary unit <span class="texhtml mvar" style="font-style:italic">i</span>, which is defined by its property <span class="texhtml "><i>i</i><sup>2</sup> = \u22121</span>. The square of an imaginary number <span class="texhtml mvar" style="font-style:italic">bi</span> is <span class="texhtml ">\u2212<i>b</i><sup>2</sup></span>. For example, <span class="texhtml ">5<i>i</i></span> is an imaginary number, and its square is <span class="texhtml ">\u221225</span>. By definition, zero is considered to be both real and imaginary.</p>',lf='<a href="https://en.wikipedia.org/wiki/Real_number"><h3>Real number</h3></a><p>In mathematics, a <b>real number</b> is a value of a continuous quantity that can represent a distance along a line. The adjective <i>real</i> in this context was introduced in the 17th century by Ren\xE9 Descartes, who distinguished between real and imaginary roots of polynomials. The real numbers include all the rational numbers, such as the integer \u22125 and the fraction 4/3, and all the irrational numbers, such as <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b4afc1e27d418021bf10898eb44a7f5f315735ff" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.671ex;width:3.098ex;height:3.009ex" /></span>. Included within the irrationals are the real transcendental numbers, such as <span><span class="texhtml mvar" style="font-style:italic">\u03C0</span></span> (3.14159265...). In addition to measuring distance, real numbers can be used to measure quantities such as time, mass, energy, velocity, and many more. The set of real numbers is denoted using the symbol <b>R</b> or <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/786849c765da7a84dbc3cce43e96aad58a5868dc" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:1.678ex;height:2.176ex" /></span> and is sometimes called "the reals".</p>',hf='<a href="https://en.wikipedia.org/wiki/Complex_plane"><h3>Complex plane</h3></a><p>In mathematics, the <b>complex plane</b> is the plane formed by the complex numbers, with a Cartesian coordinate system such that the <span class="texhtml mvar" style="font-style:italic">x</span>-axis, called <b>real axis</b>, is formed by the real numbers, and the <span class="texhtml mvar" style="font-style:italic">y</span>-axis, called <b>imaginary axis</b>, is formed by the imaginary numbers.</p>',uf='<a href="https://en.wikipedia.org/wiki/Bit"><h3 class="text-lg font-semibold">Bit</h3></a><p>The <b>bit</b> is the most basic unit of information in computing and digital communications. The name is a portmanteau of <b>binary digit</b>. The bit represents a logical state with one of two possible values. These values are most commonly represented as either <span class="nowrap">"<span class="monospaced">1</span>" or "<span class="monospaced">0</span>"</span>, but other representations such as <i>true</i>/<i>false</i>, <i>yes</i>/<i>no</i>, <i>on</i>/<i>off</i>, or <i>+</i>/<i>\u2212</i> are also commonly used.</p>',mf='<a href="https://en.wikipedia.org/wiki/Information_theory"><h3>Information theory</h3></a><p><b>Information theory</b> is the scientific study of the quantification, storage, and communication of digital information. The field was fundamentally established by the works of Harry Nyquist and Ralph Hartley, in the 1920s, and Claude Shannon in the 1940s. The field is at the intersection of probability theory, statistics, computer science, statistical mechanics, information engineering, and electrical engineering.</p>',ff='<a href="https://en.wikipedia.org/wiki/Qubit"><h3 class="text-lg font-semibold">Qubit</h3></a><p>In quantum computing, a <b>qubit</b> or <b>quantum bit</b> is a basic unit of quantum information\u2014the quantum version of the classic binary bit physically realized with a two-state device. A qubit is a two-state quantum-mechanical system, one of the simplest quantum systems displaying the peculiarity of quantum mechanics. Examples include the spin of the electron in which the two levels can be taken as spin up and spin down; or the polarization of a single photon in which the two states can be taken to be the vertical polarization and the horizontal polarization. In a classical system, a bit would have to be in one state or the other. However, quantum mechanics allows the qubit to be in a coherent superposition of both states simultaneously, a property that is fundamental to quantum mechanics and quantum computing.</p>',pf='<a href="https://en.wikipedia.org/wiki/Measurement_in_quantum_mechanics"><h3>Measurement in quantum mechanics</h3></a><p>In quantum physics, a <b>measurement</b> is the testing or manipulation of a physical system to yield a numerical result. The predictions that quantum physics makes are in general probabilistic. The mathematical tools for making predictions about what measurement outcomes may occur were developed during the 20th century and make use of linear algebra and functional analysis.</p>',cf=`<a href="https://en.wikipedia.org/wiki/Quantum_state"><h3>Quantum state</h3></a><p>In quantum physics, a <b>quantum state</b> is a mathematical entity that provides a probability distribution for the outcomes of each possible measurement on a system. Knowledge of the quantum state together with the rules for the system's evolution in time exhausts all that can be predicted about the system's behavior. A mixture of quantum states is again a quantum state. Quantum states that cannot be written as a mixture of other states are called <b>pure quantum states</b>, while all other states are called <b>mixed quantum states</b>. A pure quantum state can be represented by a ray in a Hilbert space over the complex numbers, while mixed states are represented by density matrices, which are positive semidefinite operators that act on Hilbert spaces.</p>`,_f=`<a href="https://en.wikipedia.org/wiki/Linear_combination"><h3>Linear combination</h3></a><p>In mathematics, a <b>linear combination</b> is an expression constructed from a set of terms by multiplying each term by a constant and adding the results. The concept of linear combinations is central to linear algebra and related fields of mathematics.
Most of this article deals with linear combinations in the context of a vector space over a field, with some generalizations given at the end of the article.</p>`;function df(e){let n;return{c(){n=s("complex number")},l(r){n=o(r,"complex number")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function bf(e){let n;return{c(){n=s("imaginary")},l(r){n=o(r,"imaginary")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function vf(e){let n;return{c(){n=s("real")},l(r){n=o(r,"real")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function wf(e){let n;return{c(){n=s("complex plane")},l(r){n=o(r,"complex plane")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function gf(e){let n;return{c(){n=s("bits")},l(r){n=o(r,"bits")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function yf(e){let n;return{c(){n=s("bit of information")},l(r){n=o(r,"bit of information")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function $f(e){let n;return{c(){n=s("Qubits")},l(r){n=o(r,"Qubits")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Nf(e){let n;return{c(){n=s("measured")},l(r){n=o(r,"measured")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function kf(e){let n;return{c(){n=s("state")},l(r){n=o(r,"state")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Ef(e){let n;return{c(){n=s("linear combination")},l(r){n=o(r,"linear combination")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Tf(e){let n,r,i,m,d,_,p,v,b=f("z \\in \\mathbb{C}")+"",k,w,N=f("z = a i + b")+"",$,I,X=f("a, b \\in \\mathbb{R}")+"",O,H,j=f("i = \\sqrt{-1}")+"",V,A,z=f("a")+"",q,te,x,J,ne=f("b")+"",Q,P,L,re,Y=f("z")+"",F,U,$e=f("a=0")+"",ae,Ae,le,Z,T,oe,ue,st=f("x")+"",He,ze,dt=f("y")+"",ge,Fe,Re,ot,Le,ce=f("\\Vert{z}\\Vert = \\sqrt{a^2 + b^2}")+"",qt,qe,ie=f("z")+"",me,Ke,At=f("\\Vert{z}\\Vert^2 = a^2 + b^2")+"",W,de,G,gt,Oe,bt=f("z")+"",yt,Ye,ft=f("\\Vert{z}\\Vert \\cdot e^{i \\phi_z}")+"",xt,it,$t=f("\\phi_z \\in [0, 2\\pi]")+"",It,pt,lt=f("e^{i \\phi_z}")+"",jt,D,be=f("\\phi_z")+"",ct,Qe,Pt=f("2\\pi")+"",je,Nt,kt=f("z")+"",Dt,Ht,Wt=f("\\Vert{z}\\Vert")+"",Ft,Ge,Ut,at,Ce,et,vt,ke,Mt,ht,Nn,tt,Ot=f("0")+"",rn,St,sn=f("1")+"",en,un,Ve,se,We,nt,Hn=f("0")+"",rt,Bt,Cn=f("1")+"",kn,Ie,En,mn,ve,Tn,fn,Pn=f("|0\\rangle")+"",Ln,we,_t=f("|1\\rangle")+"",Mn,pe,pn,Ue,Qt,cn,_n=f("\\alpha |0\\rangle + \\beta |1\\rangle")+"",ba,dn,tn=f("\\alpha")+"",va,wt,On=f("\\beta")+"",Ct,xn,In=f("|0\\rangle")+"",sa,oa,wa=f("\\Vert{\\alpha}\\Vert^2")+"",Ze,ut,Fn=f("|1\\rangle")+"",Ur,Rn,Gn=f("\\Vert{\\beta}\\Vert^2")+"",ia,bn,Pa=f("|0\\rangle")+"",Ma,ye,nn=f("|1\\rangle")+"",la,ha,Qn=f("\\Vert{\\alpha}\\Vert^2 + \\Vert{\\beta}\\Vert^2 = 1")+"",Kn,Gt,ua=f("\\Vert{\\alpha}\\Vert^2")+"",ma,fa,pa=f("\\Vert{\\beta}\\Vert^2")+"",Sa,tr,qa,jn;return _=new mt({props:{hovertext:sf,$$slots:{default:[df]},$$scope:{ctx:e}}}),te=new mt({props:{hovertext:of,$$slots:{default:[bf]},$$scope:{ctx:e}}}),P=new mt({props:{hovertext:lf,$$slots:{default:[vf]},$$scope:{ctx:e}}}),T=new mt({props:{hovertext:hf,$$slots:{default:[wf]},$$scope:{ctx:e}}}),ke=new mt({props:{hovertext:uf,$$slots:{default:[gf]},$$scope:{ctx:e}}}),ht=new mt({props:{hovertext:mf,$$slots:{default:[yf]},$$scope:{ctx:e}}}),se=new mt({props:{hovertext:ff,$$slots:{default:[$f]},$$scope:{ctx:e}}}),Ie=new mt({props:{hovertext:pf,$$slots:{default:[Nf]},$$scope:{ctx:e}}}),pe=new mt({props:{hovertext:cf,$$slots:{default:[kf]},$$scope:{ctx:e}}}),Ue=new mt({props:{hovertext:_f,$$slots:{default:[Ef]},$$scope:{ctx:e}}}),{c(){n=l("h2"),r=s("Important properties of complex numbers"),i=M(),m=l("p"),d=s("The general form of a "),Te(_.$$.fragment),p=M(),v=l("span"),k=s(" is the following: "),w=l("span"),$=s(", where "),I=l("span"),O=s(" and "),H=l("span"),V=s(". "),A=l("span"),q=s(" is called the "),Te(te.$$.fragment),x=s(" and "),J=l("span"),Q=s(" the "),Te(P.$$.fragment),L=s(" component of "),re=l("span"),F=s(". In fact, all real numbers are complex numbers, the imaginary component of which is zero ("),U=l("span"),ae=s(")."),Ae=M(),le=l("p"),Z=s("Complex numbers can be represented geometrically as two-dimensional vectors in the so called "),Te(T.$$.fragment),oe=s(", where the "),ue=l("span"),He=s("-axis stands for the real, and the "),ze=l("span"),ge=s("-axis for the imaginary component."),Fe=M(),Re=l("p"),ot=s("Let "),Le=l("span"),qt=s(" denote the Euclidean norm of the vector associated with the complex number "),qe=l("span"),me=s(". Consequently, "),Ke=l("span"),W=s(" is the square of this norm, and it's going to play an important role in what follows."),de=M(),G=l("p"),gt=s("Another important thing to note is that each 2-dimensional vector is uniquely defined by two properties: its length and angle of rotation. Consequently, a complex number "),Oe=l("span"),yt=s(" can be expressed as "),Ye=l("span"),xt=s(", where "),it=l("span"),It=s(". Here, "),pt=l("span"),jt=s(" is a vector of unit length in the complex plane, rotated around the origin by an angle of "),D=l("span"),ct=s(" ("),Qe=l("span"),je=s(" corresponds to a full rotation). All we have to do to get back "),Nt=l("span"),Dt=s(", then, is multiply this rotated unit vector by "),Ht=l("span"),Ft=s(" to adjust its norm."),Ge=M(),Ut=l("h2"),at=s("Qubit states"),Ce=M(),et=l("p"),vt=s("The elementary units of information in classical computing are "),Te(ke.$$.fragment),Mt=s(". As their name suggests, bits represent one single "),Te(ht.$$.fragment),Nn=s(", which means they can take on either of two values "),tt=l("span"),rn=s(" and "),St=l("span"),en=s(" at a time."),un=M(),Ve=l("p"),Te(se.$$.fragment),We=s(" are the quantum computing equivalent of bits. They differ from classical bits - among other things - in that they can take on a multitude of values instead of just "),nt=l("span"),rt=s(" and "),Bt=l("span"),kn=s(", until that value is "),Te(Ie.$$.fragment),En=s(", at which point they behave just like classical bits. To explain what this means exactly, we'll need to introduce some further concepts."),mn=M(),ve=l("p"),Tn=s("Let "),fn=l("span"),Ln=s(" and "),we=l("span"),Mn=s(" denote the so called basis states of a qubit that are the quantum-equivalent of classical bit states. If you look at a qubit directly to learn it's value, you'll see one of these basis states. But while you're not looking - due to it's quantum nature - the "),Te(pe.$$.fragment),pn=s(" of a qubit may be something more intricate. Generally, it can be expressed as the "),Te(Ue.$$.fragment),Qt=s(" of the two basis states: "),cn=l("span"),ba=s(". Here, "),dn=l("span"),va=s(" and "),wt=l("span"),Ct=s(" are complex numbers that indicate the relative weight, with which the two basis states are present in this combination. More precisely, if we now look at the qubit, we'll see the basis state "),xn=l("span"),sa=s(" with a probability of "),oa=l("span"),Ze=s(", and the basis state "),ut=l("span"),Ur=s(" with a probability of "),Rn=l("span"),ia=s(". Because these probabilities must add up to one - as "),bn=l("span"),Ma=s(" and "),ye=l("span"),la=s(" are the only possible outcomes - the equation "),ha=l("span"),Kn=s(" must hold for all possible qubit states. Let's call "),Gt=l("span"),ma=s(" and "),fa=l("span"),Sa=s(" the measurement probabilities of the basis states.")},l(B){n=h(B,"H2",{});var Ee=u(n);r=o(Ee,"Important properties of complex numbers"),Ee.forEach(a),i=S(B),m=h(B,"P",{});var he=u(m);d=o(he,"The general form of a "),Pe(_.$$.fragment,he),p=S(he),v=h(he,"SPAN",{});var nr=u(v);nr.forEach(a),k=o(he," is the following: "),w=h(he,"SPAN",{});var Yn=u(w);Yn.forEach(a),$=o(he,", where "),I=h(he,"SPAN",{});var ga=u(I);ga.forEach(a),O=o(he," and "),H=h(he,"SPAN",{});var ar=u(H);ar.forEach(a),V=o(he,". "),A=h(he,"SPAN",{});var Zn=u(A);Zn.forEach(a),q=o(he," is called the "),Pe(te.$$.fragment,he),x=o(he," and "),J=h(he,"SPAN",{});var ya=u(J);ya.forEach(a),Q=o(he," the "),Pe(P.$$.fragment,he),L=o(he," component of "),re=h(he,"SPAN",{});var rr=u(re);rr.forEach(a),F=o(he,". In fact, all real numbers are complex numbers, the imaginary component of which is zero ("),U=h(he,"SPAN",{});var Jn=u(U);Jn.forEach(a),ae=o(he,")."),he.forEach(a),Ae=S(B),le=h(B,"P",{});var on=u(le);Z=o(on,"Complex numbers can be represented geometrically as two-dimensional vectors in the so called "),Pe(T.$$.fragment,on),oe=o(on,", where the "),ue=h(on,"SPAN",{});var $s=u(ue);$s.forEach(a),He=o(on,"-axis stands for the real, and the "),ze=h(on,"SPAN",{});var Aa=u(ze);Aa.forEach(a),ge=o(on,"-axis for the imaginary component."),on.forEach(a),Fe=S(B),Re=h(B,"P",{});var zn=u(Re);ot=o(zn,"Let "),Le=h(zn,"SPAN",{});var Ns=u(Le);Ns.forEach(a),qt=o(zn," denote the Euclidean norm of the vector associated with the complex number "),qe=h(zn,"SPAN",{});var Ha=u(qe);Ha.forEach(a),me=o(zn,". Consequently, "),Ke=h(zn,"SPAN",{});var sr=u(Ke);sr.forEach(a),W=o(zn," is the square of this norm, and it's going to play an important role in what follows."),zn.forEach(a),de=S(B),G=h(B,"P",{});var Rt=u(G);gt=o(Rt,"Another important thing to note is that each 2-dimensional vector is uniquely defined by two properties: its length and angle of rotation. Consequently, a complex number "),Oe=h(Rt,"SPAN",{});var La=u(Oe);La.forEach(a),yt=o(Rt," can be expressed as "),Ye=h(Rt,"SPAN",{});var or=u(Ye);or.forEach(a),xt=o(Rt,", where "),it=h(Rt,"SPAN",{});var ks=u(it);ks.forEach(a),It=o(Rt,". Here, "),pt=h(Rt,"SPAN",{});var xa=u(pt);xa.forEach(a),jt=o(Rt," is a vector of unit length in the complex plane, rotated around the origin by an angle of "),D=h(Rt,"SPAN",{});var ir=u(D);ir.forEach(a),ct=o(Rt," ("),Qe=h(Rt,"SPAN",{});var Es=u(Qe);Es.forEach(a),je=o(Rt," corresponds to a full rotation). All we have to do to get back "),Nt=h(Rt,"SPAN",{});var Ia=u(Nt);Ia.forEach(a),Dt=o(Rt,", then, is multiply this rotated unit vector by "),Ht=h(Rt,"SPAN",{});var lr=u(Ht);lr.forEach(a),Ft=o(Rt," to adjust its norm."),Rt.forEach(a),Ge=S(B),Ut=h(B,"H2",{});var Gr=u(Ut);at=o(Gr,"Qubit states"),Gr.forEach(a),Ce=S(B),et=h(B,"P",{});var an=u(et);vt=o(an,"The elementary units of information in classical computing are "),Pe(ke.$$.fragment,an),Mt=o(an,". As their name suggests, bits represent one single "),Pe(ht.$$.fragment,an),Nn=o(an,", which means they can take on either of two values "),tt=h(an,"SPAN",{});var hr=u(tt);hr.forEach(a),rn=o(an," and "),St=h(an,"SPAN",{});var Ts=u(St);Ts.forEach(a),en=o(an," at a time."),an.forEach(a),un=S(B),Ve=h(B,"P",{});var Sn=u(Ve);Pe(se.$$.fragment,Sn),We=o(Sn," are the quantum computing equivalent of bits. They differ from classical bits - among other things - in that they can take on a multitude of values instead of just "),nt=h(Sn,"SPAN",{});var Kt=u(nt);Kt.forEach(a),rt=o(Sn," and "),Bt=h(Sn,"SPAN",{});var Ps=u(Bt);Ps.forEach(a),kn=o(Sn,", until that value is "),Pe(Ie.$$.fragment,Sn),En=o(Sn,", at which point they behave just like classical bits. To explain what this means exactly, we'll need to introduce some further concepts."),Sn.forEach(a),mn=S(B),ve=h(B,"P",{});var xe=u(ve);Tn=o(xe,"Let "),fn=h(xe,"SPAN",{});var Kr=u(fn);Kr.forEach(a),Ln=o(xe," and "),we=h(xe,"SPAN",{});var Fa=u(we);Fa.forEach(a),Mn=o(xe," denote the so called basis states of a qubit that are the quantum-equivalent of classical bit states. If you look at a qubit directly to learn it's value, you'll see one of these basis states. But while you're not looking - due to it's quantum nature - the "),Pe(pe.$$.fragment,xe),pn=o(xe," of a qubit may be something more intricate. Generally, it can be expressed as the "),Pe(Ue.$$.fragment,xe),Qt=o(xe," of the two basis states: "),cn=h(xe,"SPAN",{});var Qa=u(cn);Qa.forEach(a),ba=o(xe,". Here, "),dn=h(xe,"SPAN",{});var Yr=u(dn);Yr.forEach(a),va=o(xe," and "),wt=h(xe,"SPAN",{});var za=u(wt);za.forEach(a),Ct=o(xe," are complex numbers that indicate the relative weight, with which the two basis states are present in this combination. More precisely, if we now look at the qubit, we'll see the basis state "),xn=h(xe,"SPAN",{});var Xn=u(xn);Xn.forEach(a),sa=o(xe," with a probability of "),oa=h(xe,"SPAN",{});var po=u(oa);po.forEach(a),Ze=o(xe,", and the basis state "),ut=h(xe,"SPAN",{});var ur=u(ut);ur.forEach(a),Ur=o(xe," with a probability of "),Rn=h(xe,"SPAN",{});var vn=u(Rn);vn.forEach(a),ia=o(xe,". Because these probabilities must add up to one - as "),bn=h(xe,"SPAN",{});var Ms=u(bn);Ms.forEach(a),Ma=o(xe," and "),ye=h(xe,"SPAN",{});var Va=u(ye);Va.forEach(a),la=o(xe," are the only possible outcomes - the equation "),ha=h(xe,"SPAN",{});var Zr=u(ha);Zr.forEach(a),Kn=o(xe," must hold for all possible qubit states. Let's call "),Gt=h(xe,"SPAN",{});var Ba=u(Gt);Ba.forEach(a),ma=o(xe," and "),fa=h(xe,"SPAN",{});var Ca=u(fa);Ca.forEach(a),Sa=o(xe," the measurement probabilities of the basis states."),xe.forEach(a)},m(B,Ee){g(B,n,Ee),t(n,r),g(B,i,Ee),g(B,m,Ee),t(m,d),Me(_,m,null),t(m,p),t(m,v),v.innerHTML=b,t(m,k),t(m,w),w.innerHTML=N,t(m,$),t(m,I),I.innerHTML=X,t(m,O),t(m,H),H.innerHTML=j,t(m,V),t(m,A),A.innerHTML=z,t(m,q),Me(te,m,null),t(m,x),t(m,J),J.innerHTML=ne,t(m,Q),Me(P,m,null),t(m,L),t(m,re),re.innerHTML=Y,t(m,F),t(m,U),U.innerHTML=$e,t(m,ae),g(B,Ae,Ee),g(B,le,Ee),t(le,Z),Me(T,le,null),t(le,oe),t(le,ue),ue.innerHTML=st,t(le,He),t(le,ze),ze.innerHTML=dt,t(le,ge),g(B,Fe,Ee),g(B,Re,Ee),t(Re,ot),t(Re,Le),Le.innerHTML=ce,t(Re,qt),t(Re,qe),qe.innerHTML=ie,t(Re,me),t(Re,Ke),Ke.innerHTML=At,t(Re,W),g(B,de,Ee),g(B,G,Ee),t(G,gt),t(G,Oe),Oe.innerHTML=bt,t(G,yt),t(G,Ye),Ye.innerHTML=ft,t(G,xt),t(G,it),it.innerHTML=$t,t(G,It),t(G,pt),pt.innerHTML=lt,t(G,jt),t(G,D),D.innerHTML=be,t(G,ct),t(G,Qe),Qe.innerHTML=Pt,t(G,je),t(G,Nt),Nt.innerHTML=kt,t(G,Dt),t(G,Ht),Ht.innerHTML=Wt,t(G,Ft),g(B,Ge,Ee),g(B,Ut,Ee),t(Ut,at),g(B,Ce,Ee),g(B,et,Ee),t(et,vt),Me(ke,et,null),t(et,Mt),Me(ht,et,null),t(et,Nn),t(et,tt),tt.innerHTML=Ot,t(et,rn),t(et,St),St.innerHTML=sn,t(et,en),g(B,un,Ee),g(B,Ve,Ee),Me(se,Ve,null),t(Ve,We),t(Ve,nt),nt.innerHTML=Hn,t(Ve,rt),t(Ve,Bt),Bt.innerHTML=Cn,t(Ve,kn),Me(Ie,Ve,null),t(Ve,En),g(B,mn,Ee),g(B,ve,Ee),t(ve,Tn),t(ve,fn),fn.innerHTML=Pn,t(ve,Ln),t(ve,we),we.innerHTML=_t,t(ve,Mn),Me(pe,ve,null),t(ve,pn),Me(Ue,ve,null),t(ve,Qt),t(ve,cn),cn.innerHTML=_n,t(ve,ba),t(ve,dn),dn.innerHTML=tn,t(ve,va),t(ve,wt),wt.innerHTML=On,t(ve,Ct),t(ve,xn),xn.innerHTML=In,t(ve,sa),t(ve,oa),oa.innerHTML=wa,t(ve,Ze),t(ve,ut),ut.innerHTML=Fn,t(ve,Ur),t(ve,Rn),Rn.innerHTML=Gn,t(ve,ia),t(ve,bn),bn.innerHTML=Pa,t(ve,Ma),t(ve,ye),ye.innerHTML=nn,t(ve,la),t(ve,ha),ha.innerHTML=Qn,t(ve,Kn),t(ve,Gt),Gt.innerHTML=ua,t(ve,ma),t(ve,fa),fa.innerHTML=pa,t(ve,Sa),tr=!0,qa||(jn=[c(v,"mouseenter",e[0]),c(w,"mouseenter",e[1]),c(I,"mouseenter",e[2]),c(H,"mouseenter",e[3]),c(A,"mouseenter",e[4]),c(J,"mouseenter",e[5]),c(re,"mouseenter",e[6]),c(U,"mouseenter",e[7]),c(ue,"mouseenter",e[8]),c(ze,"mouseenter",e[9]),c(Le,"mouseenter",e[10]),c(qe,"mouseenter",e[11]),c(Ke,"mouseenter",e[12]),c(Oe,"mouseenter",e[13]),c(Ye,"mouseenter",e[14]),c(it,"mouseenter",e[15]),c(pt,"mouseenter",e[16]),c(D,"mouseenter",e[17]),c(Qe,"mouseenter",e[18]),c(Nt,"mouseenter",e[19]),c(Ht,"mouseenter",e[20]),c(tt,"mouseenter",e[21]),c(St,"mouseenter",e[22]),c(nt,"mouseenter",e[23]),c(Bt,"mouseenter",e[24]),c(fn,"mouseenter",e[25]),c(we,"mouseenter",e[26]),c(cn,"mouseenter",e[27]),c(dn,"mouseenter",e[28]),c(wt,"mouseenter",e[29]),c(xn,"mouseenter",e[30]),c(oa,"mouseenter",e[31]),c(ut,"mouseenter",e[32]),c(Rn,"mouseenter",e[33]),c(bn,"mouseenter",e[34]),c(ye,"mouseenter",e[35]),c(ha,"mouseenter",e[36]),c(Gt,"mouseenter",e[37]),c(fa,"mouseenter",e[38])],qa=!0)},p(B,Ee){const he={};Ee[1]&256&&(he.$$scope={dirty:Ee,ctx:B}),_.$set(he);const nr={};Ee[1]&256&&(nr.$$scope={dirty:Ee,ctx:B}),te.$set(nr);const Yn={};Ee[1]&256&&(Yn.$$scope={dirty:Ee,ctx:B}),P.$set(Yn);const ga={};Ee[1]&256&&(ga.$$scope={dirty:Ee,ctx:B}),T.$set(ga);const ar={};Ee[1]&256&&(ar.$$scope={dirty:Ee,ctx:B}),ke.$set(ar);const Zn={};Ee[1]&256&&(Zn.$$scope={dirty:Ee,ctx:B}),ht.$set(Zn);const ya={};Ee[1]&256&&(ya.$$scope={dirty:Ee,ctx:B}),se.$set(ya);const rr={};Ee[1]&256&&(rr.$$scope={dirty:Ee,ctx:B}),Ie.$set(rr);const Jn={};Ee[1]&256&&(Jn.$$scope={dirty:Ee,ctx:B}),pe.$set(Jn);const on={};Ee[1]&256&&(on.$$scope={dirty:Ee,ctx:B}),Ue.$set(on)},i(B){tr||(_e(_.$$.fragment,B),_e(te.$$.fragment,B),_e(P.$$.fragment,B),_e(T.$$.fragment,B),_e(ke.$$.fragment,B),_e(ht.$$.fragment,B),_e(se.$$.fragment,B),_e(Ie.$$.fragment,B),_e(pe.$$.fragment,B),_e(Ue.$$.fragment,B),tr=!0)},o(B){Ne(_.$$.fragment,B),Ne(te.$$.fragment,B),Ne(P.$$.fragment,B),Ne(T.$$.fragment,B),Ne(ke.$$.fragment,B),Ne(ht.$$.fragment,B),Ne(se.$$.fragment,B),Ne(Ie.$$.fragment,B),Ne(pe.$$.fragment,B),Ne(Ue.$$.fragment,B),tr=!1},d(B){B&&a(n),B&&a(i),B&&a(m),Se(_),Se(te),Se(P),B&&a(Ae),B&&a(le),Se(T),B&&a(Fe),B&&a(Re),B&&a(de),B&&a(G),B&&a(Ge),B&&a(Ut),B&&a(Ce),B&&a(et),Se(ke),Se(ht),B&&a(un),B&&a(Ve),Se(se),Se(Ie),B&&a(mn),B&&a(ve),Se(pe),Se(Ue),qa=!1,er(jn)}}}function De(e){console.log(e)}function Pf(e){return[()=>De(["z","C"]),()=>De(["z","a","b"]),()=>De(["R","a","b"]),()=>De([]),()=>De(["a"]),()=>De(["b"]),()=>De(["z"]),()=>De(["a"]),()=>De(["x"]),()=>De(["y"]),()=>De(["z","a","b"]),()=>De(["z"]),()=>De(["z","a","b"]),()=>De(["z"]),()=>De(["z","\\phi"]),()=>De(["z","\\phi"]),()=>De(["z","\\phi"]),()=>De(["z","\\phi"]),()=>De([]),()=>De(["z"]),()=>De(["z"]),()=>De([]),()=>De([]),()=>De([]),()=>De([]),()=>De([]),()=>De([]),()=>De(["\\beta","\\alpha"]),()=>De(["\\alpha"]),()=>De(["\\beta"]),()=>De([]),()=>De(["\\alpha"]),()=>De([]),()=>De(["\\beta"]),()=>De([]),()=>De([]),()=>De(["\\beta","\\alpha"]),()=>De(["\\alpha"]),()=>De(["\\beta"])]}class Mf extends na{constructor(n){super(),aa(this,n,Pf,Tf,ra,{},null,[-1,-1])}}const Sf='<a href="https://en.wikipedia.org/wiki/Separable_state"><h3>Separable state</h3></a><p>In quantum mechanics, <b>separable states</b> are quantum states belonging to a composite space that can be factored into individual states belonging to separate subspaces. A state is said to be entangled if it is not separable. In general, determining if a state is separable is not straightforward and the problem is classed as NP-hard.</p>',qf='<a href="https://en.wikipedia.org/wiki/Quantum_entanglement"><h3>Quantum entanglement</h3></a><p><b>Quantum entanglement</b> is the physical phenomenon that occurs when a group of particles are generated, interact, or share spatial proximity in a way such that the quantum state of each particle of the group cannot be described independently of the state of the others, including when the particles are separated by a large distance. The topic of quantum entanglement is at the heart of the disparity between classical and quantum physics: entanglement is a primary feature of quantum mechanics lacking in classical mechanics.</p>',Af='<a href="https://en.wikipedia.org/wiki/Quantum_register"><h3>Quantum register</h3></a><p>In quantum computing, a <b>quantum register</b> is a system comprising multiple qubits. It is the quantum analogue of the classical processor register. Quantum computers perform calculations by manipulating qubits within a quantum register.</p>',Hf='<a href="https://en.wikipedia.org/wiki/Operator_(physics)"><h3>Operator (physics)</h3></a><p>In physics, an <b>operator</b> is a function over a space of physical states onto another space of physical states. The simplest example of the utility of operators is the study of symmetry. Because of this, they are very useful tools in classical mechanics. Operators are even more important in quantum mechanics, where they form an intrinsic part of the formulation of the theory.</p>',Lf=`<a href="https://en.wikipedia.org/wiki/Quantum_circuit"><h3>Quantum circuit</h3></a><p>In quantum information theory, a <b>quantum circuit</b> is a model for quantum computation, similar to classical circuits, in which a computation is a sequence of quantum gates, measurements, initializations of qubits to known values, and possibly other actions. The minimum set of actions that a circuit needs to be able to perform on the qubits to enable quantum computation is known as DiVincenzo's criteria.</p>`,xf='<a href="https://en.wikipedia.org/wiki/Quantum_logic_gate"><h3>Quantum logic gate</h3></a><p>In quantum computing and specifically the quantum circuit model of computation, a <b>quantum logic gate</b> is a basic quantum circuit operating on a small number of qubits. They are the building blocks of quantum circuits, like classical logic gates are for conventional digital circuits.</p>';function If(e){let n;return{c(){n=s("separable")},l(r){n=o(r,"separable")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Ff(e){let n;return{c(){n=s("entaglement")},l(r){n=o(r,"entaglement")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Qf(e){let n;return{c(){n=s("quantum register")},l(r){n=o(r,"quantum register")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function zf(e){let n;return{c(){n=s("Quantum operators")},l(r){n=o(r,"Quantum operators")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Vf(e){let n;return{c(){n=s("quantum circuit")},l(r){n=o(r,"quantum circuit")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Bf(e){let n;return{c(){n=s("quantum logic gates")},l(r){n=o(r,"quantum logic gates")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Cf(e){let n,r,i,m,d,_,p,v,b,k,w=f("|0\\rangle")+"",N,$,I=f("|1\\rangle")+"",X,O,H,j,V,A,z,q=f("|\\psi\\rangle")+"",te,x,J=f("n")+"",ne,Q,P=f("|\\psi\\rangle = \\left( \\alpha_1 |0\\rangle + \\beta_1 |1\\rangle \\right) \\otimes ... \\otimes \\left( \\alpha_n |0\\rangle + \\beta_n |1\\rangle \\right)")+"",L,re,Y=f("\\alpha_k, \\beta_k")+"",F,U,$e=f("k")+"",ae,Ae,le=f("\\otimes")+"",Z,T,oe,ue,st,He,ze,dt,ge,Fe,Re,ot,Le,ce,qt,qe,ie,me,Ke,At=f("U")+"",W,de,G=f("|\\psi\\rangle")+"",gt,Oe,bt=f("U|\\psi\\rangle")+"",yt,Ye,ft,xt,it,$t,It,pt,lt,jt;return _=new mt({props:{hovertext:Sf,$$slots:{default:[If]},$$scope:{ctx:e}}}),v=new mt({props:{hovertext:qf,$$slots:{default:[Ff]},$$scope:{ctx:e}}}),V=new mt({props:{hovertext:Af,$$slots:{default:[Qf]},$$scope:{ctx:e}}}),Fe=new mt({props:{hovertext:Hf,$$slots:{default:[zf]},$$scope:{ctx:e}}}),ot=new mt({props:{hovertext:Lf,$$slots:{default:[Vf]},$$scope:{ctx:e}}}),ce=new mt({props:{hovertext:xf,$$slots:{default:[Bf]},$$scope:{ctx:e}}}),{c(){n=l("h2"),r=s("Multiple qubits"),i=M(),m=l("p"),d=s("Most quantum algorithms require not only one, but several qubits. The states of these qubits may be "),Te(_.$$.fragment),p=s(", meaning they each contain one independent unit of information. However, it is possible for multiple qubits to share some information with each other, in which case they no longer have states of their own, but only one joint state. This is called "),Te(v.$$.fragment),b=s(", and it is another fundamental difference between classical and quantum computing. As an example, two qubits can be entangled in a way that, if we look at one of them and find it's in the basis state "),k=l("span"),N=s(", we learn immediately that the other one must be in the basis state "),$=l("span"),X=s(", and vice versa."),O=M(),H=l("p"),j=s("From now on, we'll refer to a sequence of qubits as a "),Te(V.$$.fragment),A=s(". Let "),z=l("span"),te=s(" denote the state of a register consisting of "),x=l("span"),ne=s(" qubits. If the qubits are separable, the state can be written as "),Q=l("span"),L=s(", where "),re=l("span"),F=s(" are the coefficients associated with the state of the "),U=l("span"),ae=s("-th qubit as described above, and the operator "),Ae=l("span"),Z=s(" indicates that none of the qubits are entagled with each other."),T=M(),oe=l("p"),ue=s("Note that the state of the register can also be written as a vector, but what you saw above and what we're going to use in the rest of the explanation is the alternative, so called Dirac or bra-ket notation."),st=M(),He=l("h2"),ze=s("Quantum circuits and algorithms"),dt=M(),ge=l("p"),Te(Fe.$$.fragment),Re=s(" are functions that act on the state of a quantum system. Quantum algorithms are sequences of specific quantum operators that modify the state of single or multiple qubits. The physical device that implements quantum algorithms is called a "),Te(ot.$$.fragment),Le=s(", the building blocks of which are "),Te(ce.$$.fragment),qt=s(" that correspond to the individual operators in the sequence."),qe=M(),ie=l("p"),me=s("For each quantum operator, there's a corresponding matrix and - as we mentioned above - the state of the register can be written as a vector, so the algebraic representation of an operator "),Ke=l("span"),W=s(" acting on the state "),de=l("span"),gt=s(" is essentially the matrix multiplication "),Oe=l("span"),yt=s(". You can think of this representation as the "),Ye=l("em"),ft=s("how"),xt=s(" of the algorithm, which we do not elaborate on here, in order to avoid overwhelming you with information. Instead, we only show "),it=l("em"),$t=s("what"),It=s(" a particular operator does to the state of the register, and leave it to your curiosity to go into further details.")},l(D){n=h(D,"H2",{});var be=u(n);r=o(be,"Multiple qubits"),be.forEach(a),i=S(D),m=h(D,"P",{});var ct=u(m);d=o(ct,"Most quantum algorithms require not only one, but several qubits. The states of these qubits may be "),Pe(_.$$.fragment,ct),p=o(ct,", meaning they each contain one independent unit of information. However, it is possible for multiple qubits to share some information with each other, in which case they no longer have states of their own, but only one joint state. This is called "),Pe(v.$$.fragment,ct),b=o(ct,", and it is another fundamental difference between classical and quantum computing. As an example, two qubits can be entangled in a way that, if we look at one of them and find it's in the basis state "),k=h(ct,"SPAN",{});var Qe=u(k);Qe.forEach(a),N=o(ct,", we learn immediately that the other one must be in the basis state "),$=h(ct,"SPAN",{});var Pt=u($);Pt.forEach(a),X=o(ct,", and vice versa."),ct.forEach(a),O=S(D),H=h(D,"P",{});var je=u(H);j=o(je,"From now on, we'll refer to a sequence of qubits as a "),Pe(V.$$.fragment,je),A=o(je,". Let "),z=h(je,"SPAN",{});var Nt=u(z);Nt.forEach(a),te=o(je," denote the state of a register consisting of "),x=h(je,"SPAN",{});var kt=u(x);kt.forEach(a),ne=o(je," qubits. If the qubits are separable, the state can be written as "),Q=h(je,"SPAN",{});var Dt=u(Q);Dt.forEach(a),L=o(je,", where "),re=h(je,"SPAN",{});var Ht=u(re);Ht.forEach(a),F=o(je," are the coefficients associated with the state of the "),U=h(je,"SPAN",{});var Wt=u(U);Wt.forEach(a),ae=o(je,"-th qubit as described above, and the operator "),Ae=h(je,"SPAN",{});var Ft=u(Ae);Ft.forEach(a),Z=o(je," indicates that none of the qubits are entagled with each other."),je.forEach(a),T=S(D),oe=h(D,"P",{});var Ge=u(oe);ue=o(Ge,"Note that the state of the register can also be written as a vector, but what you saw above and what we're going to use in the rest of the explanation is the alternative, so called Dirac or bra-ket notation."),Ge.forEach(a),st=S(D),He=h(D,"H2",{});var Ut=u(He);ze=o(Ut,"Quantum circuits and algorithms"),Ut.forEach(a),dt=S(D),ge=h(D,"P",{});var at=u(ge);Pe(Fe.$$.fragment,at),Re=o(at," are functions that act on the state of a quantum system. Quantum algorithms are sequences of specific quantum operators that modify the state of single or multiple qubits. The physical device that implements quantum algorithms is called a "),Pe(ot.$$.fragment,at),Le=o(at,", the building blocks of which are "),Pe(ce.$$.fragment,at),qt=o(at," that correspond to the individual operators in the sequence."),at.forEach(a),qe=S(D),ie=h(D,"P",{});var Ce=u(ie);me=o(Ce,"For each quantum operator, there's a corresponding matrix and - as we mentioned above - the state of the register can be written as a vector, so the algebraic representation of an operator "),Ke=h(Ce,"SPAN",{});var et=u(Ke);et.forEach(a),W=o(Ce," acting on the state "),de=h(Ce,"SPAN",{});var vt=u(de);vt.forEach(a),gt=o(Ce," is essentially the matrix multiplication "),Oe=h(Ce,"SPAN",{});var ke=u(Oe);ke.forEach(a),yt=o(Ce,". You can think of this representation as the "),Ye=h(Ce,"EM",{});var Mt=u(Ye);ft=o(Mt,"how"),Mt.forEach(a),xt=o(Ce," of the algorithm, which we do not elaborate on here, in order to avoid overwhelming you with information. Instead, we only show "),it=h(Ce,"EM",{});var ht=u(it);$t=o(ht,"what"),ht.forEach(a),It=o(Ce," a particular operator does to the state of the register, and leave it to your curiosity to go into further details."),Ce.forEach(a)},m(D,be){g(D,n,be),t(n,r),g(D,i,be),g(D,m,be),t(m,d),Me(_,m,null),t(m,p),Me(v,m,null),t(m,b),t(m,k),k.innerHTML=w,t(m,N),t(m,$),$.innerHTML=I,t(m,X),g(D,O,be),g(D,H,be),t(H,j),Me(V,H,null),t(H,A),t(H,z),z.innerHTML=q,t(H,te),t(H,x),x.innerHTML=J,t(H,ne),t(H,Q),Q.innerHTML=P,t(H,L),t(H,re),re.innerHTML=Y,t(H,F),t(H,U),U.innerHTML=$e,t(H,ae),t(H,Ae),Ae.innerHTML=le,t(H,Z),g(D,T,be),g(D,oe,be),t(oe,ue),g(D,st,be),g(D,He,be),t(He,ze),g(D,dt,be),g(D,ge,be),Me(Fe,ge,null),t(ge,Re),Me(ot,ge,null),t(ge,Le),Me(ce,ge,null),t(ge,qt),g(D,qe,be),g(D,ie,be),t(ie,me),t(ie,Ke),Ke.innerHTML=At,t(ie,W),t(ie,de),de.innerHTML=G,t(ie,gt),t(ie,Oe),Oe.innerHTML=bt,t(ie,yt),t(ie,Ye),t(Ye,ft),t(ie,xt),t(ie,it),t(it,$t),t(ie,It),pt=!0,lt||(jt=[c(k,"mouseenter",e[0]),c($,"mouseenter",e[1]),c(z,"mouseenter",e[2]),c(x,"mouseenter",e[3]),c(Q,"mouseenter",e[4]),c(re,"mouseenter",e[5]),c(U,"mouseenter",e[6]),c(Ae,"mouseenter",e[7]),c(Ke,"mouseenter",e[8]),c(de,"mouseenter",e[9]),c(Oe,"mouseenter",e[10])],lt=!0)},p(D,[be]){const ct={};be&2048&&(ct.$$scope={dirty:be,ctx:D}),_.$set(ct);const Qe={};be&2048&&(Qe.$$scope={dirty:be,ctx:D}),v.$set(Qe);const Pt={};be&2048&&(Pt.$$scope={dirty:be,ctx:D}),V.$set(Pt);const je={};be&2048&&(je.$$scope={dirty:be,ctx:D}),Fe.$set(je);const Nt={};be&2048&&(Nt.$$scope={dirty:be,ctx:D}),ot.$set(Nt);const kt={};be&2048&&(kt.$$scope={dirty:be,ctx:D}),ce.$set(kt)},i(D){pt||(_e(_.$$.fragment,D),_e(v.$$.fragment,D),_e(V.$$.fragment,D),_e(Fe.$$.fragment,D),_e(ot.$$.fragment,D),_e(ce.$$.fragment,D),pt=!0)},o(D){Ne(_.$$.fragment,D),Ne(v.$$.fragment,D),Ne(V.$$.fragment,D),Ne(Fe.$$.fragment,D),Ne(ot.$$.fragment,D),Ne(ce.$$.fragment,D),pt=!1},d(D){D&&a(n),D&&a(i),D&&a(m),Se(_),Se(v),D&&a(O),D&&a(H),Se(V),D&&a(T),D&&a(oe),D&&a(st),D&&a(He),D&&a(dt),D&&a(ge),Se(Fe),Se(ot),Se(ce),D&&a(qe),D&&a(ie),lt=!1,er(jt)}}}function Ja(e){console.log(e)}function Rf(e){return[()=>Ja([]),()=>Ja([]),()=>Ja(["\\psi"]),()=>Ja(["n"]),()=>Ja(["\\beta","n","\\alpha","\\psi"]),()=>Ja(["\\beta","k","\\alpha"]),()=>Ja(["k"]),()=>Ja([]),()=>Ja(["U"]),()=>Ja(["\\psi"]),()=>Ja(["U","\\psi"])]}class jf extends na{constructor(n){super(),aa(this,n,Rf,Cf,ra,{})}}function Df(e){let n,r,i,m,d,_,p,v,b,k,w,N,$,I,X=f("\\phi_\\alpha")+"",O,H,j,V=f("\\phi_\\beta")+"",A,z,q,te=f("r_\\alpha")+"",x,J,ne,Q,P,L,re,Y,F,U,$e,ae,Ae,le,Z;return m=new Mf({}),Y=new jh({props:{displayBloch:e[2],phiAlpha:e[4],phiBeta:e[3],rAlpha:e[5],blochClass:"col-lg-4 col-sm-12",vectorClass:"col-lg-4 col-sm-12"}}),U=new rf({}),ae=new jf({}),{c(){n=l("h2"),r=s("Quantum Basics"),i=M(),Te(m.$$.fragment),d=M(),_=l("div"),p=l("div"),v=l("div"),b=l("p"),k=s(`Play around with 2 representations of a single qubit. You adjust the view of the 3D Bloch
				sphere by clicking on the image and dragging.`),w=M(),N=l("div"),$=l("div"),I=new Et(!1),O=l("input"),H=M(),j=new Et(!1),A=l("input"),z=M(),q=new Et(!1),x=l("input"),J=M(),ne=l("b"),Q=s("Display Bloch sphere"),P=M(),L=l("input"),re=M(),Te(Y.$$.fragment),F=M(),Te(U.$$.fragment),$e=M(),Te(ae.$$.fragment),this.h()},l(T){n=h(T,"H2",{});var oe=u(n);r=o(oe,"Quantum Basics"),oe.forEach(a),i=S(T),Pe(m.$$.fragment,T),d=S(T),_=h(T,"DIV",{class:!0});var ue=u(_);p=h(ue,"DIV",{class:!0});var st=u(p);v=h(st,"DIV",{class:!0});var He=u(v);b=h(He,"P",{});var ze=u(b);k=o(ze,`Play around with 2 representations of a single qubit. You adjust the view of the 3D Bloch
				sphere by clicking on the image and dragging.`),ze.forEach(a),He.forEach(a),st.forEach(a),w=S(ue),N=h(ue,"DIV",{class:!0});var dt=u(N);$=h(dt,"DIV",{class:!0});var ge=u($);I=Tt(ge,!1),O=h(ge,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),H=S(ge),j=Tt(ge,!1),A=h(ge,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),z=S(ge),q=Tt(ge,!1),x=h(ge,"INPUT",{type:!0,min:!0,max:!0,step:!0,class:!0}),J=S(ge),ne=h(ge,"B",{});var Fe=u(ne);Q=o(Fe,"Display Bloch sphere"),Fe.forEach(a),P=S(ge),L=h(ge,"INPUT",{type:!0,style:!0,class:!0}),ge.forEach(a),re=S(dt),Pe(Y.$$.fragment,dt),dt.forEach(a),ue.forEach(a),F=S(T),Pe(U.$$.fragment,T),$e=S(T),Pe(ae.$$.fragment,T),this.h()},h(){R(v,"class","col-12"),R(p,"class","row mb-4"),I.a=O,R(O,"type","range"),R(O,"min",0),R(O,"max",360),R(O,"step",1),R(O,"class","svelte-unwbto"),j.a=A,R(A,"type","range"),R(A,"min",0),R(A,"max",360),R(A,"step",1),R(A,"class","svelte-unwbto"),q.a=x,R(x,"type","range"),R(x,"min",0),R(x,"max",1),R(x,"step",.01),R(x,"class","svelte-unwbto"),R(L,"type","checkbox"),Vh(L,"width","auto"),R(L,"class","svelte-unwbto"),R($,"class","col-lg-4 col-sm-12"),R(N,"class","row"),R(_,"class","interaction container")},m(T,oe){g(T,n,oe),t(n,r),g(T,i,oe),Me(m,T,oe),g(T,d,oe),g(T,_,oe),t(_,p),t(p,v),t(v,b),t(b,k),t(_,w),t(_,N),t(N,$),I.m(X,$),t($,O),Un(O,e[1]),t($,H),j.m(V,$),t($,A),Un(A,e[0]),t($,z),q.m(te,$),t($,x),Un(x,e[5]),t($,J),t($,ne),t(ne,Q),t($,P),t($,L),L.checked=e[2],t(N,re),Me(Y,N,null),g(T,F,oe),Me(U,T,oe),g(T,$e,oe),Me(ae,T,oe),Ae=!0,le||(Z=[c(O,"change",e[6]),c(O,"input",e[6]),c(A,"change",e[7]),c(A,"input",e[7]),c(x,"change",e[8]),c(x,"input",e[8]),c(L,"change",e[9])],le=!0)},p(T,[oe]){oe&2&&Un(O,T[1]),oe&1&&Un(A,T[0]),oe&32&&Un(x,T[5]),oe&4&&(L.checked=T[2]);const ue={};oe&4&&(ue.displayBloch=T[2]),oe&16&&(ue.phiAlpha=T[4]),oe&8&&(ue.phiBeta=T[3]),oe&32&&(ue.rAlpha=T[5]),Y.$set(ue)},i(T){Ae||(_e(m.$$.fragment,T),_e(Y.$$.fragment,T),_e(U.$$.fragment,T),_e(ae.$$.fragment,T),Ae=!0)},o(T){Ne(m.$$.fragment,T),Ne(Y.$$.fragment,T),Ne(U.$$.fragment,T),Ne(ae.$$.fragment,T),Ae=!1},d(T){T&&a(n),T&&a(i),Se(m,T),T&&a(d),T&&a(_),Se(Y),T&&a(F),Se(U,T),T&&a($e),Se(ae,T),le=!1,er(Z)}}}function Wf(e,n,r){let i,m,d,_,p,v=!0;function b(){i=Dr(this.value),r(1,i)}function k(){m=Dr(this.value),r(0,m)}function w(){d=Dr(this.value),r(5,d)}function N(){v=this.checked,r(2,v)}return e.$$.update=()=>{e.$$.dirty&2&&r(4,_=i/180*dl),e.$$.dirty&1&&r(3,p=m/180*dl)},r(1,i=15),r(0,m=310),r(5,d=.9),[m,i,v,p,_,d,b,k,w,N]}class Uf extends na{constructor(n){super(),aa(this,n,Wf,Df,ra,{})}}const Of='<a href="https://en.wikipedia.org/wiki/Periodic_function"><h3 class="text-lg font-semibold">Periodic function</h3></a><p>A <b>periodic function</b> is a function that repeats its values at regular intervals. For example, the trigonometric functions, which repeat at intervals of <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/73efd1f6493490b058097060a572606d2c550a06" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:2.494ex;height:2.176ex" /></span> radians, are periodic functions. Periodic functions are used throughout science to describe oscillations, waves, and other phenomena that exhibit periodicity. Any function that is not periodic is called <b>aperiodic</b>.</p>',Gf='<a href="https://en.wikipedia.org/wiki/Wave_interference"><h3>Wave interference</h3></a><p>In physics, <b>interference</b> is a phenomenon in which two waves combine by adding their displacement together at every single point in space and time, to form a resultant wave of greater, lower, or the same amplitude. <b>Constructive</b> and <b>destructive interference</b> result from the interaction of waves that are correlated or coherent with each other, either because they come from the same source or because they have the same or nearly the same frequency. Interference effects can be observed with all types of waves, for example, light, radio, acoustic, surface water waves, gravity waves, or matter waves.</p>';function Kf(e){let n;return{c(){n=s("periodic")},l(r){n=o(r,"periodic")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Yf(e){let n;return{c(){n=s("interfere")},l(r){n=o(r,"interfere")},m(r,i){g(r,n,i)},d(r){r&&a(n)}}}function Zf(e){let n,r,i,m,d,_,p=f("N")+"",v,b,k=f("1 < \\hat{r} < N")+"",w,N,$=f("f_{a, N}(\\hat{r}) = a^{\\hat{r}} \\mod N = 1")+"",I,X,O=f("f_{a, N}")+"",H,j,V,A,z=f("\\hat{r}")+"",q,te,x,J,ne,Q=f("g")+"",P,L,re=f("0 < p")+"",Y,F,U=f("g(x) = g(x + p)")+"",$e,ae,Ae=f("x")+"",le,Z,T=f("g")+"",oe,ue,st=f("g")+"",He,ze,dt=f("p")+"",ge,Fe,Re=f("f_{a, N}")+"",ot,Le,ce=f("\\mathbb{N}")+"",qt,qe,ie,me,Ke,At=f("\\hat{p} \\in \\mathbb{N}")+"",W,de,G=f("f_{a, N}")+"",gt,Oe,bt=f("f_{a, N}(0) = a^{0} \\mod N = 1 \\mod N = 1")+"",yt,Ye,ft=f("f_{a, N}(0) = f_{a, N}(0 + \\hat{p}) = f_{a, N}(\\hat{p}) = 1")+"",xt,it,$t=f("\\hat{p}")+"",It,pt,lt=f("f_{a, N}")+"",jt,D,be=f("1")+"",ct,Qe,Pt=f("\\hat{r}")+"",je,Nt,kt=f("\\hat{r} = \\hat{p}")+"",Dt,Ht,Wt,Ft,Ge,Ut=f("f_{a, N}")+"",at,Ce,et,vt,ke,Mt,ht,Nn,tt,Ot,rn,St=f("\\log_2N")+"",sn,en,un=f("N")+"",Ve,se,We=f("\\log_2N")+"",nt,Hn,rt,Bt,Cn,kn=f("\\log_2N \\leq n")+"",Ie,En,mn=f("|\\psi_1\\rangle, |\\psi_2\\rangle")+"",ve,Tn,fn=f("|0\\rangle")+"",Pn,Ln,we=f("|\\psi_1\\rangle = \\underbrace{|0\\rangle \\otimes \\ldots \\otimes |0\\rangle}_\\text{n terms}")+"",_t,Mn,pe,pn,Ue,Qt,cn,_n,ba=f("H")+"",dn,tn,va=f("|\\psi_1\\rangle = \\underbrace{\\frac{1}{\\sqrt{2}}(|0\\rangle + |1\\rangle) \\otimes \\ldots \\otimes \\frac{1}{\\sqrt{2}}(|0\\rangle + |1\\rangle)}_\\text{n terms}")+"",wt,On,Ct=f("\\frac{1}{\\sqrt{2}}")+"",xn,In,sa=f("|\\psi_1\\rangle = \\frac{1}{\\sqrt{2^n}}(|0\\rangle + |1\\rangle) \\otimes \\ldots \\otimes (|0\\rangle + |1\\rangle)")+"",oa,wa,Ze,ut,Fn,Ur=f("x")+"",Rn,Gn,ia=f("x")+"",bn,Pa,Ma=f("0")+"",ye,nn,la=f("2^n - 1")+"",ha,Qn,Kn=f("|\\psi_1\\rangle = \\displaystyle{\\frac{1}{\\sqrt{2^n}}\\sum_{x=0}^{2^n-1}|x\\rangle}")+"",Gt,ua,ma=f("x")+"",fa,pa,Sa=f("\\frac{1}{2^n}")+"",tr,qa,jn,B,Ee,he,nr,Yn,ga=f("|1\\rangle")+"",ar,Zn,ya=f("|\\psi_2\\rangle = \\underbrace{|0\\rangle \\otimes \\ldots \\otimes |0\\rangle}_\\text{n terms}")+"",rr,Jn,on=f("y")+"",$s,Aa,zn=f("x")+"",Ns,Ha,sr=f("f_{a, N}(x) = a^x \\mod N")+"",Rt,La,or=f("x")+"",ks,xa,ir=f("0")+"",Es,Ia,lr=f("2^n - 1")+"",Gr,an,hr=f("y = a^x \\mod N")+"",Ts,Sn,Kt,Ps,xe,Kr=f("x")+"",Fa,Qa,Yr=f("y = a^x \\mod N")+"",za,Xn,po=f("x")+"",ur,vn,Ms=f("\\displaystyle{|\\psi_2\\rangle = \\sum_{x=0}^{2^n - 1} |y\\rangle = \\sum_{x=0}^{2^n - 1} |a^x \\mod N\\rangle}")+"",Va,Zr,Ba,Ca,Us,Be,Jr,ea,mr=f("y")+"",fr,Xr,co=f("|\\psi_2")+"",pr,es,_o=f("\\psi_1")+"",Ss,ta,ts=f("y")+"",bo,cr,ns=f("x")+"",vo,_r,Os=f("y")+"",dr,br,Gs=f("x")+"",Dn,vr,as=f("a^x \\mod N = y")+"",wo,wr,qs=f("x")+"",As,gr,Hs=f("f_{a, N}")+"",Ls,yr,Ks=f("\\hat{p}")+"",Ra,$r,xs=f("\\hat{p}")+"",Is,Nr,Ys=f("0 \\leq x_0, \\ldots, x_k < 2^n")+"",kr,$a,fi=f("\\displaystyle{|\\psi_1\\rangle = \\sum_{i=0}^{k} |x_i\\rangle}")+"",rs,Na,ss=f("x_{i + 1} - x_i = \\hat{p}")+"",go,Ga,os=f("i < k")+"",Fs,Or,ka,Er,Zs,wn,ca,Tr,is=f("x")+"",yo,Pr,ls=f("\\displaystyle{|\\psi_1\\rangle = \\frac{1}{\\sqrt{2^n}} \\sum_{y=0}^{2^n - 1} e^{\\frac{2 \\pi i x y}{2^n}} |y\\rangle}")+"",$o,Mr,Js=f("x")+"",Sr,Ea,pi=f("\\displaystyle{|\\psi_1\\rangle = \\frac{1}{\\sqrt{2^n}} \\sum_{i=0}^{k} \\sum_{x=0}^{2^n - 1} e^{\\frac{2 \\pi i x_i y}{2^n}} |x\\rangle}")+"",hs,Yt,qr,Ar,Xs,Jt,Hr,us,No=f("x")+"",Lr,ms,ko=f("x")+"",xr,fs,Eo=f("x_0, \\ldots, x_k")+"",Ir,Fr,Qs,Ta,ci=f("x_0, \\ldots, x_k")+"",zs,Ka,ps=f("1")+"",Qr,eo,gn,zr,Vr,to=f("x")+"",ln,Br,cs=f("x")+"",To,Cr,_s=f("\\frac{j\\cdot N}{\\hat{p}}")+"",Po,Rr,ds=f("j = 0, \\ldots, \\hat{p} - 1")+"",Mo,bs,jr,Fo;return j=new mt({props:{hovertext:Of,$$slots:{default:[Kf]},$$scope:{ctx:e}}}),Fr=new mt({props:{hovertext:Gf,$$slots:{default:[Yf]},$$scope:{ctx:e}}}),{c(){n=l("h2"),r=s("The period-finding problem"),i=M(),m=l("p"),d=s("Recall the steps for computing the prime factors of a large integer "),_=l("span"),v=s(", the hard part of which was finding the smallest "),b=l("span"),w=s(" such that "),N=l("span"),I=s(". It turns out that "),X=l("span"),H=s(" is a "),Te(j.$$.fragment),V=s(" function, and below we'll show that the number "),A=l("span"),q=s(" we're looking for is exactly its period."),te=M(),x=l("p"),J=s("In general, the period of a function "),ne=l("span"),P=s(" is defined as the smallest positive number "),L=l("span"),Y=s(", for which "),F=l("span"),$e=s(" for all "),ae=l("span"),le=s(" in the domain of "),Z=l("span"),oe=s(". (In other words, "),ue=l("span"),He=s(" is a repeating sequence of the same pattern with length "),ze=l("span"),ge=s(".) Specifically for "),Fe=l("span"),ot=s(", because its domain is "),Le=l("span"),qt=s(", its period has to be an integer."),qe=M(),ie=l("p"),me=s("Let "),Ke=l("span"),W=s(" denote the period of "),de=l("span"),gt=s(". We know for sure that "),Oe=l("span"),yt=s(", from which follows that "),Ye=l("span"),xt=s(". Thus, the "),it=l("span"),It=s(" is the smallest positive integer, for which the value of "),pt=l("span"),jt=s(" equals "),D=l("span"),ct=s(". Notice that this is exactly how we originally defined "),Qe=l("span"),je=s(", and so "),Nt=l("span"),Dt=s("."),Ht=M(),Wt=l("p"),Ft=s("Thus, the factoring problem can essentially be reformulated as the problem of finding the period of the function "),Ge=l("span"),at=s(", for which the quantum Fourier transform turns out to be really useful."),Ce=M(),et=l("h2"),vt=s("The algorithm"),ke=M(),Mt=l("h4"),ht=s("Step 1."),Nn=M(),tt=l("p"),Ot=s("In order to implement Shor's algorithm, we'll need two quantum register with at least "),rn=l("span"),sn=s(" qubits, as that is the number of digits required to represent "),en=l("span"),Ve=s(" in binary notation. (In case "),se=l("span"),nt=s(" is not an integer, we have to round it up.) Note that this is a lower limit, and the more qubits we use, the faster we'll find the solution."),Hn=M(),rt=l("p"),Bt=s("Let "),Cn=l("span"),Ie=s(" denote the number of qubits we chose to construct the both registers, and "),En=l("span"),ve=s(" the current state of the two registers. Let's ignore the second register for now, and start with all qubits of the first register being in the basis state "),Tn=l("span"),Pn=s(", thus we can write its state as "),Ln=l("span"),_t=s("."),Mn=M(),pe=l("h4"),pn=s("Step 2."),Ue=M(),Qt=l("p"),cn=s("Next, we apply the so called "),_n=l("span"),dn=s(" (Hadamard) gate to each qubit of the first register, in order to set them into an equal superposition of the two basis states. This means the state of the register is now "),tn=l("span"),wt=s(". We can factor out the "),On=l("span"),xn=s(" terms to obtain "),In=l("span"),oa=s("."),wa=M(),Ze=l("p"),ut=s("Let "),Fn=l("span"),Rn=s(" denote the number represented by the qubits of the first register (that is, the number we get if we read out the state as a sequence of binary digits). As we already saw in the case of the QFT, each qubit being in an equal superposition of the two basis states translates to the entire register being in the superposition of all combinations of these basis states, and consequently "),Gn=l("span"),bn=s(" being in the superposition of all values from "),Pa=l("span"),ye=s(" to "),nn=l("span"),ha=s(". Let's express the state as the superposition of these values: "),Qn=l("span"),Gt=s(". Thus, if we now measure the entire register and read out "),ua=l("span"),fa=s(", we're going to get each possible value with an equal probability of "),pa=l("span"),tr=s("."),qa=M(),jn=l("h4"),B=s("Step 3."),Ee=M(),he=l("p"),nr=s("This is the point where the second register enters the picture. We begin with all qubits of this register being in the basis state "),Yn=l("span"),ar=s(", so "),Zn=l("span"),rr=s(". Let "),Jn=l("span"),$s=s(" denote the number represented by the second register, analogously to "),Aa=l("span"),Ns=s(". Next, we apply a combination of gates to entangle the qubits of the two registers in a special way, in order to implement the function "),Ha=l("span"),Rt=s(". To see what this means, let's take a step back and assume all qubits of the first register are in one particular basis state, and so "),La=l("span"),ks=s(" is a definite value between "),xa=l("span"),Es=s(" and "),Ia=l("span"),Gr=s(", instead of a superposition of values. If we now applied the current step of the algorithm to the registers, it would set "),an=l("span"),Ts=s("."),Sn=M(),Kt=l("p"),Ps=s("But because in our case the first register is actually in a superposition of all possible values of "),xe=l("span"),Fa=s(", after this step, the second register is also going to be in a superposition of representing "),Qa=l("span"),za=s(" for all values of "),Xn=l("span"),ur=s(". Thus, we can write its state as "),vn=l("span"),Va=s("."),Zr=M(),Ba=l("h4"),Ca=s("Step 4."),Us=M(),Be=l("p"),Jr=s("Next, we measure the second register. This will make all qubits of the second register into one of the basis states randomly, and so "),ea=l("span"),fr=s(" will take on a definite value. Furthermore, the measurement will not only modify "),Xr=l("span"),pr=s(", but also "),es=l("span"),Ss=s(", because the qubits of the two registers are entangled. The value of "),ta=l("span"),bo=s(" is a function of the value of "),cr=l("span"),vo=s(", and so if we measure a particular "),_r=l("span"),dr=s(", the superposition of the first register can only contains those values of "),br=l("span"),Dn=s(" that are consistent with the measurement, namely for which "),vr=l("span"),wo=s(". So, although the measurement does not make the superposition of the first register disappear entirely, it filters it to the values of "),wr=l("span"),As=s(" that fulfil this criterion. And because "),gr=l("span"),Ls=s(" is a repeating pattern with period "),yr=l("span"),Ra=s(", those values are going to be "),$r=l("span"),Is=s(" apart from each other. Let the sequence "),Nr=l("span"),kr=s(" denote these values. Thus, we can write the state of the first register as "),$a=l("span"),rs=s(", where "),Na=l("span"),go=s(" for all "),Ga=l("span"),Fs=s("."),Or=M(),ka=l("h4"),Er=s("Step 5."),Zs=M(),wn=l("p"),ca=s("Now, we apply the QFT to the first register. For a definite value of "),Tr=l("span"),yo=s(", this would yield the state "),Pr=l("span"),$o=s(". But just like above, the register is in a superposition, and so the state after is going to be a linear combination of the QFT for all values of "),Mr=l("span"),Sr=s(": "),Ea=l("span"),hs=s("."),Yt=M(),qr=l("h4"),Ar=s("Step 6."),Xs=M(),Jt=l("p"),Hr=s("We saw in the section on the QFT that for a given "),us=l("span"),Lr=s(", the resulting phases form a sinusoidal wave pattern with a frequency of "),ms=l("span"),xr=s(". In this case, because of the superposition, the resulting phases are going to form a linear combination of sinusoidal wave patterns with frequencies "),fs=l("span"),Ir=s(". And this is the key to the solution, because these waves are going to "),Te(Fr.$$.fragment),Qs=s(" with each other in a particular way. Remember that the phases generated by the QFT were complex vectors of unit length. Now, we're adding those vectors together for "),Ta=l("span"),zs=s(", and so the length of the resulting vectors will no longer be "),Ka=l("span"),Qr=s("."),eo=M(),gn=l("p"),zr=s("Instead, at certain points (values of "),Vr=l("span"),ln=s("), the waves constructively interfere, meaning their displacements sum up to a large positive or negative value, and so the measurement probabilities of those points get amplified. At other points, the displacements cancel each other out, leading to probability amplitudes near zero. If we then measure the register and read out the represented value "),Br=l("span"),To=s(", it's most likely going to be one of the points of constructive interference. And the points, at which this constructive interference happens are related to the period in a special way. Namely, they are the points "),Cr=l("span"),Po=s(" for "),Rr=l("span"),Mo=s(". Thus, all we have to do now is measure the final state of the first register a sufficient number of times to get a statistically reliable estimation of the period.")},l(E){n=h(E,"H2",{});var fe=u(n);r=o(fe,"The period-finding problem"),fe.forEach(a),i=S(E),m=h(E,"P",{});var yn=u(m);d=o(yn,"Recall the steps for computing the prime factors of a large integer "),_=h(yn,"SPAN",{});var vs=u(_);vs.forEach(a),v=o(yn,", the hard part of which was finding the smallest "),b=h(yn,"SPAN",{});var no=u(b);no.forEach(a),w=o(yn," such that "),N=h(yn,"SPAN",{});var So=u(N);So.forEach(a),I=o(yn,". It turns out that "),X=h(yn,"SPAN",{});var Qo=u(X);Qo.forEach(a),H=o(yn," is a "),Pe(j.$$.fragment,yn),V=o(yn," function, and below we'll show that the number "),A=h(yn,"SPAN",{});var y=u(A);y.forEach(a),q=o(yn," we're looking for is exactly its period."),yn.forEach(a),te=S(E),x=h(E,"P",{});var C=u(x);J=o(C,"In general, the period of a function "),ne=h(C,"SPAN",{});var Vs=u(ne);Vs.forEach(a),P=o(C," is defined as the smallest positive number "),L=h(C,"SPAN",{});var Vn=u(L);Vn.forEach(a),Y=o(C,", for which "),F=h(C,"SPAN",{});var _i=u(F);_i.forEach(a),$e=o(C," for all "),ae=h(C,"SPAN",{});var di=u(ae);di.forEach(a),le=o(C," in the domain of "),Z=h(C,"SPAN",{});var bi=u(Z);bi.forEach(a),oe=o(C,". (In other words, "),ue=h(C,"SPAN",{});var vi=u(ue);vi.forEach(a),He=o(C," is a repeating sequence of the same pattern with length "),ze=h(C,"SPAN",{});var wi=u(ze);wi.forEach(a),ge=o(C,".) Specifically for "),Fe=h(C,"SPAN",{});var qn=u(Fe);qn.forEach(a),ot=o(C,", because its domain is "),Le=h(C,"SPAN",{});var gi=u(Le);gi.forEach(a),qt=o(C,", its period has to be an integer."),C.forEach(a),qe=S(E),ie=h(E,"P",{});var Xt=u(ie);me=o(Xt,"Let "),Ke=h(Xt,"SPAN",{});var yi=u(Ke);yi.forEach(a),W=o(Xt," denote the period of "),de=h(Xt,"SPAN",{});var $i=u(de);$i.forEach(a),gt=o(Xt,". We know for sure that "),Oe=h(Xt,"SPAN",{});var Ni=u(Oe);Ni.forEach(a),yt=o(Xt,", from which follows that "),Ye=h(Xt,"SPAN",{});var ki=u(Ye);ki.forEach(a),xt=o(Xt,". Thus, the "),it=h(Xt,"SPAN",{});var zo=u(it);zo.forEach(a),It=o(Xt," is the smallest positive integer, for which the value of "),pt=h(Xt,"SPAN",{});var hn=u(pt);hn.forEach(a),jt=o(Xt," equals "),D=h(Xt,"SPAN",{});var Ei=u(D);Ei.forEach(a),ct=o(Xt,". Notice that this is exactly how we originally defined "),Qe=h(Xt,"SPAN",{});var Ti=u(Qe);Ti.forEach(a),je=o(Xt,", and so "),Nt=h(Xt,"SPAN",{});var Pi=u(Nt);Pi.forEach(a),Dt=o(Xt,"."),Xt.forEach(a),Ht=S(E),Wt=h(E,"P",{});var ao=u(Wt);Ft=o(ao,"Thus, the factoring problem can essentially be reformulated as the problem of finding the period of the function "),Ge=h(ao,"SPAN",{});var Mi=u(Ge);Mi.forEach(a),at=o(ao,", for which the quantum Fourier transform turns out to be really useful."),ao.forEach(a),Ce=S(E),et=h(E,"H2",{});var Vo=u(et);vt=o(Vo,"The algorithm"),Vo.forEach(a),ke=S(E),Mt=h(E,"H4",{});var Bo=u(Mt);ht=o(Bo,"Step 1."),Bo.forEach(a),Nn=S(E),tt=h(E,"P",{});var $n=u(tt);Ot=o($n,"In order to implement Shor's algorithm, we'll need two quantum register with at least "),rn=h($n,"SPAN",{});var Si=u(rn);Si.forEach(a),sn=o($n," qubits, as that is the number of digits required to represent "),en=h($n,"SPAN",{});var qi=u(en);qi.forEach(a),Ve=o($n," in binary notation. (In case "),se=h($n,"SPAN",{});var Ai=u(se);Ai.forEach(a),nt=o($n," is not an integer, we have to round it up.) Note that this is a lower limit, and the more qubits we use, the faster we'll find the solution."),$n.forEach(a),Hn=S(E),rt=h(E,"P",{});var ja=u(rt);Bt=o(ja,"Let "),Cn=h(ja,"SPAN",{});var zt=u(Cn);zt.forEach(a),Ie=o(ja," denote the number of qubits we chose to construct the both registers, and "),En=h(ja,"SPAN",{});var Hi=u(En);Hi.forEach(a),ve=o(ja," the current state of the two registers. Let's ignore the second register for now, and start with all qubits of the first register being in the basis state "),Tn=h(ja,"SPAN",{});var Li=u(Tn);Li.forEach(a),Pn=o(ja,", thus we can write its state as "),Ln=h(ja,"SPAN",{});var xi=u(Ln);xi.forEach(a),_t=o(ja,"."),ja.forEach(a),Mn=S(E),pe=h(E,"H4",{});var Co=u(pe);pn=o(Co,"Step 2."),Co.forEach(a),Ue=S(E),Qt=h(E,"P",{});var Da=u(Qt);cn=o(Da,"Next, we apply the so called "),_n=h(Da,"SPAN",{});var Ii=u(_n);Ii.forEach(a),dn=o(Da," (Hadamard) gate to each qubit of the first register, in order to set them into an equal superposition of the two basis states. This means the state of the register is now "),tn=h(Da,"SPAN",{});var Fi=u(tn);Fi.forEach(a),wt=o(Da,". We can factor out the "),On=h(Da,"SPAN",{});var Qi=u(On);Qi.forEach(a),xn=o(Da," terms to obtain "),In=h(Da,"SPAN",{});var zi=u(In);zi.forEach(a),oa=o(Da,"."),Da.forEach(a),wa=S(E),Ze=h(E,"P",{});var An=u(Ze);ut=o(An,"Let "),Fn=h(An,"SPAN",{});var Vi=u(Fn);Vi.forEach(a),Rn=o(An," denote the number represented by the qubits of the first register (that is, the number we get if we read out the state as a sequence of binary digits). As we already saw in the case of the QFT, each qubit being in an equal superposition of the two basis states translates to the entire register being in the superposition of all combinations of these basis states, and consequently "),Gn=h(An,"SPAN",{});var Ro=u(Gn);Ro.forEach(a),bn=o(An," being in the superposition of all values from "),Pa=h(An,"SPAN",{});var ro=u(Pa);ro.forEach(a),ye=o(An," to "),nn=h(An,"SPAN",{});var Bi=u(nn);Bi.forEach(a),ha=o(An,". Let's express the state as the superposition of these values: "),Qn=h(An,"SPAN",{});var jo=u(Qn);jo.forEach(a),Gt=o(An,". Thus, if we now measure the entire register and read out "),ua=h(An,"SPAN",{});var Ci=u(ua);Ci.forEach(a),fa=o(An,", we're going to get each possible value with an equal probability of "),pa=h(An,"SPAN",{});var so=u(pa);so.forEach(a),tr=o(An,"."),An.forEach(a),qa=S(E),jn=h(E,"H4",{});var Do=u(jn);B=o(Do,"Step 3."),Do.forEach(a),Ee=S(E),he=h(E,"P",{});var Zt=u(he);nr=o(Zt,"This is the point where the second register enters the picture. We begin with all qubits of this register being in the basis state "),Yn=h(Zt,"SPAN",{});var Ri=u(Yn);Ri.forEach(a),ar=o(Zt,", so "),Zn=h(Zt,"SPAN",{});var Je=u(Zn);Je.forEach(a),rr=o(Zt,". Let "),Jn=h(Zt,"SPAN",{});var ji=u(Jn);ji.forEach(a),$s=o(Zt," denote the number represented by the second register, analogously to "),Aa=h(Zt,"SPAN",{});var Di=u(Aa);Di.forEach(a),Ns=o(Zt,". Next, we apply a combination of gates to entangle the qubits of the two registers in a special way, in order to implement the function "),Ha=h(Zt,"SPAN",{});var Wi=u(Ha);Wi.forEach(a),Rt=o(Zt,". To see what this means, let's take a step back and assume all qubits of the first register are in one particular basis state, and so "),La=h(Zt,"SPAN",{});var Ui=u(La);Ui.forEach(a),ks=o(Zt," is a definite value between "),xa=h(Zt,"SPAN",{});var Oi=u(xa);Oi.forEach(a),Es=o(Zt," and "),Ia=h(Zt,"SPAN",{});var Gi=u(Ia);Gi.forEach(a),Gr=o(Zt,", instead of a superposition of values. If we now applied the current step of the algorithm to the registers, it would set "),an=h(Zt,"SPAN",{});var Ki=u(an);Ki.forEach(a),Ts=o(Zt,"."),Zt.forEach(a),Sn=S(E),Kt=h(E,"P",{});var Wa=u(Kt);Ps=o(Wa,"But because in our case the first register is actually in a superposition of all possible values of "),xe=h(Wa,"SPAN",{});var Yi=u(xe);Yi.forEach(a),Fa=o(Wa,", after this step, the second register is also going to be in a superposition of representing "),Qa=h(Wa,"SPAN",{});var Zi=u(Qa);Zi.forEach(a),za=o(Wa," for all values of "),Xn=h(Wa,"SPAN",{});var Ji=u(Xn);Ji.forEach(a),ur=o(Wa,". Thus, we can write its state as "),vn=h(Wa,"SPAN",{});var Xi=u(vn);Xi.forEach(a),Va=o(Wa,"."),Wa.forEach(a),Zr=S(E),Ba=h(E,"H4",{});var Wo=u(Ba);Ca=o(Wo,"Step 4."),Wo.forEach(a),Us=S(E),Be=h(E,"P",{});var Xe=u(Be);Jr=o(Xe,"Next, we measure the second register. This will make all qubits of the second register into one of the basis states randomly, and so "),ea=h(Xe,"SPAN",{});var el=u(ea);el.forEach(a),fr=o(Xe," will take on a definite value. Furthermore, the measurement will not only modify "),Xr=h(Xe,"SPAN",{});var tl=u(Xr);tl.forEach(a),pr=o(Xe,", but also "),es=h(Xe,"SPAN",{});var Uo=u(es);Uo.forEach(a),Ss=o(Xe,", because the qubits of the two registers are entangled. The value of "),ta=h(Xe,"SPAN",{});var Oo=u(ta);Oo.forEach(a),bo=o(Xe," is a function of the value of "),cr=h(Xe,"SPAN",{});var nl=u(cr);nl.forEach(a),vo=o(Xe,", and so if we measure a particular "),_r=h(Xe,"SPAN",{});var ws=u(_r);ws.forEach(a),dr=o(Xe,", the superposition of the first register can only contains those values of "),br=h(Xe,"SPAN",{});var al=u(br);al.forEach(a),Dn=o(Xe," that are consistent with the measurement, namely for which "),vr=h(Xe,"SPAN",{});var rl=u(vr);rl.forEach(a),wo=o(Xe,". So, although the measurement does not make the superposition of the first register disappear entirely, it filters it to the values of "),wr=h(Xe,"SPAN",{});var oo=u(wr);oo.forEach(a),As=o(Xe," that fulfil this criterion. And because "),gr=h(Xe,"SPAN",{});var Bs=u(gr);Bs.forEach(a),Ls=o(Xe," is a repeating pattern with period "),yr=h(Xe,"SPAN",{});var sl=u(yr);sl.forEach(a),Ra=o(Xe,", those values are going to be "),$r=h(Xe,"SPAN",{});var ol=u($r);ol.forEach(a),Is=o(Xe," apart from each other. Let the sequence "),Nr=h(Xe,"SPAN",{});var Cs=u(Nr);Cs.forEach(a),kr=o(Xe," denote these values. Thus, we can write the state of the first register as "),$a=h(Xe,"SPAN",{});var il=u($a);il.forEach(a),rs=o(Xe,", where "),Na=h(Xe,"SPAN",{});var ll=u(Na);ll.forEach(a),go=o(Xe," for all "),Ga=h(Xe,"SPAN",{});var Go=u(Ga);Go.forEach(a),Fs=o(Xe,"."),Xe.forEach(a),Or=S(E),ka=h(E,"H4",{});var Ya=u(ka);Er=o(Ya,"Step 5."),Ya.forEach(a),Zs=S(E),wn=h(E,"P",{});var Ua=u(wn);ca=o(Ua,"Now, we apply the QFT to the first register. For a definite value of "),Tr=h(Ua,"SPAN",{});var Ko=u(Tr);Ko.forEach(a),yo=o(Ua,", this would yield the state "),Pr=h(Ua,"SPAN",{});var Yo=u(Pr);Yo.forEach(a),$o=o(Ua,". But just like above, the register is in a superposition, and so the state after is going to be a linear combination of the QFT for all values of "),Mr=h(Ua,"SPAN",{});var io=u(Mr);io.forEach(a),Sr=o(Ua,": "),Ea=h(Ua,"SPAN",{});var Zo=u(Ea);Zo.forEach(a),hs=o(Ua,"."),Ua.forEach(a),Yt=S(E),qr=h(E,"H4",{});var qo=u(qr);Ar=o(qo,"Step 6."),qo.forEach(a),Xs=S(E),Jt=h(E,"P",{});var Wn=u(Jt);Hr=o(Wn,"We saw in the section on the QFT that for a given "),us=h(Wn,"SPAN",{});var Jo=u(us);Jo.forEach(a),Lr=o(Wn,", the resulting phases form a sinusoidal wave pattern with a frequency of "),ms=h(Wn,"SPAN",{});var hl=u(ms);hl.forEach(a),xr=o(Wn,". In this case, because of the superposition, the resulting phases are going to form a linear combination of sinusoidal wave patterns with frequencies "),fs=h(Wn,"SPAN",{});var Xo=u(fs);Xo.forEach(a),Ir=o(Wn,". And this is the key to the solution, because these waves are going to "),Pe(Fr.$$.fragment,Wn),Qs=o(Wn," with each other in a particular way. Remember that the phases generated by the QFT were complex vectors of unit length. Now, we're adding those vectors together for "),Ta=h(Wn,"SPAN",{});var ei=u(Ta);ei.forEach(a),zs=o(Wn,", and so the length of the resulting vectors will no longer be "),Ka=h(Wn,"SPAN",{});var ul=u(Ka);ul.forEach(a),Qr=o(Wn,"."),Wn.forEach(a),eo=S(E),gn=h(E,"P",{});var Bn=u(gn);zr=o(Bn,"Instead, at certain points (values of "),Vr=h(Bn,"SPAN",{});var ml=u(Vr);ml.forEach(a),ln=o(Bn,"), the waves constructively interfere, meaning their displacements sum up to a large positive or negative value, and so the measurement probabilities of those points get amplified. At other points, the displacements cancel each other out, leading to probability amplitudes near zero. If we then measure the register and read out the represented value "),Br=h(Bn,"SPAN",{});var fl=u(Br);fl.forEach(a),To=o(Bn,", it's most likely going to be one of the points of constructive interference. And the points, at which this constructive interference happens are related to the period in a special way. Namely, they are the points "),Cr=h(Bn,"SPAN",{});var ti=u(Cr);ti.forEach(a),Po=o(Bn," for "),Rr=h(Bn,"SPAN",{});var pl=u(Rr);pl.forEach(a),Mo=o(Bn,". Thus, all we have to do now is measure the final state of the first register a sufficient number of times to get a statistically reliable estimation of the period."),Bn.forEach(a)},m(E,fe){g(E,n,fe),t(n,r),g(E,i,fe),g(E,m,fe),t(m,d),t(m,_),_.innerHTML=p,t(m,v),t(m,b),b.innerHTML=k,t(m,w),t(m,N),N.innerHTML=$,t(m,I),t(m,X),X.innerHTML=O,t(m,H),Me(j,m,null),t(m,V),t(m,A),A.innerHTML=z,t(m,q),g(E,te,fe),g(E,x,fe),t(x,J),t(x,ne),ne.innerHTML=Q,t(x,P),t(x,L),L.innerHTML=re,t(x,Y),t(x,F),F.innerHTML=U,t(x,$e),t(x,ae),ae.innerHTML=Ae,t(x,le),t(x,Z),Z.innerHTML=T,t(x,oe),t(x,ue),ue.innerHTML=st,t(x,He),t(x,ze),ze.innerHTML=dt,t(x,ge),t(x,Fe),Fe.innerHTML=Re,t(x,ot),t(x,Le),Le.innerHTML=ce,t(x,qt),g(E,qe,fe),g(E,ie,fe),t(ie,me),t(ie,Ke),Ke.innerHTML=At,t(ie,W),t(ie,de),de.innerHTML=G,t(ie,gt),t(ie,Oe),Oe.innerHTML=bt,t(ie,yt),t(ie,Ye),Ye.innerHTML=ft,t(ie,xt),t(ie,it),it.innerHTML=$t,t(ie,It),t(ie,pt),pt.innerHTML=lt,t(ie,jt),t(ie,D),D.innerHTML=be,t(ie,ct),t(ie,Qe),Qe.innerHTML=Pt,t(ie,je),t(ie,Nt),Nt.innerHTML=kt,t(ie,Dt),g(E,Ht,fe),g(E,Wt,fe),t(Wt,Ft),t(Wt,Ge),Ge.innerHTML=Ut,t(Wt,at),g(E,Ce,fe),g(E,et,fe),t(et,vt),g(E,ke,fe),g(E,Mt,fe),t(Mt,ht),g(E,Nn,fe),g(E,tt,fe),t(tt,Ot),t(tt,rn),rn.innerHTML=St,t(tt,sn),t(tt,en),en.innerHTML=un,t(tt,Ve),t(tt,se),se.innerHTML=We,t(tt,nt),g(E,Hn,fe),g(E,rt,fe),t(rt,Bt),t(rt,Cn),Cn.innerHTML=kn,t(rt,Ie),t(rt,En),En.innerHTML=mn,t(rt,ve),t(rt,Tn),Tn.innerHTML=fn,t(rt,Pn),t(rt,Ln),Ln.innerHTML=we,t(rt,_t),g(E,Mn,fe),g(E,pe,fe),t(pe,pn),g(E,Ue,fe),g(E,Qt,fe),t(Qt,cn),t(Qt,_n),_n.innerHTML=ba,t(Qt,dn),t(Qt,tn),tn.innerHTML=va,t(Qt,wt),t(Qt,On),On.innerHTML=Ct,t(Qt,xn),t(Qt,In),In.innerHTML=sa,t(Qt,oa),g(E,wa,fe),g(E,Ze,fe),t(Ze,ut),t(Ze,Fn),Fn.innerHTML=Ur,t(Ze,Rn),t(Ze,Gn),Gn.innerHTML=ia,t(Ze,bn),t(Ze,Pa),Pa.innerHTML=Ma,t(Ze,ye),t(Ze,nn),nn.innerHTML=la,t(Ze,ha),t(Ze,Qn),Qn.innerHTML=Kn,t(Ze,Gt),t(Ze,ua),ua.innerHTML=ma,t(Ze,fa),t(Ze,pa),pa.innerHTML=Sa,t(Ze,tr),g(E,qa,fe),g(E,jn,fe),t(jn,B),g(E,Ee,fe),g(E,he,fe),t(he,nr),t(he,Yn),Yn.innerHTML=ga,t(he,ar),t(he,Zn),Zn.innerHTML=ya,t(he,rr),t(he,Jn),Jn.innerHTML=on,t(he,$s),t(he,Aa),Aa.innerHTML=zn,t(he,Ns),t(he,Ha),Ha.innerHTML=sr,t(he,Rt),t(he,La),La.innerHTML=or,t(he,ks),t(he,xa),xa.innerHTML=ir,t(he,Es),t(he,Ia),Ia.innerHTML=lr,t(he,Gr),t(he,an),an.innerHTML=hr,t(he,Ts),g(E,Sn,fe),g(E,Kt,fe),t(Kt,Ps),t(Kt,xe),xe.innerHTML=Kr,t(Kt,Fa),t(Kt,Qa),Qa.innerHTML=Yr,t(Kt,za),t(Kt,Xn),Xn.innerHTML=po,t(Kt,ur),t(Kt,vn),vn.innerHTML=Ms,t(Kt,Va),g(E,Zr,fe),g(E,Ba,fe),t(Ba,Ca),g(E,Us,fe),g(E,Be,fe),t(Be,Jr),t(Be,ea),ea.innerHTML=mr,t(Be,fr),t(Be,Xr),Xr.innerHTML=co,t(Be,pr),t(Be,es),es.innerHTML=_o,t(Be,Ss),t(Be,ta),ta.innerHTML=ts,t(Be,bo),t(Be,cr),cr.innerHTML=ns,t(Be,vo),t(Be,_r),_r.innerHTML=Os,t(Be,dr),t(Be,br),br.innerHTML=Gs,t(Be,Dn),t(Be,vr),vr.innerHTML=as,t(Be,wo),t(Be,wr),wr.innerHTML=qs,t(Be,As),t(Be,gr),gr.innerHTML=Hs,t(Be,Ls),t(Be,yr),yr.innerHTML=Ks,t(Be,Ra),t(Be,$r),$r.innerHTML=xs,t(Be,Is),t(Be,Nr),Nr.innerHTML=Ys,t(Be,kr),t(Be,$a),$a.innerHTML=fi,t(Be,rs),t(Be,Na),Na.innerHTML=ss,t(Be,go),t(Be,Ga),Ga.innerHTML=os,t(Be,Fs),g(E,Or,fe),g(E,ka,fe),t(ka,Er),g(E,Zs,fe),g(E,wn,fe),t(wn,ca),t(wn,Tr),Tr.innerHTML=is,t(wn,yo),t(wn,Pr),Pr.innerHTML=ls,t(wn,$o),t(wn,Mr),Mr.innerHTML=Js,t(wn,Sr),t(wn,Ea),Ea.innerHTML=pi,t(wn,hs),g(E,Yt,fe),g(E,qr,fe),t(qr,Ar),g(E,Xs,fe),g(E,Jt,fe),t(Jt,Hr),t(Jt,us),us.innerHTML=No,t(Jt,Lr),t(Jt,ms),ms.innerHTML=ko,t(Jt,xr),t(Jt,fs),fs.innerHTML=Eo,t(Jt,Ir),Me(Fr,Jt,null),t(Jt,Qs),t(Jt,Ta),Ta.innerHTML=ci,t(Jt,zs),t(Jt,Ka),Ka.innerHTML=ps,t(Jt,Qr),g(E,eo,fe),g(E,gn,fe),t(gn,zr),t(gn,Vr),Vr.innerHTML=to,t(gn,ln),t(gn,Br),Br.innerHTML=cs,t(gn,To),t(gn,Cr),Cr.innerHTML=_s,t(gn,Po),t(gn,Rr),Rr.innerHTML=ds,t(gn,Mo),bs=!0,jr||(Fo=[c(_,"mouseenter",e[0]),c(b,"mouseenter",e[1]),c(N,"mouseenter",e[2]),c(X,"mouseenter",e[3]),c(A,"mouseenter",e[4]),c(ne,"mouseenter",e[5]),c(L,"mouseenter",e[6]),c(F,"mouseenter",e[7]),c(ae,"mouseenter",e[8]),c(Z,"mouseenter",e[9]),c(ue,"mouseenter",e[10]),c(ze,"mouseenter",e[11]),c(Fe,"mouseenter",e[12]),c(Le,"mouseenter",e[13]),c(Ke,"mouseenter",e[14]),c(de,"mouseenter",e[15]),c(Oe,"mouseenter",e[16]),c(Ye,"mouseenter",e[17]),c(it,"mouseenter",e[18]),c(pt,"mouseenter",e[19]),c(D,"mouseenter",e[20]),c(Qe,"mouseenter",e[21]),c(Nt,"mouseenter",e[22]),c(Ge,"mouseenter",e[23]),c(rn,"mouseenter",e[24]),c(en,"mouseenter",e[25]),c(se,"mouseenter",e[26]),c(Cn,"mouseenter",e[27]),c(En,"mouseenter",e[28]),c(Tn,"mouseenter",e[29]),c(Ln,"mouseenter",e[30]),c(_n,"mouseenter",e[31]),c(tn,"mouseenter",e[32]),c(On,"mouseenter",e[33]),c(In,"mouseenter",e[34]),c(Fn,"mouseenter",e[35]),c(Gn,"mouseenter",e[36]),c(Pa,"mouseenter",e[37]),c(nn,"mouseenter",e[38]),c(Qn,"mouseenter",e[39]),c(ua,"mouseenter",e[40]),c(pa,"mouseenter",e[41]),c(Yn,"mouseenter",e[42]),c(Zn,"mouseenter",e[43]),c(Jn,"mouseenter",e[44]),c(Aa,"mouseenter",e[45]),c(Ha,"mouseenter",e[46]),c(La,"mouseenter",e[47]),c(xa,"mouseenter",e[48]),c(Ia,"mouseenter",e[49]),c(an,"mouseenter",e[50]),c(xe,"mouseenter",e[51]),c(Qa,"mouseenter",e[52]),c(Xn,"mouseenter",e[53]),c(vn,"mouseenter",e[54]),c(ea,"mouseenter",e[55]),c(Xr,"mouseenter",e[56]),c(es,"mouseenter",e[57]),c(ta,"mouseenter",e[58]),c(cr,"mouseenter",e[59]),c(_r,"mouseenter",e[60]),c(br,"mouseenter",e[61]),c(vr,"mouseenter",e[62]),c(wr,"mouseenter",e[63]),c(gr,"mouseenter",e[64]),c(yr,"mouseenter",e[65]),c($r,"mouseenter",e[66]),c(Nr,"mouseenter",e[67]),c($a,"mouseenter",e[68]),c(Na,"mouseenter",e[69]),c(Ga,"mouseenter",e[70]),c(Tr,"mouseenter",e[71]),c(Pr,"mouseenter",e[72]),c(Mr,"mouseenter",e[73]),c(Ea,"mouseenter",e[74]),c(us,"mouseenter",e[75]),c(ms,"mouseenter",e[76]),c(fs,"mouseenter",e[77]),c(Ta,"mouseenter",e[78]),c(Ka,"mouseenter",e[79]),c(Vr,"mouseenter",e[80]),c(Br,"mouseenter",e[81]),c(Cr,"mouseenter",e[82]),c(Rr,"mouseenter",e[83])],jr=!0)},p(E,fe){const yn={};fe[2]&4194304&&(yn.$$scope={dirty:fe,ctx:E}),j.$set(yn);const vs={};fe[2]&4194304&&(vs.$$scope={dirty:fe,ctx:E}),Fr.$set(vs)},i(E){bs||(_e(j.$$.fragment,E),_e(Fr.$$.fragment,E),bs=!0)},o(E){Ne(j.$$.fragment,E),Ne(Fr.$$.fragment,E),bs=!1},d(E){E&&a(n),E&&a(i),E&&a(m),Se(j),E&&a(te),E&&a(x),E&&a(qe),E&&a(ie),E&&a(Ht),E&&a(Wt),E&&a(Ce),E&&a(et),E&&a(ke),E&&a(Mt),E&&a(Nn),E&&a(tt),E&&a(Hn),E&&a(rt),E&&a(Mn),E&&a(pe),E&&a(Ue),E&&a(Qt),E&&a(wa),E&&a(Ze),E&&a(qa),E&&a(jn),E&&a(Ee),E&&a(he),E&&a(Sn),E&&a(Kt),E&&a(Zr),E&&a(Ba),E&&a(Us),E&&a(Be),E&&a(Or),E&&a(ka),E&&a(Zs),E&&a(wn),E&&a(Yt),E&&a(qr),E&&a(Xs),E&&a(Jt),Se(Fr),E&&a(eo),E&&a(gn),jr=!1,er(Fo)}}}function K(e){console.log(e)}function Jf(e){return[()=>K(["N"]),()=>K(["N","r"]),()=>K(["f","a","r","N"]),()=>K(["f","a","N"]),()=>K(["r"]),()=>K(["g"]),()=>K(["p"]),()=>K(["g","p","x"]),()=>K(["x"]),()=>K(["g"]),()=>K(["g"]),()=>K(["p"]),()=>K(["f","a","N"]),()=>K(["N"]),()=>K(["N","p"]),()=>K(["f","a","N"]),()=>K(["f","a","N"]),()=>K(["f","a","p","N"]),()=>K(["p"]),()=>K(["f","a","N"]),()=>K([]),()=>K(["r"]),()=>K(["p","r"]),()=>K(["f","a","N"]),()=>K(["N"]),()=>K(["N"]),()=>K(["N"]),()=>K(["N","n"]),()=>K(["\\psi"]),()=>K([]),()=>K(["t","s","m","r","n","\\psi"]),()=>K(["H"]),()=>K(["t","s","m","r","n","\\psi"]),()=>K([]),()=>K(["n","\\psi"]),()=>K(["x"]),()=>K(["x"]),()=>K([]),()=>K(["n"]),()=>K(["x","n","\\psi"]),()=>K(["x"]),()=>K(["n"]),()=>K([]),()=>K(["t","s","m","r","n","\\psi"]),()=>K(["y"]),()=>K(["x"]),()=>K(["f","a","x","N"]),()=>K(["x"]),()=>K([]),()=>K(["n"]),()=>K(["y","a","x","N"]),()=>K(["x"]),()=>K(["y","a","x","N"]),()=>K(["x"]),()=>K(["N","x","a","n","\\psi","y"]),()=>K(["y"]),()=>K(["\\psi"]),()=>K(["\\psi"]),()=>K(["y"]),()=>K(["x"]),()=>K(["y"]),()=>K(["x"]),()=>K(["y","a","x","N"]),()=>K(["x"]),()=>K(["f","a","N"]),()=>K(["p"]),()=>K(["p"]),()=>K(["n","k","x"]),()=>K(["x","k","\\psi"]),()=>K(["p","x"]),()=>K(["k"]),()=>K(["x"]),()=>K(["y","x","n","\\psi"]),()=>K(["x"]),()=>K(["x","k","n","\\psi","y"]),()=>K(["x"]),()=>K(["x"]),()=>K(["k","x"]),()=>K(["k","x"]),()=>K([]),()=>K(["x"]),()=>K(["x"]),()=>K(["N","p","j"]),()=>K(["p","j"])]}class Xf extends na{constructor(n){super(),aa(this,n,Jf,Zf,ra,{},null,[-1,-1,-1])}}function ep(e){let n,r,i,m,d;return m=new Xf({}),{c(){n=l("h2"),r=s("Shor's Algorithm"),i=M(),Te(m.$$.fragment)},l(_){n=h(_,"H2",{});var p=u(n);r=o(p,"Shor's Algorithm"),p.forEach(a),i=S(_),Pe(m.$$.fragment,_)},m(_,p){g(_,n,p),t(n,r),g(_,i,p),Me(m,_,p),d=!0},p:Ws,i(_){d||(_e(m.$$.fragment,_),d=!0)},o(_){Ne(m.$$.fragment,_),d=!1},d(_){_&&a(n),_&&a(i),Se(m,_)}}}class tp extends na{constructor(n){super(),aa(this,n,null,ep,ra,{})}}function np(e){let n,r,i,m,d,_,p,v,b,k,w,N,$,I,X,O,H,j,V,A;return $=new Su({}),X=new Uf({}),H=new Om({}),V=new tp({}),{c(){n=l("div"),r=M(),i=l("main"),m=l("h1"),d=s("Interactive Quantum Computing"),_=M(),p=l("p"),v=s("This page intends to introduce concepts, connect them and derive a practical use case"),b=M(),k=l("h2"),w=s("Clickable Table of Contents"),N=M(),Te($.$$.fragment),I=M(),Te(X.$$.fragment),O=M(),Te(H.$$.fragment),j=M(),Te(V.$$.fragment),this.h()},l(z){n=h(z,"DIV",{class:!0}),u(n).forEach(a),r=S(z),i=h(z,"MAIN",{});var q=u(i);m=h(q,"H1",{});var te=u(m);d=o(te,"Interactive Quantum Computing"),te.forEach(a),_=S(q),p=h(q,"P",{});var x=u(p);v=o(x,"This page intends to introduce concepts, connect them and derive a practical use case"),x.forEach(a),b=S(q),k=h(q,"H2",{});var J=u(k);w=o(J,"Clickable Table of Contents"),J.forEach(a),N=S(q),Pe($.$$.fragment,q),I=S(q),Pe(X.$$.fragment,q),O=S(q),Pe(H.$$.fragment,q),j=S(q),Pe(V.$$.fragment,q),q.forEach(a),this.h()},h(){R(n,"class","sidebar")},m(z,q){g(z,n,q),g(z,r,q),g(z,i,q),t(i,m),t(m,d),t(i,_),t(i,p),t(p,v),t(i,b),t(i,k),t(k,w),t(i,N),Me($,i,null),t(i,I),Me(X,i,null),t(i,O),Me(H,i,null),t(i,j),Me(V,i,null),A=!0},p:Ws,i(z){A||(_e($.$$.fragment,z),_e(X.$$.fragment,z),_e(H.$$.fragment,z),_e(V.$$.fragment,z),A=!0)},o(z){Ne($.$$.fragment,z),Ne(X.$$.fragment,z),Ne(H.$$.fragment,z),Ne(V.$$.fragment,z),A=!1},d(z){z&&a(n),z&&a(r),z&&a(i),Se($),Se(X),Se(H),Se(V)}}}const sp=!0;class op extends na{constructor(n){super(),aa(this,n,null,np,ra,{})}}export{op as default,sp as prerender};
