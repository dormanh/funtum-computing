import{L as Js,S as xt,i as Qt,s as Ct,F as jo,e as s,c as r,a as o,d as t,b as Le,g as _,M as Xs,N as Zs,n as wt,O as u,I as zo,J as Wo,K as Uo,r as Ye,p as ct,P as ia,t as a,x as Et,k as q,h as n,y as Tt,m as S,H as e,z as $t,C as Pt,j as Ro,Q as Ko,R as Go,T as Jo,U as Xo,V as ln,W as Zo,X as gn,o as Yo,Y as el,q as tl,Z as al}from"../chunks/index-573b8779.js";import{R as h}from"../chunks/index-2cd68d2b.js";function Ys(l){const i=l-1;return i*i*i+1}function nl(l){return--l*l*l*l*l+1}function Ss(l,{delay:i=0,duration:m=400,easing:f=Ys,start:d=0,opacity:g=0}={}){const c=getComputedStyle(l),b=+c.opacity,w=c.transform==="none"?"":c.transform,y=1-d,T=b*(1-g);return{delay:i,duration:m,easing:f,css:(E,I)=>`
			transform: ${w} scale(${1-y*I});
			opacity: ${b-T*I}
		`}}function sl(l,{from:i,to:m},f={}){const d=getComputedStyle(l),g=d.transform==="none"?"":d.transform,[c,b]=d.transformOrigin.split(" ").map(parseFloat),w=i.left+i.width*c/m.width-(m.left+c),y=i.top+i.height*b/m.height-(m.top+b),{delay:T=0,duration:E=J=>Math.sqrt(J)*120,easing:I=Ys}=f;return{delay:T,duration:Js(E)?E(Math.sqrt(w*w+y*y)):E,easing:I,css:(J,C)=>{const U=C*w,ee=C*y,j=J+C*i.width/m.width,O=J+C*i.height/m.height;return`transform: ${g} translate(${U}px, ${ee}px) scale(${j}, ${O});`}}}function Rs(l){let i,m;return{c(){i=s("div"),this.h()},l(f){i=r(f,"DIV",{class:!0});var d=o(i);d.forEach(t),this.h()},h(){Le(i,"class","hover-inner svelte-5qv8za")},m(f,d){_(f,i,d),i.innerHTML=l[0]},p(f,d){l=f,d&1&&(i.innerHTML=l[0])},i(f){m||Xs(()=>{m=Zs(i,Ss,{duration:150,easing:nl,opacity:0}),m.start()})},o:wt,d(f){f&&t(i)}}}function rl(l){let i,m,f,d;const g=l[5].default,c=jo(g,l,l[4],null);let b=l[1]&&Rs(l);return{c(){i=s("span"),c&&c.c(),b&&b.c(),this.h()},l(w){i=r(w,"SPAN",{class:!0});var y=o(i);c&&c.l(y),b&&b.l(y),y.forEach(t),this.h()},h(){Le(i,"class","hover-outer svelte-5qv8za")},m(w,y){_(w,i,y),c&&c.m(i,null),b&&b.m(i,null),m=!0,f||(d=[u(i,"mouseenter",l[2]),u(i,"mouseleave",l[3])],f=!0)},p(w,[y]){c&&c.p&&(!m||y&16)&&zo(c,g,w,w[4],m?Uo(g,w[4],y,null):Wo(w[4]),null),w[1]?b?(b.p(w,y),y&2&&Ye(b,1)):(b=Rs(w),b.c(),Ye(b,1),b.m(i,null)):b&&(b.d(1),b=null)},i(w){m||(Ye(c,w),Ye(b),m=!0)},o(w){ct(c,w),m=!1},d(w){w&&t(i),c&&c.d(w),b&&b.d(),f=!1,ia(d)}}}function ol(l,i,m){let{$$slots:f={},$$scope:d}=i,{hovertext:g}=i,c=!1;const b=()=>m(1,c=!0),w=()=>m(1,c=!1);return l.$$set=y=>{"hovertext"in y&&m(0,g=y.hovertext),"$$scope"in y&&m(4,d=y.$$scope)},[g,c,b,w,d,f]}class hn extends xt{constructor(i){super(),Qt(this,i,ol,rl,Ct,{hovertext:0})}}var ll=`<a href="https://en.wikipedia.org/wiki/Semiprime"><h3 class="text-lg font-semibold">Semiprime</h3></a><p>In mathematics, a <b>semiprime</b> is a natural number that is the product of exactly two prime numbers. The two primes in the product may equal each other, so the semiprimes include the squares of prime numbers.
Because there are infinitely many prime numbers, there are also infinitely many semiprimes. Semiprimes are also called <b>biprimes</b>.</p>`,il='<a href="https://en.wikipedia.org/wiki/Computational_complexity"><h3 class="text-lg font-semibold">Computational complexity</h3></a><p>In computer science, the <b>computational complexity</b> or simply <b>complexity</b> of an algorithm is the amount of resources required to run it. Particular focus is given to time and memory requirements. The complexity of a problem is the complexity of the best algorithms that allow solving the problem.</p>';function ul(l){let i;return{c(){i=a("(semiprime)")},l(m){i=n(m,"(semiprime)")},m(m,f){_(m,i,f)},d(m){m&&t(i)}}}function hl(l){let i;return{c(){i=a("Computational complexity")},l(m){i=n(m,"Computational complexity")},m(m,f){_(m,i,f)},d(m){m&&t(i)}}}function ml(l){let i,m,f,d,g,c=h("N")+"",b,w,y=h("N = p \\cdot q")+"",T,E,I=h("15")+"",J,C,U=h("3")+"",ee,j,O=h("5")+"",re,se,P=h("62615533")+"",v,W,z,_e,te,X,ue,de,ae,A,he,D,Ze,L,F=h("^3")+"",et,me,R,$,k,V,ve,be,oe,ne,we,pe,tt,Ne,B,ie,ce,fe,Z,Ie,Te,ft,le,Pe,st,Be,qe;return f=new hn({props:{hovertext:ll,$$slots:{default:[ul]},$$scope:{ctx:l}}}),$=new hn({props:{hovertext:il,$$slots:{default:[hl]},$$scope:{ctx:l}}}),{c(){i=s("p"),m=a("Take a large composite "),Et(f.$$.fragment),d=a(" number "),g=s("span"),b=a(" we try to find factors for, so that "),w=s("span"),T=a(". Finding the prime factors of a small semiprime, such as "),E=s("span"),J=a(", is quite easy. In fact, you may figure it out just by looking at it and recalling your grade school studies: the factors are "),C=s("span"),ee=a(" and "),j=s("span"),re=a(". But what are the prime factors of, say, "),se=s("span"),v=a("? It turns out that, using the best known "),W=s("em"),z=a("classical"),_e=a(" algorithm (the so called "),te=s("em"),X=a("number field sieve"),ue=a("), solving the factoring problem scales "),de=s("em"),ae=a("exponentially"),A=a(" with the number of digits of the semiprime that we want to factor. With the help of Shor's algorithm and a sufficiently large quantum computer, the same problem scales roughly "),he=s("em"),D=a("cubically"),Ze=a(" with the number of digits, meaning that the number of elementary operations required is proportional to (the number of digits)"),L=s("span"),et=a(". (In fact, the algorithm does slighly better than that, but the precise formula is a bit complicated and is beside the point.) To illustrate what this means in practical terms, imagine the following. If factoring a 100-digit number with Shor's algorithm on a quantum computer takes one second, factoring the same number with the number field sieve on a classical computer takes more than 3 hours. If we now try with a 200-digit number, Shor's algorithm finishes in roughly 5 seconds, while the classical solution would take more than a year!"),me=q(),R=s("p"),Et($.$$.fragment),k=a(" refers to how the time - or number of "),V=s("em"),ve=a("elementary operations"),be=a(" - required to solve a given problem algorithmically grows with the size of the "),oe=s("em"),ne=a("input"),we=a(`. Let's say you have to find the longest book you have ever read. One way to approach this problem is to list the books you have read one by one, label the first one as the longest, and whenever you encounter an even longer book, it takes the place of the former. This way, you only have to keep track of the largest page number so far, and the book associated with it. The "elementary operation" in this case is checking the number of pages of the next book and comparing that with the previous maximum. If you have twice or three times as many books, this procedure requires twice or three times as many elementary operations. In other words, it grows `),pe=s("em"),tt=a("linearly"),Ne=a(" in the number of books. So, while the solution can be found using the same algorithm, the number of elementary operations required to carry out that algorithm depends on the size of the input. This is true for almost all algorithms that are designed to solve mathematical problems. However, how "),B=s("em"),ie=a("fast"),ce=a(" that growth is, makes all the difference between them."),fe=q(),Z=s("h1"),Ie=a("TODO"),Te=q(),ft=s("blockquote"),le=s("p"),Pe=a("add and link to some use cases like RSA here and explain how this is important and strange.")},l(Y){i=r(Y,"P",{});var x=o(i);m=n(x,"Take a large composite "),Tt(f.$$.fragment,x),d=n(x," number "),g=r(x,"SPAN",{});var ye=o(g);ye.forEach(t),b=n(x," we try to find factors for, so that "),w=r(x,"SPAN",{});var rt=o(w);rt.forEach(t),T=n(x,". Finding the prime factors of a small semiprime, such as "),E=r(x,"SPAN",{});var De=o(E);De.forEach(t),J=n(x,", is quite easy. In fact, you may figure it out just by looking at it and recalling your grade school studies: the factors are "),C=r(x,"SPAN",{});var ot=o(C);ot.forEach(t),ee=n(x," and "),j=r(x,"SPAN",{});var Se=o(j);Se.forEach(t),re=n(x,". But what are the prime factors of, say, "),se=r(x,"SPAN",{});var lt=o(se);lt.forEach(t),v=n(x,"? It turns out that, using the best known "),W=r(x,"EM",{});var Ue=o(W);z=n(Ue,"classical"),Ue.forEach(t),_e=n(x," algorithm (the so called "),te=r(x,"EM",{});var Me=o(te);X=n(Me,"number field sieve"),Me.forEach(t),ue=n(x,"), solving the factoring problem scales "),de=r(x,"EM",{});var at=o(de);ae=n(at,"exponentially"),at.forEach(t),A=n(x," with the number of digits of the semiprime that we want to factor. With the help of Shor's algorithm and a sufficiently large quantum computer, the same problem scales roughly "),he=r(x,"EM",{});var je=o(he);D=n(je,"cubically"),je.forEach(t),Ze=n(x," with the number of digits, meaning that the number of elementary operations required is proportional to (the number of digits)"),L=r(x,"SPAN",{});var Vt=o(L);Vt.forEach(t),et=n(x,". (In fact, the algorithm does slighly better than that, but the precise formula is a bit complicated and is beside the point.) To illustrate what this means in practical terms, imagine the following. If factoring a 100-digit number with Shor's algorithm on a quantum computer takes one second, factoring the same number with the number field sieve on a classical computer takes more than 3 hours. If we now try with a 200-digit number, Shor's algorithm finishes in roughly 5 seconds, while the classical solution would take more than a year!"),x.forEach(t),me=S(Y),R=r(Y,"P",{});var $e=o(R);Tt($.$$.fragment,$e),k=n($e," refers to how the time - or number of "),V=r($e,"EM",{});var xe=o(V);ve=n(xe,"elementary operations"),xe.forEach(t),be=n($e," - required to solve a given problem algorithmically grows with the size of the "),oe=r($e,"EM",{});var Dt=o(oe);ne=n(Dt,"input"),Dt.forEach(t),we=n($e,`. Let's say you have to find the longest book you have ever read. One way to approach this problem is to list the books you have read one by one, label the first one as the longest, and whenever you encounter an even longer book, it takes the place of the former. This way, you only have to keep track of the largest page number so far, and the book associated with it. The "elementary operation" in this case is checking the number of pages of the next book and comparing that with the previous maximum. If you have twice or three times as many books, this procedure requires twice or three times as many elementary operations. In other words, it grows `),pe=r($e,"EM",{});var nt=o(pe);tt=n(nt,"linearly"),nt.forEach(t),Ne=n($e," in the number of books. So, while the solution can be found using the same algorithm, the number of elementary operations required to carry out that algorithm depends on the size of the input. This is true for almost all algorithms that are designed to solve mathematical problems. However, how "),B=r($e,"EM",{});var Re=o(B);ie=n(Re,"fast"),Re.forEach(t),ce=n($e," that growth is, makes all the difference between them."),$e.forEach(t),fe=S(Y),Z=r(Y,"H1",{});var yt=o(Z);Ie=n(yt,"TODO"),yt.forEach(t),Te=S(Y),ft=r(Y,"BLOCKQUOTE",{});var it=o(ft);le=r(it,"P",{});var Qe=o(le);Pe=n(Qe,"add and link to some use cases like RSA here and explain how this is important and strange."),Qe.forEach(t),it.forEach(t)},m(Y,x){_(Y,i,x),e(i,m),$t(f,i,null),e(i,d),e(i,g),g.innerHTML=c,e(i,b),e(i,w),w.innerHTML=y,e(i,T),e(i,E),E.innerHTML=I,e(i,J),e(i,C),C.innerHTML=U,e(i,ee),e(i,j),j.innerHTML=O,e(i,re),e(i,se),se.innerHTML=P,e(i,v),e(i,W),e(W,z),e(i,_e),e(i,te),e(te,X),e(i,ue),e(i,de),e(de,ae),e(i,A),e(i,he),e(he,D),e(i,Ze),e(i,L),L.innerHTML=F,e(i,et),_(Y,me,x),_(Y,R,x),$t($,R,null),e(R,k),e(R,V),e(V,ve),e(R,be),e(R,oe),e(oe,ne),e(R,we),e(R,pe),e(pe,tt),e(R,Ne),e(R,B),e(B,ie),e(R,ce),_(Y,fe,x),_(Y,Z,x),e(Z,Ie),_(Y,Te,x),_(Y,ft,x),e(ft,le),e(le,Pe),st=!0,Be||(qe=[u(g,"mouseenter",l[0]),u(w,"mouseenter",l[1]),u(E,"mouseenter",l[2]),u(C,"mouseenter",l[3]),u(j,"mouseenter",l[4]),u(se,"mouseenter",l[5]),u(L,"mouseenter",l[6])],Be=!0)},p(Y,[x]){const ye={};x&128&&(ye.$$scope={dirty:x,ctx:Y}),f.$set(ye);const rt={};x&128&&(rt.$$scope={dirty:x,ctx:Y}),$.$set(rt)},i(Y){st||(Ye(f.$$.fragment,Y),Ye($.$$.fragment,Y),st=!0)},o(Y){ct(f.$$.fragment,Y),ct($.$$.fragment,Y),st=!1},d(Y){Y&&t(i),Pt(f),Y&&t(me),Y&&t(R),Pt($),Y&&t(fe),Y&&t(Z),Y&&t(Te),Y&&t(ft),Be=!1,ia(qe)}}}function ba(l){console.log(l)}function pl(l){return[()=>ba(["a","b"]),()=>ba(["a","b"]),()=>ba(["a","b"]),()=>ba(["a","b"]),()=>ba(["a","b"]),()=>ba(["a","b"]),()=>ba(["a","b"])]}class fl extends xt{constructor(i){super(),Qt(this,i,pl,ml,Ct,{})}}function Ks(l,i,m){const f=l.slice();return f[20]=i[m],f}function Gs(l,i){let m,f=i[20].measured+"",d,g,c,b,w,y=wt,T;return{key:l,first:null,c(){m=s("div"),d=a(f),g=q(),this.h()},l(E){m=r(E,"DIV",{class:!0});var I=o(m);d=n(I,f),g=S(I),I.forEach(t),this.h()},h(){Le(m,"class","element svelte-delvob"),this.first=m},m(E,I){_(E,m,I),e(m,d),e(m,g),T=!0},p(E,I){i=E,(!T||I&16)&&f!==(f=i[20].measured+"")&&Ro(d,f)},r(){w=m.getBoundingClientRect()},f(){Ko(m),y(),Go(m,w)},a(){y(),y=Jo(m,w,sl,{duration:300})},i(E){T||(Xs(()=>{b&&b.end(1),c=Zs(m,Ss,{duration:250}),c.start()}),T=!0)},o(E){c&&c.invalidate(),b=Xo(m,Ss,{duration:250}),T=!1},d(E){E&&t(m),E&&b&&b.end()}}}function _l(l){let i,m,f,d,g,c,b,w,y,T,E,I,J,C,U,ee,j,O,re,se,P,v,W,z,_e,te,X=h(` = ${l[2]} \\times ${l[3]}`)+"",ue,de,ae,A,he,D=[],Ze=new Map,L,F,et;d=new fl({});let me=l[4];const R=$=>$[20].ind;for(let $=0;$<me.length;$+=1){let k=Ks(l,me,$),V=R(k);Ze.set(V,D[$]=Gs(V,k))}return{c(){i=s("h2"),m=a("Factoring"),f=q(),Et(d.$$.fragment),g=q(),c=s("div"),b=s("div"),w=s("button"),y=a("Measure"),T=q(),E=s("div"),I=a("a:"),J=q(),C=s("input"),ee=q(),j=s("input"),re=q(),se=s("div"),P=a("N:"),v=q(),W=s("input"),_e=q(),te=s("div"),ue=q(),de=s("p"),ae=a("all measurements:"),A=q(),he=s("div");for(let $=0;$<D.length;$+=1)D[$].c();this.h()},l($){i=r($,"H2",{});var k=o(i);m=n(k,"Factoring"),k.forEach(t),f=S($),Tt(d.$$.fragment,$),g=S($),c=r($,"DIV",{class:!0});var V=o(c);b=r(V,"DIV",{class:!0});var ve=o(b);w=r(ve,"BUTTON",{class:!0});var be=o(w);y=n(be,"Measure"),be.forEach(t),ve.forEach(t),T=S(V),E=r(V,"DIV",{class:!0});var oe=o(E);I=n(oe,"a:"),oe.forEach(t),J=S(V),C=r(V,"INPUT",{class:!0,type:!0,min:!0,max:!0}),ee=S(V),j=r(V,"INPUT",{class:!0,type:!0,min:!0,max:!0}),re=S(V),se=r(V,"DIV",{class:!0});var ne=o(se);P=n(ne,"N:"),ne.forEach(t),v=S(V),W=r(V,"INPUT",{class:!0,type:!0,min:!0,max:!0}),_e=S(V),te=r(V,"DIV",{id:!0,class:!0});var we=o(te);we.forEach(t),V.forEach(t),ue=S($),de=r($,"P",{});var pe=o(de);ae=n(pe,"all measurements:"),pe.forEach(t),A=S($),he=r($,"DIV",{class:!0});var tt=o(he);for(let Ne=0;Ne<D.length;Ne+=1)D[Ne].l(tt);tt.forEach(t),this.h()},h(){Le(w,"class","svelte-delvob"),Le(b,"class","control"),Le(E,"class","varlabel svelte-delvob"),Le(C,"class","numsel svelte-delvob"),Le(C,"type","number"),Le(C,"min",2),Le(C,"max",U=l[0]-1),Le(j,"class","slider svelte-delvob"),Le(j,"type","range"),Le(j,"min",2),Le(j,"max",O=l[0]-1),Le(se,"class","varlabel svelte-delvob"),Le(W,"class","numsel svelte-delvob"),Le(W,"type","number"),Le(W,"min","1"),Le(W,"max",l[5]),Le(te,"id","decomp"),Le(te,"class","svelte-delvob"),Le(c,"class","cpanel svelte-delvob"),Le(he,"class","array svelte-delvob")},m($,k){_($,i,k),e(i,m),_($,f,k),$t(d,$,k),_($,g,k),_($,c,k),e(c,b),e(b,w),e(w,y),e(c,T),e(c,E),e(E,I),e(c,J),e(c,C),ln(C,l[1]),e(c,ee),e(c,j),ln(j,l[1]),e(c,re),e(c,se),e(se,P),e(c,v),e(c,W),ln(W,l[0]),e(c,_e),e(c,te),te.innerHTML=X,_($,ue,k),_($,de,k),e(de,ae),_($,A,k),_($,he,k);for(let V=0;V<D.length;V+=1)D[V].m(he,null);L=!0,F||(et=[u(w,"click",l[6]),u(C,"input",l[9]),u(j,"change",l[10]),u(j,"input",l[10]),Zo(z=l[7].call(null,W,l[0])),u(W,"input",l[11])],F=!0)},p($,[k]){if((!L||k&1&&U!==(U=$[0]-1))&&Le(C,"max",U),k&2&&gn(C.value)!==$[1]&&ln(C,$[1]),(!L||k&1&&O!==(O=$[0]-1))&&Le(j,"max",O),k&2&&ln(j,$[1]),z&&Js(z.update)&&k&1&&z.update.call(null,$[0]),k&1&&gn(W.value)!==$[0]&&ln(W,$[0]),(!L||k&12)&&X!==(X=h(` = ${$[2]} \\times ${$[3]}`)+"")&&(te.innerHTML=X),k&16){me=$[4],Yo();for(let V=0;V<D.length;V+=1)D[V].r();D=el(D,k,R,1,$,me,Ze,he,al,Gs,null,Ks);for(let V=0;V<D.length;V+=1)D[V].a();tl()}},i($){if(!L){Ye(d.$$.fragment,$);for(let k=0;k<me.length;k+=1)Ye(D[k]);L=!0}},o($){ct(d.$$.fragment,$);for(let k=0;k<D.length;k+=1)ct(D[k]);L=!1},d($){$&&t(i),$&&t(f),Pt(d,$),$&&t(g),$&&t(c),$&&t(ue),$&&t(de),$&&t(A),$&&t(he);for(let k=0;k<D.length;k+=1)D[k].d();F=!1,ia(et)}}}const dl=6;function cl(l,i,m){let f,d;function g(P,v,W){let z=[];for(let _e=c;_e>=1;_e--){let te=v%P;for(let X=1;X<_e;X++)te=te*v%P;z.push({rem:te,n:_e,ttip:`Here as a=${v} and N=${P} => ${v} ^ ${_e} % ${P} = ${te}`,measured:te==W?te:null})}return{table:z}}const c=Math.pow(2,dl)-1,b=new Set;for(let P=2;P<=c/2;P++){let v=!0;b.forEach(function(W){P%W==0&&(v=!1)}),v&&b.add(P)}let w=39,y=7,T,E,I;function J(){m(8,f=d.table[Math.floor(Math.random()*c)].rem),I.push({ind:I.length,measured:f}),m(4,I),m(1,y),m(0,w)}let C=w;function U(P){for(const v of b)if(b.has(P/v))return m(2,T=v),m(3,E=P/v),!0;return!1}U(w);function ee(P){m(0,w=P),C=w,m(1,y=y>=w?w-1:y)}function j(P,v){return{update(W){let z=W-C;if(z!=0){for(;!U(W);)if(W+=z,W<=2||W>=c)return;ee(W)}}}}function O(){y=gn(this.value),m(1,y)}function re(){y=gn(this.value),m(1,y)}function se(){w=gn(this.value),m(0,w)}return l.$$.update=()=>{l.$$.dirty&3&&m(8,f=(y|w,0)),l.$$.dirty&259&&(d=g(w,y,f)),l.$$.dirty&3&&m(4,I=y|w?[]:[])},[w,y,T,E,I,c,J,j,f,O,re,se]}class bl extends xt{constructor(i){super(),Qt(this,i,cl,_l,Ct,{})}}function vl(l){let i,m,f,d=h("f")+"",g,c,b=h("\\Large \\hat{f}(\\xi) = \\int_{-\\infty}^{\\infty}{ f(x) \\cdot e^{-2 \\pi i x \\xi} dx}")+"",w,y,T,E,I,J=h("\\large x_0, \\ldots, x_{N - 1}")+"",C,U,ee,j,O,re=h("\\large X_k = \\sum_{n=1}^{N - 1}{x_n \\cdot e^{-2 \\pi i \\frac{k}{N} n}}")+"",se,P,v,W,z,_e=h("\\large f(x) = \\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d\\xi")+"",te,X,ue,de,ae,A=h("\\large x_n = \\frac{1}{N} \\sum_{k=1}^{N - 1} X_k \\cdot e^{2 \\pi i \\frac{n}{N} k}")+"",he,D,Ze;return{c(){i=s("p"),m=a("The Fourier transform of a function "),f=s("span"),g=a(" is defined as: "),c=s("span"),w=a("."),y=q(),T=s("p"),E=a("Let "),I=s("span"),C=a(" be a sequence of complex numbers."),U=q(),ee=s("p"),j=a("The discrete Fourier transform of that sequence is another sequence defined by the following formula: "),O=s("span"),se=a("."),P=q(),v=s("p"),W=a("We obtain original function by applying the inverse Fourier transform: "),z=s("span"),te=a("."),X=q(),ue=s("p"),de=a(`Analogously, we can obtain the original sequence with the help of the inverse discrete Fourier transform: 
`),ae=s("span"),he=a(".")},l(L){i=r(L,"P",{});var F=o(i);m=n(F,"The Fourier transform of a function "),f=r(F,"SPAN",{});var et=o(f);et.forEach(t),g=n(F," is defined as: "),c=r(F,"SPAN",{});var me=o(c);me.forEach(t),w=n(F,"."),F.forEach(t),y=S(L),T=r(L,"P",{});var R=o(T);E=n(R,"Let "),I=r(R,"SPAN",{});var $=o(I);$.forEach(t),C=n(R," be a sequence of complex numbers."),R.forEach(t),U=S(L),ee=r(L,"P",{});var k=o(ee);j=n(k,"The discrete Fourier transform of that sequence is another sequence defined by the following formula: "),O=r(k,"SPAN",{});var V=o(O);V.forEach(t),se=n(k,"."),k.forEach(t),P=S(L),v=r(L,"P",{});var ve=o(v);W=n(ve,"We obtain original function by applying the inverse Fourier transform: "),z=r(ve,"SPAN",{});var be=o(z);be.forEach(t),te=n(ve,"."),ve.forEach(t),X=S(L),ue=r(L,"P",{});var oe=o(ue);de=n(oe,`Analogously, we can obtain the original sequence with the help of the inverse discrete Fourier transform: 
`),ae=r(oe,"SPAN",{});var ne=o(ae);ne.forEach(t),he=n(oe,"."),oe.forEach(t)},m(L,F){_(L,i,F),e(i,m),e(i,f),f.innerHTML=d,e(i,g),e(i,c),c.innerHTML=b,e(i,w),_(L,y,F),_(L,T,F),e(T,E),e(T,I),I.innerHTML=J,e(T,C),_(L,U,F),_(L,ee,F),e(ee,j),e(ee,O),O.innerHTML=re,e(ee,se),_(L,P,F),_(L,v,F),e(v,W),e(v,z),z.innerHTML=_e,e(v,te),_(L,X,F),_(L,ue,F),e(ue,de),e(ue,ae),ae.innerHTML=A,e(ue,he),D||(Ze=[u(f,"mouseenter",l[0]),u(c,"mouseenter",l[1]),u(I,"mouseenter",l[2]),u(O,"mouseenter",l[3]),u(z,"mouseenter",l[4]),u(ae,"mouseenter",l[5])],D=!0)},p:wt,i:wt,o:wt,d(L){L&&t(i),L&&t(y),L&&t(T),L&&t(U),L&&t(ee),L&&t(P),L&&t(v),L&&t(X),L&&t(ue),D=!1,ia(Ze)}}}function un(l){console.log(l)}function wl(l){return[()=>un(["a","b"]),()=>un(["a","b"]),()=>un(["a","b"]),()=>un(["a","b"]),()=>un(["a","b"]),()=>un(["a","b"])]}class yl extends xt{constructor(i){super(),Qt(this,i,wl,vl,Ct,{})}}function gl(l){let i,m,f,d,g,c,b,w,y,T=h("10")+"",E,I,J=h("0, 1, 2, 3, 4, 5, 6, 7, 8, 9")+"",C,U,ee=h("325")+"",j,O,re=h("2")+"",se,P,v=h("2 \\cdot 10")+"",W,z,_e=h("2847")+"",te,X,ue=h("2 \\cdot 1000")+"",de,ae,A=h("n")+"",he,D,Ze=h("\\displaystyle{\\sum_{k = 1}^{n} d_k \\cdot 10^{n - k}}")+"",L,F,et=h("d_k")+"",me,R,$=h("k")+"",k,V,ve=h("2847 = 2 \\cdot 10^3 + 8 \\cdot 10^2 + 4 \\cdot 10^1 + 7 \\cdot 10^0 = 2 \\cdot 1000 + 8 \\cdot 100 + 4 \\cdot 10 + 7 \\cdot 1")+"",be,oe,ne,we,pe,tt=h("2")+"",Ne,B,ie=h("0")+"",ce,fe,Z=h("1")+"",Ie,Te,ft=h("\\displaystyle{\\sum_{k = 1}^{n} d_k \\cdot 2^{n - k}}")+"",le,Pe,st=h("d_k")+"",Be,qe,Y=h("k")+"",x,ye,rt=h("1011 = 1 \\cdot 2^3 + 0 \\cdot 2^2 + 1 \\cdot 2^1 + 1 \\cdot 2^0 = 1 \\cdot 8 + 0 \\cdot 4 + 1 \\cdot 2 + 1 \\cdot 1 = 11")+"",De,ot,Se,lt,Ue,Me,at,je,Vt=h("n")+"",$e,xe,Dt=h("|0\\rangle")+"",nt,Re,yt=h("|1\\rangle")+"",it,Qe,kt=h("\\underbrace{2 \\cdot \\ldots \\cdot 2}_\\text{n times} = 2^n")+"",bt,Ke,Ht=h("N := 2^n")+"",Nt,_t,M,ge,Ge,At=h("0")+"",Ot,N,ke=h("N - 1")+"",Je,ut,jt=h("n = 5")+"",Jt,Xe,zt=h("|0\\rangle \\otimes |1\\rangle \\otimes |0\\rangle \\otimes |0\\rangle \\otimes |1\\rangle")+"",Wt,Ce,G=h("01001")+"",Bt,Lt,Zt=h("0 \\cdot 2^4 + 1 \\cdot 2^3 + 0 \\cdot 2^2 + 0 \\cdot 2^1 + 1 \\cdot 2^0 = 0 + 8 + 0 + 0 + 1 = 9")+"",Ut,Q,He,ht,Yt,Ae,ea,dt,ca=h("x")+"",Ee,Rt,ua=h("x = 9")+"",ta,It,wa=h("k")+"",ha,Xt,Qn=h("\\frac{1}{\\sqrt{2}} \\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^k}} |1\\rangle \\right)")+"",mn,ma,Fe=h("\\alpha_k = \\frac{1}{\\sqrt{2}}")+"",pn,ra,Cn=h("\\beta_k = \\frac{1}{\\sqrt{2}} e^{\\frac{2 \\pi i x}{2^k}}")+"",fn,pa,Dn=h("k = 1, ..., n")+"",_n,ya,qt,dn,oa,aa=h("\\alpha_k \\neq \\beta_k")+"",cn,fa,En=h("\\Vert{\\alpha_k}\\Vert^2 = \\Vert{\\beta_k}\\Vert^2 = \\frac{1}{2}")+"",ga,la,Tn=h("k = 1, ..., n")+"",jn,Ea,er=h("e^{\\frac{2 \\pi i x}{2^k}}")+"",zn,$n,ze,Wn,Ta,tr=h("|0\\rangle")+"",Un,$a,ar=h("|1\\rangle")+"",Rn,Pa,nr=h("n")+"",Kn,Na,sr=h("n")+"",Gn,qa,rr=h("0")+"",Jn,Sa,or=h("N - 1")+"",Xn,Ma,lr=h("\\frac{1}{2}")+"",Zn,ka,ir=h("n")+"",Yn,Ha,ur=h("\\underbrace{\\frac{1}{2} \\cdot \\ldots \\cdot \\frac{1}{2}}_\\text{n terms} = \\frac{1}{2^n} = \\frac{1}{N}")+"",es,Pn,Aa,ts,Nn,La,as,qn,Ia,Fa,hr=h("\\underbrace{ \\frac{1}{\\sqrt{2}} \\left( |0\\rangle + e^{ \\frac{2 \\pi i x}{2^1} } |1\\rangle \\right) \\otimes \\ldots \\otimes \\frac{1}{\\sqrt{2}} \\left( |0\\rangle + e^{ \\frac{2 \\pi i x}{2^n} } |1\\rangle \\right) }_\\text{n terms}")+"",Sn,_a,ns,Va,mr=h("\\frac{1}{\\sqrt{2}}")+"",ss,Mn,Oa,Ba,pr=h("\\frac{1}{\\sqrt{2^n}} \\left(\\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^1}} |1\\rangle \\right) \\otimes \\ldots \\otimes \\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^n}} |1\\rangle \\right) \\right) = \\frac{1}{\\sqrt{N}} \\left(\\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^1}} |1\\rangle \\right) \\otimes \\ldots \\otimes \\left( |0\\rangle + e^{\\frac{2 \\pi i x}{2^n}} |1\\rangle \\right) \\right)")+"",kn,We,rs,xa,fr=h("y_k")+"",os,Qa,_r=h("k")+"",ls,Ca,dr=h("n")+"",is,Da,cr=h("y_k = 0")+"",us,ja,br=h("k")+"",hs,za,vr=h("|0\\rangle")+"",ms,Wa,wr=h("y_k = 1")+"",ps,Ua,yr=h("|1\\rangle")+"",fs,Ra,gr=h("k = 1, \\ldots, n")+"",_s,Hn,Ka,Ga,Er=h("{\\displaystyle \\frac{1}{\\sqrt{N}} \\underbrace{ \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1}_\\text{n terms} \\overbrace{e^{2 \\pi i x \\frac{y_1}{2^1}} |y_1\\rangle \\otimes \\ldots \\otimes e^{2 \\pi i x \\frac{y_n}{2^n}}|y_n\\rangle}^\\text{n terms} }")+"",An,Kt,ds,bn,cs,bs,vn,vs,ws,wn,ys,gs,Ln,Ja,Xa,Tr=h("\\displaystyle \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 \\left( e^{2 \\pi i x \\frac{y_1}{2^1}} \\cdot \\ldots \\cdot e^{2 \\pi i x \\frac{y_n}{2^n}} \\right) \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right) =")+"",In,Za,Ya,$r=h("= \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 \\prod_{k=1}^n e^{2 \\pi i x \\frac{y_k}{2^k}} \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right) =")+"",Fn,en,tn,Pr=h("= \\frac{1}{\\sqrt{N}} \\sum_{y_1=0}^1 \\ldots \\sum_{y_{n}=0}^1 e^{2 \\pi i x \\sum_{k=1}^n \\frac{y_k}{2^k}} \\left( |y_1\\rangle \\otimes \\ldots \\otimes |y_n\\rangle \\right)")+"",Vn,na,Es,an,Nr=h("y_k = 0")+"",Ts,nn,qr=h("e^{2 \\pi i x \\frac{y_k}{2^k}} = e^{2 \\pi i x \\frac{0}{2^k}} = e^0 = 1")+"",$s,On,sn,Ps,Bn,rn,yn,Ns,qs,Ms;return{c(){i=s("h1"),m=a("Quantum Fourier transform"),f=q(),d=s("h2"),g=a("Binary number system"),c=q(),b=s("p"),w=a("In the decimal number system, there are "),y=s("span"),E=a(" distinct symbols used to represent numbers: "),I=s("span"),C=a(". The value of these symbols depends on their place in a given number. For example, in the number "),U=s("span"),j=a(", the symbol "),O=s("span"),se=a(" stands for "),P=s("span"),W=a(", whereas in the number "),z=s("span"),te=a(", it represents "),X=s("span"),de=a(". In general, an integer in decimal notation with "),ae=s("span"),he=a(" digits equals "),D=s("span"),L=a(", where "),F=s("span"),me=a(" is the "),R=s("span"),k=a("-th digit (going from left to right). To illustrate this with a concrete example, the number above "),V=s("span"),be=a("."),oe=q(),ne=s("p"),we=a("Analogously, in the binary number system, there are "),pe=s("span"),Ne=a(" distinct symbols used to represent numbers: "),B=s("span"),ce=a(" and "),fe=s("span"),Ie=a(". The value of an integer in binary notation equals to "),Te=s("span"),le=a(", where "),Pe=s("span"),Be=a(" is the "),qe=s("span"),x=a("-th (binary) digit. For instance, the binary number "),ye=s("span"),De=a("."),ot=q(),Se=s("h2"),lt=a("Representing numbers with qubits"),Ue=q(),Me=s("p"),at=a("Consider "),je=s("span"),$e=a(" qubits aranged in a row, each of which are in either of the two basis states "),xe=s("span"),nt=a(" or "),Re=s("span"),it=a(". With a little combinatorics, we can see that there are "),Qe=s("span"),bt=a(" such combinations. For ease of notation, let "),Ke=s("span"),Nt=a("."),_t=q(),M=s("p"),ge=a("For our purposes, we'll interpret these combinations as the binary representations of the numbers from "),Ge=s("span"),Ot=a(" to "),N=s("span"),Je=a(". For example, let "),ut=s("span"),Jt=a(" and the qubits be in the following state: "),Xe=s("span"),Wt=a('. We can "read out" this state as the binary number '),Ce=s("span"),Bt=a(", which - as we saw above - is equal to "),Lt=s("span"),Ut=a("."),Q=q(),He=s("h2"),ht=a("QFT on the qubit level"),Yt=q(),Ae=s("p"),ea=a("The quantum Fourier transform is an operation that modifies the states of qubits in a particular way. (How this is done in practice is another topic, for now we'll only look at the mathematics.) Namely, if "),dt=s("span"),Ee=a(" is the number represented by the qubits (in the example above, "),Rt=s("span"),ta=a("), the QFT sets the state of the "),It=s("span"),ha=a("-th qubit to "),Xt=s("span"),mn=a(". In other words, it sets "),ma=s("span"),pn=a(" and "),ra=s("span"),fn=a(" for all "),pa=s("span"),_n=a("."),ya=q(),qt=s("p"),dn=a("Notice that even though "),oa=s("span"),cn=a(", the associated measurement probabilities "),fa=s("span"),ga=a(" for all "),la=s("span"),jn=a(". This is because the "),Ea=s("span"),zn=a(" term - as we saw in section 2.3 - indicates the qubit's phase and does not affect measurement probabilities."),$n=q(),ze=s("p"),Wn=a("Just like the state of a single qubit can be the linear combination of "),Ta=s("span"),Un=a(" and "),$a=s("span"),Rn=a(", the joint state of these "),Pa=s("span"),Kn=a(" qubits is essentially the linear combination of all the possible combinations of the "),Na=s("span"),Gn=a(" basis states - which, as we saw in the previous section, represent the integers from "),qa=s("span"),Jn=a(" to "),Sa=s("span"),Xn=a(". Since both basis states are measured with a probability of "),Ma=s("span"),Zn=a(" for each qubit, one particular combination of the "),ka=s("span"),Yn=a(" basis states is measured with a probability of "),Ha=s("span"),es=a(". What differs across these combinations are the phase, as we'll see in the next section."),Pn=q(),Aa=s("h2"),ts=a("QFT on the representation level"),Nn=q(),La=s("p"),as=a("Next, let's write out the joint state of the qubits:"),qn=q(),Ia=s("p"),Fa=s("span"),Sn=q(),_a=s("p"),ns=a("We can factor out the "),Va=s("span"),ss=a(" term to get:"),Mn=q(),Oa=s("p"),Ba=s("span"),kn=q(),We=s("p"),rs=a("Let "),xa=s("span"),os=a(" denote the "),Qa=s("span"),ls=a("-th digit of the binary number represented by the "),Ca=s("span"),is=a(" qubits in a given basis state. In other words, "),Da=s("span"),us=a(" if the "),ja=s("span"),hs=a("-th qubit is in the "),za=s("span"),ms=a(" state, and "),Wa=s("span"),ps=a(" if it's in the "),Ua=s("span"),fs=a(" state for all "),Ra=s("span"),_s=a(". Using this notation, we can write the expression above in the form of a sum instead of a product:"),Hn=q(),Ka=s("p"),Ga=s("span"),An=q(),Kt=s("p"),ds=a("The formula above includes all possible combinations of basis states with "),bn=s("em"),cs=a("equal weight"),bs=a(", but "),vn=s("em"),vs=a("different phases"),ws=a(". Let's define the "),wn=s("em"),ys=a("phase of the combination"),gs=a(" as the product of the phases of individual qubits within that combination. We can then factor out this phase as we iterate over the combinations:"),Ln=q(),Ja=s("p"),Xa=s("span"),In=q(),Za=s("p"),Ya=s("span"),Fn=q(),en=s("p"),tn=s("span"),Vn=q(),na=s("p"),Es=a("Notice that if "),an=s("span"),Ts=a(", the exponential term can be simplified the following way: "),nn=s("span"),$s=a("."),On=q(),sn=s("h1"),Ps=a("TODO"),Bn=q(),rn=s("blockquote"),yn=s("p"),Ns=a("a lot")},l(p){i=r(p,"H1",{});var K=o(i);m=n(K,"Quantum Fourier transform"),K.forEach(t),f=S(p),d=r(p,"H2",{});var ks=o(d);g=n(ks,"Binary number system"),ks.forEach(t),c=S(p),b=r(p,"P",{});var Ve=o(b);w=n(Ve,"In the decimal number system, there are "),y=r(Ve,"SPAN",{});var Sr=o(y);Sr.forEach(t),E=n(Ve," distinct symbols used to represent numbers: "),I=r(Ve,"SPAN",{});var Mr=o(I);Mr.forEach(t),C=n(Ve,". The value of these symbols depends on their place in a given number. For example, in the number "),U=r(Ve,"SPAN",{});var kr=o(U);kr.forEach(t),j=n(Ve,", the symbol "),O=r(Ve,"SPAN",{});var Hr=o(O);Hr.forEach(t),se=n(Ve," stands for "),P=r(Ve,"SPAN",{});var Ar=o(P);Ar.forEach(t),W=n(Ve,", whereas in the number "),z=r(Ve,"SPAN",{});var Lr=o(z);Lr.forEach(t),te=n(Ve,", it represents "),X=r(Ve,"SPAN",{});var Ir=o(X);Ir.forEach(t),de=n(Ve,". In general, an integer in decimal notation with "),ae=r(Ve,"SPAN",{});var Fr=o(ae);Fr.forEach(t),he=n(Ve," digits equals "),D=r(Ve,"SPAN",{});var Vr=o(D);Vr.forEach(t),L=n(Ve,", where "),F=r(Ve,"SPAN",{});var Or=o(F);Or.forEach(t),me=n(Ve," is the "),R=r(Ve,"SPAN",{});var Br=o(R);Br.forEach(t),k=n(Ve,"-th digit (going from left to right). To illustrate this with a concrete example, the number above "),V=r(Ve,"SPAN",{});var xr=o(V);xr.forEach(t),be=n(Ve,"."),Ve.forEach(t),oe=S(p),ne=r(p,"P",{});var St=o(ne);we=n(St,"Analogously, in the binary number system, there are "),pe=r(St,"SPAN",{});var Qr=o(pe);Qr.forEach(t),Ne=n(St," distinct symbols used to represent numbers: "),B=r(St,"SPAN",{});var Cr=o(B);Cr.forEach(t),ce=n(St," and "),fe=r(St,"SPAN",{});var Dr=o(fe);Dr.forEach(t),Ie=n(St,". The value of an integer in binary notation equals to "),Te=r(St,"SPAN",{});var jr=o(Te);jr.forEach(t),le=n(St,", where "),Pe=r(St,"SPAN",{});var zr=o(Pe);zr.forEach(t),Be=n(St," is the "),qe=r(St,"SPAN",{});var Wr=o(qe);Wr.forEach(t),x=n(St,"-th (binary) digit. For instance, the binary number "),ye=r(St,"SPAN",{});var Ur=o(ye);Ur.forEach(t),De=n(St,"."),St.forEach(t),ot=S(p),Se=r(p,"H2",{});var Hs=o(Se);lt=n(Hs,"Representing numbers with qubits"),Hs.forEach(t),Ue=S(p),Me=r(p,"P",{});var Gt=o(Me);at=n(Gt,"Consider "),je=r(Gt,"SPAN",{});var Rr=o(je);Rr.forEach(t),$e=n(Gt," qubits aranged in a row, each of which are in either of the two basis states "),xe=r(Gt,"SPAN",{});var Kr=o(xe);Kr.forEach(t),nt=n(Gt," or "),Re=r(Gt,"SPAN",{});var Gr=o(Re);Gr.forEach(t),it=n(Gt,". With a little combinatorics, we can see that there are "),Qe=r(Gt,"SPAN",{});var Jr=o(Qe);Jr.forEach(t),bt=n(Gt," such combinations. For ease of notation, let "),Ke=r(Gt,"SPAN",{});var Xr=o(Ke);Xr.forEach(t),Nt=n(Gt,"."),Gt.forEach(t),_t=S(p),M=r(p,"P",{});var Ft=o(M);ge=n(Ft,"For our purposes, we'll interpret these combinations as the binary representations of the numbers from "),Ge=r(Ft,"SPAN",{});var Zr=o(Ge);Zr.forEach(t),Ot=n(Ft," to "),N=r(Ft,"SPAN",{});var Yr=o(N);Yr.forEach(t),Je=n(Ft,". For example, let "),ut=r(Ft,"SPAN",{});var eo=o(ut);eo.forEach(t),Jt=n(Ft," and the qubits be in the following state: "),Xe=r(Ft,"SPAN",{});var to=o(Xe);to.forEach(t),Wt=n(Ft,'. We can "read out" this state as the binary number '),Ce=r(Ft,"SPAN",{});var ao=o(Ce);ao.forEach(t),Bt=n(Ft,", which - as we saw above - is equal to "),Lt=r(Ft,"SPAN",{});var no=o(Lt);no.forEach(t),Ut=n(Ft,"."),Ft.forEach(t),Q=S(p),He=r(p,"H2",{});var As=o(He);ht=n(As,"QFT on the qubit level"),As.forEach(t),Yt=S(p),Ae=r(p,"P",{});var Mt=o(Ae);ea=n(Mt,"The quantum Fourier transform is an operation that modifies the states of qubits in a particular way. (How this is done in practice is another topic, for now we'll only look at the mathematics.) Namely, if "),dt=r(Mt,"SPAN",{});var so=o(dt);so.forEach(t),Ee=n(Mt," is the number represented by the qubits (in the example above, "),Rt=r(Mt,"SPAN",{});var ro=o(Rt);ro.forEach(t),ta=n(Mt,"), the QFT sets the state of the "),It=r(Mt,"SPAN",{});var oo=o(It);oo.forEach(t),ha=n(Mt,"-th qubit to "),Xt=r(Mt,"SPAN",{});var lo=o(Xt);lo.forEach(t),mn=n(Mt,". In other words, it sets "),ma=r(Mt,"SPAN",{});var io=o(ma);io.forEach(t),pn=n(Mt," and "),ra=r(Mt,"SPAN",{});var uo=o(ra);uo.forEach(t),fn=n(Mt," for all "),pa=r(Mt,"SPAN",{});var ho=o(pa);ho.forEach(t),_n=n(Mt,"."),Mt.forEach(t),ya=S(p),qt=r(p,"P",{});var sa=o(qt);dn=n(sa,"Notice that even though "),oa=r(sa,"SPAN",{});var mo=o(oa);mo.forEach(t),cn=n(sa,", the associated measurement probabilities "),fa=r(sa,"SPAN",{});var po=o(fa);po.forEach(t),ga=n(sa," for all "),la=r(sa,"SPAN",{});var fo=o(la);fo.forEach(t),jn=n(sa,". This is because the "),Ea=r(sa,"SPAN",{});var _o=o(Ea);_o.forEach(t),zn=n(sa," term - as we saw in section 2.3 - indicates the qubit's phase and does not affect measurement probabilities."),sa.forEach(t),$n=S(p),ze=r(p,"P",{});var mt=o(ze);Wn=n(mt,"Just like the state of a single qubit can be the linear combination of "),Ta=r(mt,"SPAN",{});var co=o(Ta);co.forEach(t),Un=n(mt," and "),$a=r(mt,"SPAN",{});var bo=o($a);bo.forEach(t),Rn=n(mt,", the joint state of these "),Pa=r(mt,"SPAN",{});var vo=o(Pa);vo.forEach(t),Kn=n(mt," qubits is essentially the linear combination of all the possible combinations of the "),Na=r(mt,"SPAN",{});var wo=o(Na);wo.forEach(t),Gn=n(mt," basis states - which, as we saw in the previous section, represent the integers from "),qa=r(mt,"SPAN",{});var yo=o(qa);yo.forEach(t),Jn=n(mt," to "),Sa=r(mt,"SPAN",{});var go=o(Sa);go.forEach(t),Xn=n(mt,". Since both basis states are measured with a probability of "),Ma=r(mt,"SPAN",{});var Eo=o(Ma);Eo.forEach(t),Zn=n(mt," for each qubit, one particular combination of the "),ka=r(mt,"SPAN",{});var To=o(ka);To.forEach(t),Yn=n(mt," basis states is measured with a probability of "),Ha=r(mt,"SPAN",{});var $o=o(Ha);$o.forEach(t),es=n(mt,". What differs across these combinations are the phase, as we'll see in the next section."),mt.forEach(t),Pn=S(p),Aa=r(p,"H2",{});var Ls=o(Aa);ts=n(Ls,"QFT on the representation level"),Ls.forEach(t),Nn=S(p),La=r(p,"P",{});var Is=o(La);as=n(Is,"Next, let's write out the joint state of the qubits:"),Is.forEach(t),qn=S(p),Ia=r(p,"P",{});var Fs=o(Ia);Fa=r(Fs,"SPAN",{});var Po=o(Fa);Po.forEach(t),Fs.forEach(t),Sn=S(p),_a=r(p,"P",{});var xn=o(_a);ns=n(xn,"We can factor out the "),Va=r(xn,"SPAN",{});var No=o(Va);No.forEach(t),ss=n(xn," term to get:"),xn.forEach(t),Mn=S(p),Oa=r(p,"P",{});var Vs=o(Oa);Ba=r(Vs,"SPAN",{});var qo=o(Ba);qo.forEach(t),Vs.forEach(t),kn=S(p),We=r(p,"P",{});var pt=o(We);rs=n(pt,"Let "),xa=r(pt,"SPAN",{});var So=o(xa);So.forEach(t),os=n(pt," denote the "),Qa=r(pt,"SPAN",{});var Mo=o(Qa);Mo.forEach(t),ls=n(pt,"-th digit of the binary number represented by the "),Ca=r(pt,"SPAN",{});var ko=o(Ca);ko.forEach(t),is=n(pt," qubits in a given basis state. In other words, "),Da=r(pt,"SPAN",{});var Ho=o(Da);Ho.forEach(t),us=n(pt," if the "),ja=r(pt,"SPAN",{});var Ao=o(ja);Ao.forEach(t),hs=n(pt,"-th qubit is in the "),za=r(pt,"SPAN",{});var Lo=o(za);Lo.forEach(t),ms=n(pt," state, and "),Wa=r(pt,"SPAN",{});var Io=o(Wa);Io.forEach(t),ps=n(pt," if it's in the "),Ua=r(pt,"SPAN",{});var Fo=o(Ua);Fo.forEach(t),fs=n(pt," state for all "),Ra=r(pt,"SPAN",{});var Vo=o(Ra);Vo.forEach(t),_s=n(pt,". Using this notation, we can write the expression above in the form of a sum instead of a product:"),pt.forEach(t),Hn=S(p),Ka=r(p,"P",{});var Os=o(Ka);Ga=r(Os,"SPAN",{});var Oo=o(Ga);Oo.forEach(t),Os.forEach(t),An=S(p),Kt=r(p,"P",{});var da=o(Kt);ds=n(da,"The formula above includes all possible combinations of basis states with "),bn=r(da,"EM",{});var Bs=o(bn);cs=n(Bs,"equal weight"),Bs.forEach(t),bs=n(da,", but "),vn=r(da,"EM",{});var xs=o(vn);vs=n(xs,"different phases"),xs.forEach(t),ws=n(da,". Let's define the "),wn=r(da,"EM",{});var Qs=o(wn);ys=n(Qs,"phase of the combination"),Qs.forEach(t),gs=n(da," as the product of the phases of individual qubits within that combination. We can then factor out this phase as we iterate over the combinations:"),da.forEach(t),Ln=S(p),Ja=r(p,"P",{});var Cs=o(Ja);Xa=r(Cs,"SPAN",{});var Bo=o(Xa);Bo.forEach(t),Cs.forEach(t),In=S(p),Za=r(p,"P",{});var Ds=o(Za);Ya=r(Ds,"SPAN",{});var xo=o(Ya);xo.forEach(t),Ds.forEach(t),Fn=S(p),en=r(p,"P",{});var js=o(en);tn=r(js,"SPAN",{});var Qo=o(tn);Qo.forEach(t),js.forEach(t),Vn=S(p),na=r(p,"P",{});var on=o(na);Es=n(on,"Notice that if "),an=r(on,"SPAN",{});var Co=o(an);Co.forEach(t),Ts=n(on,", the exponential term can be simplified the following way: "),nn=r(on,"SPAN",{});var Do=o(nn);Do.forEach(t),$s=n(on,"."),on.forEach(t),On=S(p),sn=r(p,"H1",{});var zs=o(sn);Ps=n(zs,"TODO"),zs.forEach(t),Bn=S(p),rn=r(p,"BLOCKQUOTE",{});var Ws=o(rn);yn=r(Ws,"P",{});var Us=o(yn);Ns=n(Us,"a lot"),Us.forEach(t),Ws.forEach(t)},m(p,K){_(p,i,K),e(i,m),_(p,f,K),_(p,d,K),e(d,g),_(p,c,K),_(p,b,K),e(b,w),e(b,y),y.innerHTML=T,e(b,E),e(b,I),I.innerHTML=J,e(b,C),e(b,U),U.innerHTML=ee,e(b,j),e(b,O),O.innerHTML=re,e(b,se),e(b,P),P.innerHTML=v,e(b,W),e(b,z),z.innerHTML=_e,e(b,te),e(b,X),X.innerHTML=ue,e(b,de),e(b,ae),ae.innerHTML=A,e(b,he),e(b,D),D.innerHTML=Ze,e(b,L),e(b,F),F.innerHTML=et,e(b,me),e(b,R),R.innerHTML=$,e(b,k),e(b,V),V.innerHTML=ve,e(b,be),_(p,oe,K),_(p,ne,K),e(ne,we),e(ne,pe),pe.innerHTML=tt,e(ne,Ne),e(ne,B),B.innerHTML=ie,e(ne,ce),e(ne,fe),fe.innerHTML=Z,e(ne,Ie),e(ne,Te),Te.innerHTML=ft,e(ne,le),e(ne,Pe),Pe.innerHTML=st,e(ne,Be),e(ne,qe),qe.innerHTML=Y,e(ne,x),e(ne,ye),ye.innerHTML=rt,e(ne,De),_(p,ot,K),_(p,Se,K),e(Se,lt),_(p,Ue,K),_(p,Me,K),e(Me,at),e(Me,je),je.innerHTML=Vt,e(Me,$e),e(Me,xe),xe.innerHTML=Dt,e(Me,nt),e(Me,Re),Re.innerHTML=yt,e(Me,it),e(Me,Qe),Qe.innerHTML=kt,e(Me,bt),e(Me,Ke),Ke.innerHTML=Ht,e(Me,Nt),_(p,_t,K),_(p,M,K),e(M,ge),e(M,Ge),Ge.innerHTML=At,e(M,Ot),e(M,N),N.innerHTML=ke,e(M,Je),e(M,ut),ut.innerHTML=jt,e(M,Jt),e(M,Xe),Xe.innerHTML=zt,e(M,Wt),e(M,Ce),Ce.innerHTML=G,e(M,Bt),e(M,Lt),Lt.innerHTML=Zt,e(M,Ut),_(p,Q,K),_(p,He,K),e(He,ht),_(p,Yt,K),_(p,Ae,K),e(Ae,ea),e(Ae,dt),dt.innerHTML=ca,e(Ae,Ee),e(Ae,Rt),Rt.innerHTML=ua,e(Ae,ta),e(Ae,It),It.innerHTML=wa,e(Ae,ha),e(Ae,Xt),Xt.innerHTML=Qn,e(Ae,mn),e(Ae,ma),ma.innerHTML=Fe,e(Ae,pn),e(Ae,ra),ra.innerHTML=Cn,e(Ae,fn),e(Ae,pa),pa.innerHTML=Dn,e(Ae,_n),_(p,ya,K),_(p,qt,K),e(qt,dn),e(qt,oa),oa.innerHTML=aa,e(qt,cn),e(qt,fa),fa.innerHTML=En,e(qt,ga),e(qt,la),la.innerHTML=Tn,e(qt,jn),e(qt,Ea),Ea.innerHTML=er,e(qt,zn),_(p,$n,K),_(p,ze,K),e(ze,Wn),e(ze,Ta),Ta.innerHTML=tr,e(ze,Un),e(ze,$a),$a.innerHTML=ar,e(ze,Rn),e(ze,Pa),Pa.innerHTML=nr,e(ze,Kn),e(ze,Na),Na.innerHTML=sr,e(ze,Gn),e(ze,qa),qa.innerHTML=rr,e(ze,Jn),e(ze,Sa),Sa.innerHTML=or,e(ze,Xn),e(ze,Ma),Ma.innerHTML=lr,e(ze,Zn),e(ze,ka),ka.innerHTML=ir,e(ze,Yn),e(ze,Ha),Ha.innerHTML=ur,e(ze,es),_(p,Pn,K),_(p,Aa,K),e(Aa,ts),_(p,Nn,K),_(p,La,K),e(La,as),_(p,qn,K),_(p,Ia,K),e(Ia,Fa),Fa.innerHTML=hr,_(p,Sn,K),_(p,_a,K),e(_a,ns),e(_a,Va),Va.innerHTML=mr,e(_a,ss),_(p,Mn,K),_(p,Oa,K),e(Oa,Ba),Ba.innerHTML=pr,_(p,kn,K),_(p,We,K),e(We,rs),e(We,xa),xa.innerHTML=fr,e(We,os),e(We,Qa),Qa.innerHTML=_r,e(We,ls),e(We,Ca),Ca.innerHTML=dr,e(We,is),e(We,Da),Da.innerHTML=cr,e(We,us),e(We,ja),ja.innerHTML=br,e(We,hs),e(We,za),za.innerHTML=vr,e(We,ms),e(We,Wa),Wa.innerHTML=wr,e(We,ps),e(We,Ua),Ua.innerHTML=yr,e(We,fs),e(We,Ra),Ra.innerHTML=gr,e(We,_s),_(p,Hn,K),_(p,Ka,K),e(Ka,Ga),Ga.innerHTML=Er,_(p,An,K),_(p,Kt,K),e(Kt,ds),e(Kt,bn),e(bn,cs),e(Kt,bs),e(Kt,vn),e(vn,vs),e(Kt,ws),e(Kt,wn),e(wn,ys),e(Kt,gs),_(p,Ln,K),_(p,Ja,K),e(Ja,Xa),Xa.innerHTML=Tr,_(p,In,K),_(p,Za,K),e(Za,Ya),Ya.innerHTML=$r,_(p,Fn,K),_(p,en,K),e(en,tn),tn.innerHTML=Pr,_(p,Vn,K),_(p,na,K),e(na,Es),e(na,an),an.innerHTML=Nr,e(na,Ts),e(na,nn),nn.innerHTML=qr,e(na,$s),_(p,On,K),_(p,sn,K),e(sn,Ps),_(p,Bn,K),_(p,rn,K),e(rn,yn),e(yn,Ns),qs||(Ms=[u(y,"mouseenter",l[0]),u(I,"mouseenter",l[1]),u(U,"mouseenter",l[2]),u(O,"mouseenter",l[3]),u(P,"mouseenter",l[4]),u(z,"mouseenter",l[5]),u(X,"mouseenter",l[6]),u(ae,"mouseenter",l[7]),u(D,"mouseenter",l[8]),u(F,"mouseenter",l[9]),u(R,"mouseenter",l[10]),u(V,"mouseenter",l[11]),u(pe,"mouseenter",l[12]),u(B,"mouseenter",l[13]),u(fe,"mouseenter",l[14]),u(Te,"mouseenter",l[15]),u(Pe,"mouseenter",l[16]),u(qe,"mouseenter",l[17]),u(ye,"mouseenter",l[18]),u(je,"mouseenter",l[19]),u(xe,"mouseenter",l[20]),u(Re,"mouseenter",l[21]),u(Qe,"mouseenter",l[22]),u(Ke,"mouseenter",l[23]),u(Ge,"mouseenter",l[24]),u(N,"mouseenter",l[25]),u(ut,"mouseenter",l[26]),u(Xe,"mouseenter",l[27]),u(Ce,"mouseenter",l[28]),u(Lt,"mouseenter",l[29]),u(dt,"mouseenter",l[30]),u(Rt,"mouseenter",l[31]),u(It,"mouseenter",l[32]),u(Xt,"mouseenter",l[33]),u(ma,"mouseenter",l[34]),u(ra,"mouseenter",l[35]),u(pa,"mouseenter",l[36]),u(oa,"mouseenter",l[37]),u(fa,"mouseenter",l[38]),u(la,"mouseenter",l[39]),u(Ea,"mouseenter",l[40]),u(Ta,"mouseenter",l[41]),u($a,"mouseenter",l[42]),u(Pa,"mouseenter",l[43]),u(Na,"mouseenter",l[44]),u(qa,"mouseenter",l[45]),u(Sa,"mouseenter",l[46]),u(Ma,"mouseenter",l[47]),u(ka,"mouseenter",l[48]),u(Ha,"mouseenter",l[49]),u(Fa,"mouseenter",l[50]),u(Va,"mouseenter",l[51]),u(Ba,"mouseenter",l[52]),u(xa,"mouseenter",l[53]),u(Qa,"mouseenter",l[54]),u(Ca,"mouseenter",l[55]),u(Da,"mouseenter",l[56]),u(ja,"mouseenter",l[57]),u(za,"mouseenter",l[58]),u(Wa,"mouseenter",l[59]),u(Ua,"mouseenter",l[60]),u(Ra,"mouseenter",l[61]),u(Ga,"mouseenter",l[62]),u(Xa,"mouseenter",l[63]),u(Ya,"mouseenter",l[64]),u(tn,"mouseenter",l[65]),u(an,"mouseenter",l[66]),u(nn,"mouseenter",l[67])],qs=!0)},p:wt,i:wt,o:wt,d(p){p&&t(i),p&&t(f),p&&t(d),p&&t(c),p&&t(b),p&&t(oe),p&&t(ne),p&&t(ot),p&&t(Se),p&&t(Ue),p&&t(Me),p&&t(_t),p&&t(M),p&&t(Q),p&&t(He),p&&t(Yt),p&&t(Ae),p&&t(ya),p&&t(qt),p&&t($n),p&&t(ze),p&&t(Pn),p&&t(Aa),p&&t(Nn),p&&t(La),p&&t(qn),p&&t(Ia),p&&t(Sn),p&&t(_a),p&&t(Mn),p&&t(Oa),p&&t(kn),p&&t(We),p&&t(Hn),p&&t(Ka),p&&t(An),p&&t(Kt),p&&t(Ln),p&&t(Ja),p&&t(In),p&&t(Za),p&&t(Fn),p&&t(en),p&&t(Vn),p&&t(na),p&&t(On),p&&t(sn),p&&t(Bn),p&&t(rn),qs=!1,ia(Ms)}}}function H(l){console.log(l)}function El(l){return[()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"]),()=>H(["a","b"])]}class Tl extends xt{constructor(i){super(),Qt(this,i,El,gl,Ct,{},null,[-1,-1,-1])}}function $l(l){let i,m,f,d;return i=new yl({}),f=new Tl({}),{c(){Et(i.$$.fragment),m=q(),Et(f.$$.fragment)},l(g){Tt(i.$$.fragment,g),m=S(g),Tt(f.$$.fragment,g)},m(g,c){$t(i,g,c),_(g,m,c),$t(f,g,c),d=!0},p:wt,i(g){d||(Ye(i.$$.fragment,g),Ye(f.$$.fragment,g),d=!0)},o(g){ct(i.$$.fragment,g),ct(f.$$.fragment,g),d=!1},d(g){Pt(i,g),g&&t(m),Pt(f,g)}}}class Pl extends xt{constructor(i){super(),Qt(this,i,null,$l,Ct,{})}}function Nl(l){let i,m,f,d,g,c,b=h("\\alpha")+"",w,y,T=h("\\beta")+"",E,I,J=h("\\alpha = \\Vert{\\alpha}\\Vert \\cdot e^{i \\phi_{\\alpha}}")+"",C,U,ee=h("\\beta = \\Vert{\\beta}\\Vert \\cdot e^{i \\phi_{\\beta}}")+"",j,O,re=h("\\Vert{\\alpha}\\Vert \\cdot e^{i \\phi_{\\alpha}} |0\\rangle + \\Vert{\\beta}\\Vert \\cdot e^{i \\phi_{\\beta}} |1\\rangle")+"",se,P,v,W,z,_e=h("e^{i \\phi_{\\alpha}}")+"",te,X,ue=h("\\Vert{e^{i \\phi_{\\alpha}}}\\Vert^2")+"",de,ae,A=h("1")+"",he,D,Ze=h("\\phi_{\\alpha}")+"",L,F,et=h("\\phi_{\\beta}")+"",me,R,$=h("e^{i \\phi_{\\alpha}}")+"",k,V,ve=h("\\Vert{\\alpha}\\Vert \\cdot |0\\rangle + \\Vert{\\beta}\\Vert \\cdot \\frac{e^{i \\phi_{\\beta}}}{e^{i \\phi_{\\alpha}}} |1\\rangle")+"",be,oe,ne=h("\\frac{e^{i \\phi_{\\beta}}}{e^{i \\phi_{\\alpha}}} = e^{i (\\phi_{\\beta} - \\phi_{\\alpha})}")+"",we,pe,tt=h("\\phi = \\phi_{\\beta} - \\phi_{\\alpha}")+"",Ne,B,ie=h("\\Vert{\\alpha}\\Vert \\cdot |0\\rangle + \\Vert{\\beta}\\Vert \\cdot e^{i \\phi} |1\\rangle")+"",ce,fe,Z,Ie,Te,ft=h("\\Vert{\\alpha}\\Vert^2 + \\Vert{\\beta}\\Vert^2 = 1")+"",le,Pe,st,Be,qe,Y=h("\\theta")+"",x,ye,rt=h("\\cos{(\\frac{\\theta}{2})} \\cdot |0 \\rangle + \\sin{(\\frac{\\theta}{2})} \\cdot e^{i \\phi} |1 \\rangle")+"",De,ot,Se=h("\\theta")+"",lt,Ue,Me=h("\\phi")+"",at,je,Vt=h("\\theta")+"",$e,xe,Dt=h("z")+"",nt,Re,yt=h("\\phi")+"",it,Qe,kt=h("x-y")+"",bt,Ke,Ht,Nt,_t,M,ge,Ge,At=h("\\theta")+"",Ot,N,ke=h("\\phi")+"",Je,ut,jt,Jt,Xe,zt,Wt,Ce,G,Bt,Lt,Zt,Ut;return{c(){i=s("h2"),m=a("The Bloch-sphere"),f=q(),d=s("p"),g=a("As the coefficients "),c=s("span"),w=a(" and "),y=s("span"),E=a(" are complex numbers, they can be expressed in the form "),I=s("span"),C=a(" and "),U=s("span"),j=a(". Thus, the state of the qubit can be rewritten as "),O=s("span"),se=a("."),P=q(),v=s("p"),W=a("Remember that "),z=s("span"),te=a(" is a unit vector rotated around the origin, and therefore the square of its norm "),X=s("span"),de=a(" also equals to "),ae=s("span"),he=a(". This means that we can modify the angles "),D=s("span"),L=a(" and "),F=s("span"),me=a(" freely without affecting the measurement probabilities. Therefore, we can do an algebraic trick to simplify the expression above. Namely, let's divide the state by "),R=s("span"),k=a(" to obtain "),V=s("span"),be=a(". By the rules of exponentiation, "),oe=s("span"),we=a(". Next, let's introduce a new variable "),pe=s("span"),Ne=a(", with the help of which the state can be further simplified to "),B=s("span"),ce=a("."),fe=q(),Z=s("p"),Ie=a("We know that "),Te=s("span"),le=a(". Consequently, these two numbers can also be represented geometrically as vector of unit length rotated around the origin by some angle, the "),Pe=s("em"),st=a("double"),Be=a(" of which we'll denote as "),qe=s("span"),x=a(". Using trigonometry, we can now rewrite the state as "),ye=s("span"),De=a(". Notice, that we now only need two variables to express the state of the qubit: the angles "),ot=s("span"),lt=a(" and "),Ue=s("span"),at=a(". Geometrically, this can be represented as a vector pointing to the surface of 3-dimensional sphere with unit radius, where "),je=s("span"),$e=a(" is the angle of the vector and the "),xe=s("span"),nt=a(" axis, and "),Re=s("span"),it=a(" is the angle of the vertical projection of the vector on the "),Qe=s("span"),bt=a(" plane. This representation of qubit states is called the "),Ke=s("em"),Ht=a("Bloch sphere"),Nt=a("."),_t=q(),M=s("p"),ge=a("It's important to note that of the two degrees of freedom on the Bloch sphere, only the angle "),Ge=s("span"),Ot=a(" is related to measurement probabilities. "),N=s("span"),Je=a(" is an inherently quantum property called the "),ut=s("em"),jt=a("phase"),Jt=a(" that does not have physical manifestation directly observable to us. Because of this, it's hard to find any intuitive analogy from everyday life that could help us understand what exactly the phase is. The most useful approach in this context is to look at the phase as a matematical property of quantum objects that we can leverage to design clever algorithms."),Xe=q(),zt=s("h1"),Wt=a("TODO"),Ce=q(),G=s("blockquote"),Bt=s("p"),Lt=a("make sure the connection is made between the representation and playing with the bloch sphere is possible")},l(Q){i=r(Q,"H2",{});var He=o(i);m=n(He,"The Bloch-sphere"),He.forEach(t),f=S(Q),d=r(Q,"P",{});var ht=o(d);g=n(ht,"As the coefficients "),c=r(ht,"SPAN",{});var Yt=o(c);Yt.forEach(t),w=n(ht," and "),y=r(ht,"SPAN",{});var Ae=o(y);Ae.forEach(t),E=n(ht," are complex numbers, they can be expressed in the form "),I=r(ht,"SPAN",{});var ea=o(I);ea.forEach(t),C=n(ht," and "),U=r(ht,"SPAN",{});var dt=o(U);dt.forEach(t),j=n(ht,". Thus, the state of the qubit can be rewritten as "),O=r(ht,"SPAN",{});var ca=o(O);ca.forEach(t),se=n(ht,"."),ht.forEach(t),P=S(Q),v=r(Q,"P",{});var Ee=o(v);W=n(Ee,"Remember that "),z=r(Ee,"SPAN",{});var Rt=o(z);Rt.forEach(t),te=n(Ee," is a unit vector rotated around the origin, and therefore the square of its norm "),X=r(Ee,"SPAN",{});var ua=o(X);ua.forEach(t),de=n(Ee," also equals to "),ae=r(Ee,"SPAN",{});var ta=o(ae);ta.forEach(t),he=n(Ee,". This means that we can modify the angles "),D=r(Ee,"SPAN",{});var It=o(D);It.forEach(t),L=n(Ee," and "),F=r(Ee,"SPAN",{});var wa=o(F);wa.forEach(t),me=n(Ee," freely without affecting the measurement probabilities. Therefore, we can do an algebraic trick to simplify the expression above. Namely, let's divide the state by "),R=r(Ee,"SPAN",{});var ha=o(R);ha.forEach(t),k=n(Ee," to obtain "),V=r(Ee,"SPAN",{});var Xt=o(V);Xt.forEach(t),be=n(Ee,". By the rules of exponentiation, "),oe=r(Ee,"SPAN",{});var Qn=o(oe);Qn.forEach(t),we=n(Ee,". Next, let's introduce a new variable "),pe=r(Ee,"SPAN",{});var mn=o(pe);mn.forEach(t),Ne=n(Ee,", with the help of which the state can be further simplified to "),B=r(Ee,"SPAN",{});var ma=o(B);ma.forEach(t),ce=n(Ee,"."),Ee.forEach(t),fe=S(Q),Z=r(Q,"P",{});var Fe=o(Z);Ie=n(Fe,"We know that "),Te=r(Fe,"SPAN",{});var pn=o(Te);pn.forEach(t),le=n(Fe,". Consequently, these two numbers can also be represented geometrically as vector of unit length rotated around the origin by some angle, the "),Pe=r(Fe,"EM",{});var ra=o(Pe);st=n(ra,"double"),ra.forEach(t),Be=n(Fe," of which we'll denote as "),qe=r(Fe,"SPAN",{});var Cn=o(qe);Cn.forEach(t),x=n(Fe,". Using trigonometry, we can now rewrite the state as "),ye=r(Fe,"SPAN",{});var fn=o(ye);fn.forEach(t),De=n(Fe,". Notice, that we now only need two variables to express the state of the qubit: the angles "),ot=r(Fe,"SPAN",{});var pa=o(ot);pa.forEach(t),lt=n(Fe," and "),Ue=r(Fe,"SPAN",{});var Dn=o(Ue);Dn.forEach(t),at=n(Fe,". Geometrically, this can be represented as a vector pointing to the surface of 3-dimensional sphere with unit radius, where "),je=r(Fe,"SPAN",{});var _n=o(je);_n.forEach(t),$e=n(Fe," is the angle of the vector and the "),xe=r(Fe,"SPAN",{});var ya=o(xe);ya.forEach(t),nt=n(Fe," axis, and "),Re=r(Fe,"SPAN",{});var qt=o(Re);qt.forEach(t),it=n(Fe," is the angle of the vertical projection of the vector on the "),Qe=r(Fe,"SPAN",{});var dn=o(Qe);dn.forEach(t),bt=n(Fe," plane. This representation of qubit states is called the "),Ke=r(Fe,"EM",{});var oa=o(Ke);Ht=n(oa,"Bloch sphere"),oa.forEach(t),Nt=n(Fe,"."),Fe.forEach(t),_t=S(Q),M=r(Q,"P",{});var aa=o(M);ge=n(aa,"It's important to note that of the two degrees of freedom on the Bloch sphere, only the angle "),Ge=r(aa,"SPAN",{});var cn=o(Ge);cn.forEach(t),Ot=n(aa," is related to measurement probabilities. "),N=r(aa,"SPAN",{});var fa=o(N);fa.forEach(t),Je=n(aa," is an inherently quantum property called the "),ut=r(aa,"EM",{});var En=o(ut);jt=n(En,"phase"),En.forEach(t),Jt=n(aa," that does not have physical manifestation directly observable to us. Because of this, it's hard to find any intuitive analogy from everyday life that could help us understand what exactly the phase is. The most useful approach in this context is to look at the phase as a matematical property of quantum objects that we can leverage to design clever algorithms."),aa.forEach(t),Xe=S(Q),zt=r(Q,"H1",{});var ga=o(zt);Wt=n(ga,"TODO"),ga.forEach(t),Ce=S(Q),G=r(Q,"BLOCKQUOTE",{});var la=o(G);Bt=r(la,"P",{});var Tn=o(Bt);Lt=n(Tn,"make sure the connection is made between the representation and playing with the bloch sphere is possible"),Tn.forEach(t),la.forEach(t)},m(Q,He){_(Q,i,He),e(i,m),_(Q,f,He),_(Q,d,He),e(d,g),e(d,c),c.innerHTML=b,e(d,w),e(d,y),y.innerHTML=T,e(d,E),e(d,I),I.innerHTML=J,e(d,C),e(d,U),U.innerHTML=ee,e(d,j),e(d,O),O.innerHTML=re,e(d,se),_(Q,P,He),_(Q,v,He),e(v,W),e(v,z),z.innerHTML=_e,e(v,te),e(v,X),X.innerHTML=ue,e(v,de),e(v,ae),ae.innerHTML=A,e(v,he),e(v,D),D.innerHTML=Ze,e(v,L),e(v,F),F.innerHTML=et,e(v,me),e(v,R),R.innerHTML=$,e(v,k),e(v,V),V.innerHTML=ve,e(v,be),e(v,oe),oe.innerHTML=ne,e(v,we),e(v,pe),pe.innerHTML=tt,e(v,Ne),e(v,B),B.innerHTML=ie,e(v,ce),_(Q,fe,He),_(Q,Z,He),e(Z,Ie),e(Z,Te),Te.innerHTML=ft,e(Z,le),e(Z,Pe),e(Pe,st),e(Z,Be),e(Z,qe),qe.innerHTML=Y,e(Z,x),e(Z,ye),ye.innerHTML=rt,e(Z,De),e(Z,ot),ot.innerHTML=Se,e(Z,lt),e(Z,Ue),Ue.innerHTML=Me,e(Z,at),e(Z,je),je.innerHTML=Vt,e(Z,$e),e(Z,xe),xe.innerHTML=Dt,e(Z,nt),e(Z,Re),Re.innerHTML=yt,e(Z,it),e(Z,Qe),Qe.innerHTML=kt,e(Z,bt),e(Z,Ke),e(Ke,Ht),e(Z,Nt),_(Q,_t,He),_(Q,M,He),e(M,ge),e(M,Ge),Ge.innerHTML=At,e(M,Ot),e(M,N),N.innerHTML=ke,e(M,Je),e(M,ut),e(ut,jt),e(M,Jt),_(Q,Xe,He),_(Q,zt,He),e(zt,Wt),_(Q,Ce,He),_(Q,G,He),e(G,Bt),e(Bt,Lt),Zt||(Ut=[u(c,"mouseenter",l[0]),u(y,"mouseenter",l[1]),u(I,"mouseenter",l[2]),u(U,"mouseenter",l[3]),u(O,"mouseenter",l[4]),u(z,"mouseenter",l[5]),u(X,"mouseenter",l[6]),u(ae,"mouseenter",l[7]),u(D,"mouseenter",l[8]),u(F,"mouseenter",l[9]),u(R,"mouseenter",l[10]),u(V,"mouseenter",l[11]),u(oe,"mouseenter",l[12]),u(pe,"mouseenter",l[13]),u(B,"mouseenter",l[14]),u(Te,"mouseenter",l[15]),u(qe,"mouseenter",l[16]),u(ye,"mouseenter",l[17]),u(ot,"mouseenter",l[18]),u(Ue,"mouseenter",l[19]),u(je,"mouseenter",l[20]),u(xe,"mouseenter",l[21]),u(Re,"mouseenter",l[22]),u(Qe,"mouseenter",l[23]),u(Ge,"mouseenter",l[24]),u(N,"mouseenter",l[25])],Zt=!0)},p:wt,i:wt,o:wt,d(Q){Q&&t(i),Q&&t(f),Q&&t(d),Q&&t(P),Q&&t(v),Q&&t(fe),Q&&t(Z),Q&&t(_t),Q&&t(M),Q&&t(Xe),Q&&t(zt),Q&&t(Ce),Q&&t(G),Zt=!1,ia(Ut)}}}function Oe(l){console.log(l)}function ql(l){return[()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"]),()=>Oe(["a","b"])]}class Sl extends xt{constructor(i){super(),Qt(this,i,ql,Nl,Ct,{})}}var Ml='<a href="https://en.wikipedia.org/wiki/Bit"><h3 class="text-lg font-semibold">Bit</h3></a><p>The <b>bit</b> is the most basic unit of information in computing and digital communications. The name is a portmanteau of <b>binary digit</b>. The bit represents a logical state with one of two possible values. These values are most commonly represented as either <span class="nowrap">"<span class="monospaced">1</span>" or "<span class="monospaced">0</span>"</span>, but other representations such as <i>true</i>/<i>false</i>, <i>yes</i>/<i>no</i>, <i>on</i>/<i>off</i>, or <i>+</i>/<i>\u2212</i> are also commonly used.</p>',kl='<a href="https://en.wikipedia.org/wiki/Qubit"><h3 class="text-lg font-semibold">Qubit</h3></a><p>In quantum computing, a <b>qubit</b> or <b>quantum bit</b> is a basic unit of quantum information\u2014the quantum version of the classic binary bit physically realized with a two-state device. A qubit is a two-state quantum-mechanical system, one of the simplest quantum systems displaying the peculiarity of quantum mechanics. Examples include the spin of the electron in which the two levels can be taken as spin up and spin down; or the polarization of a single photon in which the two states can be taken to be the vertical polarization and the horizontal polarization. In a classical system, a bit would have to be in one state or the other. However, quantum mechanics allows the qubit to be in a coherent superposition of both states simultaneously, a property that is fundamental to quantum mechanics and quantum computing.</p>',Hl='<a href="https://en.wikipedia.org/wiki/Complex_number"><h3 class="text-lg font-semibold">Complex number</h3></a><p>In mathematics, a <b>complex number</b> is an element of a number system that extends the real numbers with a specific element denoted <span class="texhtml mvar" style="font-style:italic">i</span>, called the imaginary unit and satisfying the equation <span class="texhtml "><i>i</i><sup>2</sup> = \u22121</span>; every complex number can be expressed in the form <span class="texhtml "><i>a</i> + <i>bi</i></span>, where <span class="texhtml mvar" style="font-style:italic">a</span> and <span class="texhtml mvar" style="font-style:italic">b</span> are real numbers. Because no real number satisfies the above equation, <span class="texhtml mvar" style="font-style:italic">i</span> was called an imaginary number by Ren\xE9 Descartes. For the complex number <span class="texhtml "><i>a</i> + <i>bi</i></span>, <span class="texhtml mvar" style="font-style:italic">a</span> is called the <b><span class="vanchor"><span class="vanchor-text">real part</span></span></b> and <span class="texhtml mvar" style="font-style:italic">b</span> is called the <b><span class="vanchor"><span class="vanchor-text">imaginary part</span></span></b>. The set of complex numbers is denoted by either of the symbols <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f9add4085095b9b6d28d045fd9c92c2c09f549a7" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:1.678ex;height:2.176ex" /></span> or <span class="texhtml "><b>C</b></span>. Despite the historical nomenclature "imaginary", complex numbers are regarded in the mathematical sciences as just as "real" as the real numbers and are fundamental in many aspects of the scientific description of the natural world.</p>';function Al(l){let i;return{c(){i=a("bits")},l(m){i=n(m,"bits")},m(m,f){_(m,i,f)},d(m){m&&t(i)}}}function Ll(l){let i;return{c(){i=a("Qubits")},l(m){i=n(m,"Qubits")},m(m,f){_(m,i,f)},d(m){m&&t(i)}}}function Il(l){let i;return{c(){i=a("complex numbers")},l(m){i=n(m,"complex numbers")},m(m,f){_(m,i,f)},d(m){m&&t(i)}}}function Fl(l){let i,m,f,d,g,c,b,w,y,T,E,I=h("0")+"",J,C,U=h("1")+"",ee,j,O,re,se,P,v=h("0")+"",W,z,_e=h("1")+"",te,X,ue,de,ae,A,he,D,Ze=h("|0\\rangle")+"",L,F,et=h("|1\\rangle")+"",me,R,$,k,V,ve,be,oe,ne=h("\\alpha |0\\rangle + \\beta |1\\rangle")+"",we,pe,tt=h("\\alpha")+"",Ne,B,ie=h("\\beta")+"",ce,fe,Z,Ie,Te=h("|0\\rangle")+"",ft,le,Pe=h("\\Vert{\\alpha}\\Vert^2")+"",st,Be,qe=h("|1\\rangle")+"",Y,x,ye=h("\\Vert{\\beta}\\Vert^2")+"",rt,De,ot=h("|0\\rangle")+"",Se,lt,Ue=h("|1\\rangle")+"",Me,at,je=h("\\Vert{\\alpha}\\Vert^2 + \\Vert{\\beta}\\Vert^2 = 1")+"",Vt,$e,xe=h("\\Vert{\\alpha}\\Vert^2")+"",Dt,nt,Re=h("\\Vert{\\beta}\\Vert^2")+"",yt,it,Qe,kt,bt,Ke,Ht,Nt,_t,M,ge,Ge,At,Ot;return c=new hn({props:{hovertext:Ml,$$slots:{default:[Al]},$$scope:{ctx:l}}}),re=new hn({props:{hovertext:kl,$$slots:{default:[Ll]},$$scope:{ctx:l}}}),fe=new hn({props:{hovertext:Hl,$$slots:{default:[Il]},$$scope:{ctx:l}}}),{c(){i=s("h2"),m=a("Qubit states"),f=q(),d=s("p"),g=a("The elementary units of information in classical computing are "),Et(c.$$.fragment),b=a(". As their name suggests, bits represent one single "),w=s("em"),y=a("bit"),T=a(" of information, which means they can take on either of two values "),E=s("span"),J=a(" and "),C=s("span"),ee=a(" at a time."),j=q(),O=s("p"),Et(re.$$.fragment),se=a(" are the quantum computing equivalent of bits. They differ from classical bits - among other things - in that they can take on a multitude of values instead of just "),P=s("span"),W=a(" and "),z=s("span"),te=a(", until that value is "),X=s("em"),ue=a("measured"),de=a(", at which point they behave just like classical bits. To explain what this means exactly, we'll need to introduce some further concepts."),ae=q(),A=s("p"),he=a("Let "),D=s("span"),L=a(" and "),F=s("span"),me=a(" denote the so called "),R=s("em"),$=a("basis states"),k=a(" of a qubit that are the quantum-equivalent of classical bit states. If you look at a qubit directly to learn it's value, you'll see one of these basis states. But while you're not looking - due to it's quantum nature - the state of a qubit may be something more intricate. Generally, it can be expressed as the "),V=s("em"),ve=a("linear combination"),be=a(" of the two basis states: "),oe=s("span"),we=a(". Here, "),pe=s("span"),Ne=a(" and "),B=s("span"),ce=a(" are "),Et(fe.$$.fragment),Z=a(" that indicate the relative weight, with which the two basis states are present in this combination. More precisely, if we now look at the qubit, we'll see the basis state "),Ie=s("span"),ft=a(" with a probability of "),le=s("span"),st=a(", and the basis state "),Be=s("span"),Y=a(" with a probability of "),x=s("span"),rt=a(". Because these probabilities must add up to one - as "),De=s("span"),Se=a(" and "),lt=s("span"),Me=a(" are the only possible outcomes - the equation "),at=s("span"),Vt=a(" must hold for all possible qubit states. Let's call "),$e=s("span"),Dt=a(" and "),nt=s("span"),yt=a(" the "),it=s("em"),Qe=a("measurement probabilities"),kt=a(" of the basis states."),bt=q(),Ke=s("h1"),Ht=a("TODO"),Nt=q(),_t=s("blockquote"),M=s("p"),ge=a("introduce the interactivity")},l(N){i=r(N,"H2",{});var ke=o(i);m=n(ke,"Qubit states"),ke.forEach(t),f=S(N),d=r(N,"P",{});var Je=o(d);g=n(Je,"The elementary units of information in classical computing are "),Tt(c.$$.fragment,Je),b=n(Je,". As their name suggests, bits represent one single "),w=r(Je,"EM",{});var ut=o(w);y=n(ut,"bit"),ut.forEach(t),T=n(Je," of information, which means they can take on either of two values "),E=r(Je,"SPAN",{});var jt=o(E);jt.forEach(t),J=n(Je," and "),C=r(Je,"SPAN",{});var Jt=o(C);Jt.forEach(t),ee=n(Je," at a time."),Je.forEach(t),j=S(N),O=r(N,"P",{});var Xe=o(O);Tt(re.$$.fragment,Xe),se=n(Xe," are the quantum computing equivalent of bits. They differ from classical bits - among other things - in that they can take on a multitude of values instead of just "),P=r(Xe,"SPAN",{});var zt=o(P);zt.forEach(t),W=n(Xe," and "),z=r(Xe,"SPAN",{});var Wt=o(z);Wt.forEach(t),te=n(Xe,", until that value is "),X=r(Xe,"EM",{});var Ce=o(X);ue=n(Ce,"measured"),Ce.forEach(t),de=n(Xe,", at which point they behave just like classical bits. To explain what this means exactly, we'll need to introduce some further concepts."),Xe.forEach(t),ae=S(N),A=r(N,"P",{});var G=o(A);he=n(G,"Let "),D=r(G,"SPAN",{});var Bt=o(D);Bt.forEach(t),L=n(G," and "),F=r(G,"SPAN",{});var Lt=o(F);Lt.forEach(t),me=n(G," denote the so called "),R=r(G,"EM",{});var Zt=o(R);$=n(Zt,"basis states"),Zt.forEach(t),k=n(G," of a qubit that are the quantum-equivalent of classical bit states. If you look at a qubit directly to learn it's value, you'll see one of these basis states. But while you're not looking - due to it's quantum nature - the state of a qubit may be something more intricate. Generally, it can be expressed as the "),V=r(G,"EM",{});var Ut=o(V);ve=n(Ut,"linear combination"),Ut.forEach(t),be=n(G," of the two basis states: "),oe=r(G,"SPAN",{});var Q=o(oe);Q.forEach(t),we=n(G,". Here, "),pe=r(G,"SPAN",{});var He=o(pe);He.forEach(t),Ne=n(G," and "),B=r(G,"SPAN",{});var ht=o(B);ht.forEach(t),ce=n(G," are "),Tt(fe.$$.fragment,G),Z=n(G," that indicate the relative weight, with which the two basis states are present in this combination. More precisely, if we now look at the qubit, we'll see the basis state "),Ie=r(G,"SPAN",{});var Yt=o(Ie);Yt.forEach(t),ft=n(G," with a probability of "),le=r(G,"SPAN",{});var Ae=o(le);Ae.forEach(t),st=n(G,", and the basis state "),Be=r(G,"SPAN",{});var ea=o(Be);ea.forEach(t),Y=n(G," with a probability of "),x=r(G,"SPAN",{});var dt=o(x);dt.forEach(t),rt=n(G,". Because these probabilities must add up to one - as "),De=r(G,"SPAN",{});var ca=o(De);ca.forEach(t),Se=n(G," and "),lt=r(G,"SPAN",{});var Ee=o(lt);Ee.forEach(t),Me=n(G," are the only possible outcomes - the equation "),at=r(G,"SPAN",{});var Rt=o(at);Rt.forEach(t),Vt=n(G," must hold for all possible qubit states. Let's call "),$e=r(G,"SPAN",{});var ua=o($e);ua.forEach(t),Dt=n(G," and "),nt=r(G,"SPAN",{});var ta=o(nt);ta.forEach(t),yt=n(G," the "),it=r(G,"EM",{});var It=o(it);Qe=n(It,"measurement probabilities"),It.forEach(t),kt=n(G," of the basis states."),G.forEach(t),bt=S(N),Ke=r(N,"H1",{});var wa=o(Ke);Ht=n(wa,"TODO"),wa.forEach(t),Nt=S(N),_t=r(N,"BLOCKQUOTE",{});var ha=o(_t);M=r(ha,"P",{});var Xt=o(M);ge=n(Xt,"introduce the interactivity"),Xt.forEach(t),ha.forEach(t)},m(N,ke){_(N,i,ke),e(i,m),_(N,f,ke),_(N,d,ke),e(d,g),$t(c,d,null),e(d,b),e(d,w),e(w,y),e(d,T),e(d,E),E.innerHTML=I,e(d,J),e(d,C),C.innerHTML=U,e(d,ee),_(N,j,ke),_(N,O,ke),$t(re,O,null),e(O,se),e(O,P),P.innerHTML=v,e(O,W),e(O,z),z.innerHTML=_e,e(O,te),e(O,X),e(X,ue),e(O,de),_(N,ae,ke),_(N,A,ke),e(A,he),e(A,D),D.innerHTML=Ze,e(A,L),e(A,F),F.innerHTML=et,e(A,me),e(A,R),e(R,$),e(A,k),e(A,V),e(V,ve),e(A,be),e(A,oe),oe.innerHTML=ne,e(A,we),e(A,pe),pe.innerHTML=tt,e(A,Ne),e(A,B),B.innerHTML=ie,e(A,ce),$t(fe,A,null),e(A,Z),e(A,Ie),Ie.innerHTML=Te,e(A,ft),e(A,le),le.innerHTML=Pe,e(A,st),e(A,Be),Be.innerHTML=qe,e(A,Y),e(A,x),x.innerHTML=ye,e(A,rt),e(A,De),De.innerHTML=ot,e(A,Se),e(A,lt),lt.innerHTML=Ue,e(A,Me),e(A,at),at.innerHTML=je,e(A,Vt),e(A,$e),$e.innerHTML=xe,e(A,Dt),e(A,nt),nt.innerHTML=Re,e(A,yt),e(A,it),e(it,Qe),e(A,kt),_(N,bt,ke),_(N,Ke,ke),e(Ke,Ht),_(N,Nt,ke),_(N,_t,ke),e(_t,M),e(M,ge),Ge=!0,At||(Ot=[u(E,"mouseenter",l[0]),u(C,"mouseenter",l[1]),u(P,"mouseenter",l[2]),u(z,"mouseenter",l[3]),u(D,"mouseenter",l[4]),u(F,"mouseenter",l[5]),u(oe,"mouseenter",l[6]),u(pe,"mouseenter",l[7]),u(B,"mouseenter",l[8]),u(Ie,"mouseenter",l[9]),u(le,"mouseenter",l[10]),u(Be,"mouseenter",l[11]),u(x,"mouseenter",l[12]),u(De,"mouseenter",l[13]),u(lt,"mouseenter",l[14]),u(at,"mouseenter",l[15]),u($e,"mouseenter",l[16]),u(nt,"mouseenter",l[17])],At=!0)},p(N,[ke]){const Je={};ke&262144&&(Je.$$scope={dirty:ke,ctx:N}),c.$set(Je);const ut={};ke&262144&&(ut.$$scope={dirty:ke,ctx:N}),re.$set(ut);const jt={};ke&262144&&(jt.$$scope={dirty:ke,ctx:N}),fe.$set(jt)},i(N){Ge||(Ye(c.$$.fragment,N),Ye(re.$$.fragment,N),Ye(fe.$$.fragment,N),Ge=!0)},o(N){ct(c.$$.fragment,N),ct(re.$$.fragment,N),ct(fe.$$.fragment,N),Ge=!1},d(N){N&&t(i),N&&t(f),N&&t(d),Pt(c),N&&t(j),N&&t(O),Pt(re),N&&t(ae),N&&t(A),Pt(fe),N&&t(bt),N&&t(Ke),N&&t(Nt),N&&t(_t),At=!1,ia(Ot)}}}function vt(l){console.log(l)}function Vl(l){return[()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"]),()=>vt(["a","b"])]}class Ol extends xt{constructor(i){super(),Qt(this,i,Vl,Fl,Ct,{})}}function Bl(l){let i,m,f,d,g,c,b,w,y,T,E,I,J,C,U,ee=h("|0\\rangle")+"",j,O,re=h("|1\\rangle")+"",se,P,v,W,z,_e=h("n")+"",te,X,ue,de,ae,A=h("\\left( \\alpha_1 |0\\rangle + \\beta_1 |1\\rangle \\right) \\otimes ... \\otimes \\left( \\alpha_n |0\\rangle + \\beta_n |1\\rangle \\right)")+"",he,D,Ze=h("\\alpha_k, \\beta_k")+"",L,F,et=h("k")+"",me,R,$=h("\\otimes")+"",k,V,ve,be,oe,ne,we,pe,tt,Ne;return{c(){i=s("h2"),m=a("Multiple qubits"),f=q(),d=s("p"),g=a("As you might have guessed, quantum algorithms require not only one, but several qubits. These qubits may be "),c=s("em"),b=a("independent"),w=a(" from each other, meaning their states can be expressed individually. However, it is possible for multiple qubits to "),y=s("em"),T=a("share"),E=a(" some information with each other, in which case they no longer have states of their own, but represent a unit of information together. This is called "),I=s("em"),J=a("entaglement"),C=a(", and it is another fundamental difference between classical and quantum computing. As an example, two qubits can be entangled in a way that, if we look at one of them and find it's in the basis state "),U=s("span"),j=a(", we learn immediately that the other one must be in the basis state "),O=s("span"),se=a(", and vice versa."),P=q(),v=s("p"),W=a("The joint state of a sequence of "),z=s("span"),te=q(),X=s("em"),ue=a("independent"),de=a(" qubits can be written as "),ae=s("span"),he=a(", where "),D=s("span"),L=a(" are the coefficients associated with the state of the "),F=s("span"),me=a("-th qubit as described above, and the operator "),R=s("span"),k=a(" indicates that none of the qubits are entagled with each other."),V=q(),ve=s("h1"),be=a("TODO"),oe=q(),ne=s("blockquote"),we=s("p"),pe=a("visualize a very simple system and maybe add something about quantum gates")},l(B){i=r(B,"H2",{});var ie=o(i);m=n(ie,"Multiple qubits"),ie.forEach(t),f=S(B),d=r(B,"P",{});var ce=o(d);g=n(ce,"As you might have guessed, quantum algorithms require not only one, but several qubits. These qubits may be "),c=r(ce,"EM",{});var fe=o(c);b=n(fe,"independent"),fe.forEach(t),w=n(ce," from each other, meaning their states can be expressed individually. However, it is possible for multiple qubits to "),y=r(ce,"EM",{});var Z=o(y);T=n(Z,"share"),Z.forEach(t),E=n(ce," some information with each other, in which case they no longer have states of their own, but represent a unit of information together. This is called "),I=r(ce,"EM",{});var Ie=o(I);J=n(Ie,"entaglement"),Ie.forEach(t),C=n(ce,", and it is another fundamental difference between classical and quantum computing. As an example, two qubits can be entangled in a way that, if we look at one of them and find it's in the basis state "),U=r(ce,"SPAN",{});var Te=o(U);Te.forEach(t),j=n(ce,", we learn immediately that the other one must be in the basis state "),O=r(ce,"SPAN",{});var ft=o(O);ft.forEach(t),se=n(ce,", and vice versa."),ce.forEach(t),P=S(B),v=r(B,"P",{});var le=o(v);W=n(le,"The joint state of a sequence of "),z=r(le,"SPAN",{});var Pe=o(z);Pe.forEach(t),te=S(le),X=r(le,"EM",{});var st=o(X);ue=n(st,"independent"),st.forEach(t),de=n(le," qubits can be written as "),ae=r(le,"SPAN",{});var Be=o(ae);Be.forEach(t),he=n(le,", where "),D=r(le,"SPAN",{});var qe=o(D);qe.forEach(t),L=n(le," are the coefficients associated with the state of the "),F=r(le,"SPAN",{});var Y=o(F);Y.forEach(t),me=n(le,"-th qubit as described above, and the operator "),R=r(le,"SPAN",{});var x=o(R);x.forEach(t),k=n(le," indicates that none of the qubits are entagled with each other."),le.forEach(t),V=S(B),ve=r(B,"H1",{});var ye=o(ve);be=n(ye,"TODO"),ye.forEach(t),oe=S(B),ne=r(B,"BLOCKQUOTE",{});var rt=o(ne);we=r(rt,"P",{});var De=o(we);pe=n(De,"visualize a very simple system and maybe add something about quantum gates"),De.forEach(t),rt.forEach(t)},m(B,ie){_(B,i,ie),e(i,m),_(B,f,ie),_(B,d,ie),e(d,g),e(d,c),e(c,b),e(d,w),e(d,y),e(y,T),e(d,E),e(d,I),e(I,J),e(d,C),e(d,U),U.innerHTML=ee,e(d,j),e(d,O),O.innerHTML=re,e(d,se),_(B,P,ie),_(B,v,ie),e(v,W),e(v,z),z.innerHTML=_e,e(v,te),e(v,X),e(X,ue),e(v,de),e(v,ae),ae.innerHTML=A,e(v,he),e(v,D),D.innerHTML=Ze,e(v,L),e(v,F),F.innerHTML=et,e(v,me),e(v,R),R.innerHTML=$,e(v,k),_(B,V,ie),_(B,ve,ie),e(ve,be),_(B,oe,ie),_(B,ne,ie),e(ne,we),e(we,pe),tt||(Ne=[u(U,"mouseenter",l[0]),u(O,"mouseenter",l[1]),u(z,"mouseenter",l[2]),u(ae,"mouseenter",l[3]),u(D,"mouseenter",l[4]),u(F,"mouseenter",l[5]),u(R,"mouseenter",l[6])],tt=!0)},p:wt,i:wt,o:wt,d(B){B&&t(i),B&&t(f),B&&t(d),B&&t(P),B&&t(v),B&&t(V),B&&t(ve),B&&t(oe),B&&t(ne),tt=!1,ia(Ne)}}}function va(l){console.log(l)}function xl(l){return[()=>va(["a","b"]),()=>va(["a","b"]),()=>va(["a","b"]),()=>va(["a","b"]),()=>va(["a","b"]),()=>va(["a","b"]),()=>va(["a","b"])]}class Ql extends xt{constructor(i){super(),Qt(this,i,xl,Bl,Ct,{})}}function Cl(l){let i,m,f,d,g,c,b,w,y;return d=new Ol({}),c=new Sl({}),w=new Ql({}),{c(){i=s("h2"),m=a("Quantum Basics"),f=q(),Et(d.$$.fragment),g=q(),Et(c.$$.fragment),b=q(),Et(w.$$.fragment)},l(T){i=r(T,"H2",{});var E=o(i);m=n(E,"Quantum Basics"),E.forEach(t),f=S(T),Tt(d.$$.fragment,T),g=S(T),Tt(c.$$.fragment,T),b=S(T),Tt(w.$$.fragment,T)},m(T,E){_(T,i,E),e(i,m),_(T,f,E),$t(d,T,E),_(T,g,E),$t(c,T,E),_(T,b,E),$t(w,T,E),y=!0},p:wt,i(T){y||(Ye(d.$$.fragment,T),Ye(c.$$.fragment,T),Ye(w.$$.fragment,T),y=!0)},o(T){ct(d.$$.fragment,T),ct(c.$$.fragment,T),ct(w.$$.fragment,T),y=!1},d(T){T&&t(i),T&&t(f),Pt(d,T),T&&t(g),Pt(c,T),T&&t(b),Pt(w,T)}}}class Dl extends xt{constructor(i){super(),Qt(this,i,null,Cl,Ct,{})}}var jl='<a href="https://en.wikipedia.org/wiki/Periodic_function"><h3 class="text-lg font-semibold">Periodic function</h3></a><p>A <b>periodic function</b> is a function that repeats its values at regular intervals. For example, the trigonometric functions, which repeat at intervals of <span class="mwe-math-element"><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/73efd1f6493490b058097060a572606d2c550a06" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align:-0.338ex;width:2.494ex;height:2.176ex" /></span> radians, are periodic functions. Periodic functions are used throughout science to describe oscillations, waves, and other phenomena that exhibit periodicity. Any function that is not periodic is called <b>aperiodic</b>.</p>';function zl(l){let i;return{c(){i=a("periodic")},l(m){i=n(m,"periodic")},m(m,f){_(m,i,f)},d(m){m&&t(i)}}}function Wl(l){let i,m,f,d,g,c=h("f(r) = a^r \\mod N")+"",b,w,y,T,E,I,J,C=h("\\large a \\in \\mathbb{N}, 1 < a < N")+"",U,ee,j=h("\\large a")+"",O,re,se=h("\\large N")+"",P,v,W=h("\\large 1")+"",z,_e,te=h("a")+"",X,ue,de=h("\\large N")+"",ae,A,he=h("\\large N")+"",D,Ze,L,F,et,me,R=h("\\large a^n \\mod{N}")+"",$,k,V=h("\\large r \\in \\mathbb{N}, 1 < r < N")+"",ve,be,oe=h("\\large a^r \\mod{N} = 1")+"",ne,we,pe=h("\\large a")+"",tt,Ne,B,ie,ce,fe,Z=h("\\large \\gcd({a^{\\frac{r}{2} - 1}}, N)")+"",Ie,Te,ft=h("\\large \\gcd({a^{\\frac{r}{2} + 1}}, N)")+"",le,Pe,st=h("\\gcd")+"",Be,qe,Y,x,ye,rt,De,ot,Se,lt,Ue,Me=h("r")+"",at,je,Vt,$e,xe,Dt=h("r")+"",nt,Re,yt,it,Qe,kt,bt,Ke,Ht,Nt,_t;return f=new hn({props:{hovertext:jl,$$slots:{default:[zl]},$$scope:{ctx:l}}}),{c(){i=s("p"),m=a("So, how does the algorithm work? Below you find a step-by-step description, for now without the quantum part. relies on the "),Et(f.$$.fragment),d=a(" nature of "),g=s("span"),b=a("."),w=q(),y=s("ol"),T=s("li"),E=s("p"),I=a("Pick a random number "),J=s("span"),U=a(" and make sure that "),ee=s("span"),O=a(" and "),re=s("span"),P=a(" are relative primes, meaning their greatest common divisor is "),v=s("span"),z=a(". (In case "),_e=s("span"),X=a(" happens to be a factor of "),ue=s("span"),ae=a(", the entire problem is solved and no further steps are required, but that is highly unlikely for large "),A=s("span"),D=a(".)"),Ze=q(),L=s("li"),F=s("p"),et=a("Find the period of the function "),me=s("span"),$=a(". The period is the smallest "),k=s("span"),ve=a(" such that "),be=s("span"),ne=a(". If the period turns out to be odd, the entire procedure has to be repeated with a different "),we=s("span"),tt=a(" parameter."),Ne=q(),B=s("li"),ie=s("p"),ce=a("If we're lucky and the period is even, the sought factors are "),fe=s("span"),Ie=a(" and "),Te=s("span"),le=a(" (where "),Pe=s("span"),Be=a(" stands for "),qe=s("em"),Y=a("greatest common divisor"),x=a("). For a detailed explanation of why this is true, see the video "),ye=s("a"),rt=a("Hacking at Quantum Speed with Shor's Algorithm"),De=a(" by PBS Infinite Series."),ot=q(),Se=s("p"),lt=a("The problematic part of this procedure that is responsible for the above mentioned exponential scaling is finding the period "),Ue=s("span"),at=a(". Shor's algorithm utilizes a special quantum operation, the so called "),je=s("em"),Vt=a("quantum Fourier transform"),$e=a(", to find "),xe=s("span"),nt=a(" more quickly than any classical algorithm could. This is what we'll elaborate on in the next section."),Re=q(),yt=s("h1"),it=a("TODO"),Qe=q(),kt=s("blockquote"),bt=s("p"),Ke=a("eliminate repetition with FactoringPeriodic block"),this.h()},l(M){i=r(M,"P",{});var ge=o(i);m=n(ge,"So, how does the algorithm work? Below you find a step-by-step description, for now without the quantum part. relies on the "),Tt(f.$$.fragment,ge),d=n(ge," nature of "),g=r(ge,"SPAN",{});var Ge=o(g);Ge.forEach(t),b=n(ge,"."),ge.forEach(t),w=S(M),y=r(M,"OL",{});var At=o(y);T=r(At,"LI",{});var Ot=o(T);E=r(Ot,"P",{});var N=o(E);I=n(N,"Pick a random number "),J=r(N,"SPAN",{});var ke=o(J);ke.forEach(t),U=n(N," and make sure that "),ee=r(N,"SPAN",{});var Je=o(ee);Je.forEach(t),O=n(N," and "),re=r(N,"SPAN",{});var ut=o(re);ut.forEach(t),P=n(N," are relative primes, meaning their greatest common divisor is "),v=r(N,"SPAN",{});var jt=o(v);jt.forEach(t),z=n(N,". (In case "),_e=r(N,"SPAN",{});var Jt=o(_e);Jt.forEach(t),X=n(N," happens to be a factor of "),ue=r(N,"SPAN",{});var Xe=o(ue);Xe.forEach(t),ae=n(N,", the entire problem is solved and no further steps are required, but that is highly unlikely for large "),A=r(N,"SPAN",{});var zt=o(A);zt.forEach(t),D=n(N,".)"),N.forEach(t),Ot.forEach(t),Ze=S(At),L=r(At,"LI",{});var Wt=o(L);F=r(Wt,"P",{});var Ce=o(F);et=n(Ce,"Find the period of the function "),me=r(Ce,"SPAN",{});var G=o(me);G.forEach(t),$=n(Ce,". The period is the smallest "),k=r(Ce,"SPAN",{});var Bt=o(k);Bt.forEach(t),ve=n(Ce," such that "),be=r(Ce,"SPAN",{});var Lt=o(be);Lt.forEach(t),ne=n(Ce,". If the period turns out to be odd, the entire procedure has to be repeated with a different "),we=r(Ce,"SPAN",{});var Zt=o(we);Zt.forEach(t),tt=n(Ce," parameter."),Ce.forEach(t),Wt.forEach(t),Ne=S(At),B=r(At,"LI",{});var Ut=o(B);ie=r(Ut,"P",{});var Q=o(ie);ce=n(Q,"If we're lucky and the period is even, the sought factors are "),fe=r(Q,"SPAN",{});var He=o(fe);He.forEach(t),Ie=n(Q," and "),Te=r(Q,"SPAN",{});var ht=o(Te);ht.forEach(t),le=n(Q," (where "),Pe=r(Q,"SPAN",{});var Yt=o(Pe);Yt.forEach(t),Be=n(Q," stands for "),qe=r(Q,"EM",{});var Ae=o(qe);Y=n(Ae,"greatest common divisor"),Ae.forEach(t),x=n(Q,"). For a detailed explanation of why this is true, see the video "),ye=r(Q,"A",{href:!0});var ea=o(ye);rt=n(ea,"Hacking at Quantum Speed with Shor's Algorithm"),ea.forEach(t),De=n(Q," by PBS Infinite Series."),Q.forEach(t),Ut.forEach(t),At.forEach(t),ot=S(M),Se=r(M,"P",{});var dt=o(Se);lt=n(dt,"The problematic part of this procedure that is responsible for the above mentioned exponential scaling is finding the period "),Ue=r(dt,"SPAN",{});var ca=o(Ue);ca.forEach(t),at=n(dt,". Shor's algorithm utilizes a special quantum operation, the so called "),je=r(dt,"EM",{});var Ee=o(je);Vt=n(Ee,"quantum Fourier transform"),Ee.forEach(t),$e=n(dt,", to find "),xe=r(dt,"SPAN",{});var Rt=o(xe);Rt.forEach(t),nt=n(dt," more quickly than any classical algorithm could. This is what we'll elaborate on in the next section."),dt.forEach(t),Re=S(M),yt=r(M,"H1",{});var ua=o(yt);it=n(ua,"TODO"),ua.forEach(t),Qe=S(M),kt=r(M,"BLOCKQUOTE",{});var ta=o(kt);bt=r(ta,"P",{});var It=o(bt);Ke=n(It,"eliminate repetition with FactoringPeriodic block"),It.forEach(t),ta.forEach(t),this.h()},h(){Le(ye,"href","https://www.youtube.com/watch?v=wUwZZaI5u0c&t=731s")},m(M,ge){_(M,i,ge),e(i,m),$t(f,i,null),e(i,d),e(i,g),g.innerHTML=c,e(i,b),_(M,w,ge),_(M,y,ge),e(y,T),e(T,E),e(E,I),e(E,J),J.innerHTML=C,e(E,U),e(E,ee),ee.innerHTML=j,e(E,O),e(E,re),re.innerHTML=se,e(E,P),e(E,v),v.innerHTML=W,e(E,z),e(E,_e),_e.innerHTML=te,e(E,X),e(E,ue),ue.innerHTML=de,e(E,ae),e(E,A),A.innerHTML=he,e(E,D),e(y,Ze),e(y,L),e(L,F),e(F,et),e(F,me),me.innerHTML=R,e(F,$),e(F,k),k.innerHTML=V,e(F,ve),e(F,be),be.innerHTML=oe,e(F,ne),e(F,we),we.innerHTML=pe,e(F,tt),e(y,Ne),e(y,B),e(B,ie),e(ie,ce),e(ie,fe),fe.innerHTML=Z,e(ie,Ie),e(ie,Te),Te.innerHTML=ft,e(ie,le),e(ie,Pe),Pe.innerHTML=st,e(ie,Be),e(ie,qe),e(qe,Y),e(ie,x),e(ie,ye),e(ye,rt),e(ie,De),_(M,ot,ge),_(M,Se,ge),e(Se,lt),e(Se,Ue),Ue.innerHTML=Me,e(Se,at),e(Se,je),e(je,Vt),e(Se,$e),e(Se,xe),xe.innerHTML=Dt,e(Se,nt),_(M,Re,ge),_(M,yt,ge),e(yt,it),_(M,Qe,ge),_(M,kt,ge),e(kt,bt),e(bt,Ke),Ht=!0,Nt||(_t=[u(g,"mouseenter",l[0]),u(J,"mouseenter",l[1]),u(ee,"mouseenter",l[2]),u(re,"mouseenter",l[3]),u(v,"mouseenter",l[4]),u(_e,"mouseenter",l[5]),u(ue,"mouseenter",l[6]),u(A,"mouseenter",l[7]),u(me,"mouseenter",l[8]),u(k,"mouseenter",l[9]),u(be,"mouseenter",l[10]),u(we,"mouseenter",l[11]),u(fe,"mouseenter",l[12]),u(Te,"mouseenter",l[13]),u(Pe,"mouseenter",l[14]),u(Ue,"mouseenter",l[15]),u(xe,"mouseenter",l[16])],Nt=!0)},p(M,[ge]){const Ge={};ge&131072&&(Ge.$$scope={dirty:ge,ctx:M}),f.$set(Ge)},i(M){Ht||(Ye(f.$$.fragment,M),Ht=!0)},o(M){ct(f.$$.fragment,M),Ht=!1},d(M){M&&t(i),Pt(f),M&&t(w),M&&t(y),M&&t(ot),M&&t(Se),M&&t(Re),M&&t(yt),M&&t(Qe),M&&t(kt),Nt=!1,ia(_t)}}}function gt(l){console.log(l)}function Ul(l){return[()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"]),()=>gt(["a","b"])]}class Rl extends xt{constructor(i){super(),Qt(this,i,Ul,Wl,Ct,{})}}function Kl(l){let i,m,f,d,g;return d=new Rl({}),{c(){i=s("h2"),m=a("Shor's Algorithm"),f=q(),Et(d.$$.fragment)},l(c){i=r(c,"H2",{});var b=o(i);m=n(b,"Shor's Algorithm"),b.forEach(t),f=S(c),Tt(d.$$.fragment,c)},m(c,b){_(c,i,b),e(i,m),_(c,f,b),$t(d,c,b),g=!0},p:wt,i(c){g||(Ye(d.$$.fragment,c),g=!0)},o(c){ct(d.$$.fragment,c),g=!1},d(c){c&&t(i),c&&t(f),Pt(d,c)}}}class Gl extends xt{constructor(i){super(),Qt(this,i,null,Kl,Ct,{})}}function Jl(l){let i,m,f,d,g,c,b,w,y,T,E,I,J,C,U,ee,j,O,re,se;return J=new bl({}),U=new Dl({}),j=new Pl({}),re=new Gl({}),{c(){i=s("div"),m=q(),f=s("main"),d=s("h1"),g=a("Interactive Quantum Computing"),c=q(),b=s("p"),w=a("This page intends to introduce concepts, connect them and derive a practical use case"),y=q(),T=s("h2"),E=a("Clickable Table of Contents"),I=q(),Et(J.$$.fragment),C=q(),Et(U.$$.fragment),ee=q(),Et(j.$$.fragment),O=q(),Et(re.$$.fragment),this.h()},l(P){i=r(P,"DIV",{class:!0}),o(i).forEach(t),m=S(P),f=r(P,"MAIN",{});var v=o(f);d=r(v,"H1",{});var W=o(d);g=n(W,"Interactive Quantum Computing"),W.forEach(t),c=S(v),b=r(v,"P",{});var z=o(b);w=n(z,"This page intends to introduce concepts, connect them and derive a practical use case"),z.forEach(t),y=S(v),T=r(v,"H2",{});var _e=o(T);E=n(_e,"Clickable Table of Contents"),_e.forEach(t),I=S(v),Tt(J.$$.fragment,v),C=S(v),Tt(U.$$.fragment,v),ee=S(v),Tt(j.$$.fragment,v),O=S(v),Tt(re.$$.fragment,v),v.forEach(t),this.h()},h(){Le(i,"class","sidebar")},m(P,v){_(P,i,v),_(P,m,v),_(P,f,v),e(f,d),e(d,g),e(f,c),e(f,b),e(b,w),e(f,y),e(f,T),e(T,E),e(f,I),$t(J,f,null),e(f,C),$t(U,f,null),e(f,ee),$t(j,f,null),e(f,O),$t(re,f,null),se=!0},p:wt,i(P){se||(Ye(J.$$.fragment,P),Ye(U.$$.fragment,P),Ye(j.$$.fragment,P),Ye(re.$$.fragment,P),se=!0)},o(P){ct(J.$$.fragment,P),ct(U.$$.fragment,P),ct(j.$$.fragment,P),ct(re.$$.fragment,P),se=!1},d(P){P&&t(i),P&&t(m),P&&t(f),Pt(J),Pt(U),Pt(j),Pt(re)}}}const Yl=!0;class ei extends xt{constructor(i){super(),Qt(this,i,null,Jl,Ct,{})}}export{ei as default,Yl as prerender};
