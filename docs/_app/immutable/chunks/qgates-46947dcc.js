import{d as n,a as r,E as h,F as t,k as o,b as u,s as m,G as b,H as f,p as d,c as l,D as p}from"./index-ba7e8b36.js";class c{constructor(i,a,e){this.name=i,this.mat=a,this.qubitIndices=e,this.isMulti=()=>this.mat.size()[0]>2}}const w={H:n(r([[1,1],[1,-1]]),h(2)),S:[[1,0],[0,t]],X:[[0,1],[1,0]],Y:[[0,o(-1,t)],[t,0]],Z:[[1,0],[0,-1]],sqrtX:n(r([[u(1,t),m(1,t)],[m(1,t),u(1,t)]]),2),SWAP:[[1,0,0,0],[0,0,1,0],[0,1,0,0],[0,0,0,1]],CNOT:[[1,0,0,0],[0,1,0,0],[0,0,0,1],[0,0,1,0]]},q=Object.fromEntries(Object.entries(w).map(s=>[s[0],i=>new c(s[0],r(s[1]),i)]));function x(s,i){let a=b(f,o(t,s*d)),e=r([[1,0],[0,a]]);return new c(`P(${s.toPrecision(2)} \u03C0)`,e,i)}function C(s,i){let a=s*d/2,e=r([[l(a),o(t,-p(a))],[o(t,-p(a)),l(a)]]);return new c(`Rx(${s.toPrecision(2)} \u03C0)`,e,i)}export{c as Q,q as c,x as p,C as r,w as s};
